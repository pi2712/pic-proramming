

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Thu May 05 10:10:43 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,delta=2
    12                           	psect	text538,local,class=CODE,delta=2
    13                           	psect	text543,local,class=CODE,delta=2
    14                           	psect	text544,local,class=CODE,delta=2
    15                           	psect	text547,local,class=CODE,delta=2
    16                           	psect	text550,local,class=CODE,delta=2
    17                           	psect	text565,local,class=CODE,delta=2
    18                           	psect	text569,local,class=CODE,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text570,local,class=CODE,delta=2
    21                           	psect	pa_nodes,global,class=CODE,delta=2
    22                           	dabs	1,0x7E,2
    23  000A                     	;#
    24                           
    25                           	psect	config
    26  2007  E3E2               	dw	58338	;#
    27                           
    28                           	psect	strings
    29  1000                     __pstrings:	
    30  1000                     stringtab:	
    31                           ;	global	stringdir,stringtab,__stringbase
    32                           
    33  1000                     stringcode:	
    34                           ;	String table - string pointers are 1 byte each
    35                           
    36  1000                     stringdir:	
    37  1000  3010               	movlw	high stringdir
    38  1001  008A               	movwf	10
    39  1002  0804               	movf	4,w
    40  1003  0A84               	incf	4,f
    41  1004  0782               	addwf	2,f
    42  1005                     __stringbase:	
    43  1005  3400               	retlw	0
    44  1006                     __npowers_:	
    45  1006  3400               	retlw	0
    46  1007  3480               	retlw	128
    47  1008  343F               	retlw	63
    48  1009  34CD               	retlw	205
    49  100A  34CC               	retlw	204
    50  100B  343D               	retlw	61
    51  100C  34D7               	retlw	215
    52  100D  3423               	retlw	35
    53  100E  343C               	retlw	60
    54  100F  3412               	retlw	18
    55  1010  3483               	retlw	131
    56  1011  343A               	retlw	58
    57  1012  34B7               	retlw	183
    58  1013  34D1               	retlw	209
    59  1014  3438               	retlw	56
    60  1015  34C6               	retlw	198
    61  1016  3427               	retlw	39
    62  1017  3437               	retlw	55
    63  1018  3438               	retlw	56
    64  1019  3486               	retlw	134
    65  101A  3435               	retlw	53
    66  101B  34C0               	retlw	192
    67  101C  34D6               	retlw	214
    68  101D  3433               	retlw	51
    69  101E  34CC               	retlw	204
    70  101F  342B               	retlw	43
    71  1020  3432               	retlw	50
    72  1021  3470               	retlw	112
    73  1022  3489               	retlw	137
    74  1023  3430               	retlw	48
    75  1024  34E7               	retlw	231
    76  1025  34DB               	retlw	219
    77  1026  342E               	retlw	46
    78  1027  34E5               	retlw	229
    79  1028  343C               	retlw	60
    80  1029  341E               	retlw	30
    81  102A  3442               	retlw	66
    82  102B  34A2               	retlw	162
    83  102C  340D               	retlw	13
    84  102D                     __powers_:	
    85  102D  3400               	retlw	0
    86  102E  3480               	retlw	128
    87  102F  343F               	retlw	63
    88  1030  3400               	retlw	0
    89  1031  3420               	retlw	32
    90  1032  3441               	retlw	65
    91  1033  3400               	retlw	0
    92  1034  34C8               	retlw	200
    93  1035  3442               	retlw	66
    94  1036  3400               	retlw	0
    95  1037  347A               	retlw	122
    96  1038  3444               	retlw	68
    97  1039  3440               	retlw	64
    98  103A  341C               	retlw	28
    99  103B  3446               	retlw	70
   100  103C  3450               	retlw	80
   101  103D  34C3               	retlw	195
   102  103E  3447               	retlw	71
   103  103F  3424               	retlw	36
   104  1040  3474               	retlw	116
   105  1041  3449               	retlw	73
   106  1042  3497               	retlw	151
   107  1043  3418               	retlw	24
   108  1044  344B               	retlw	75
   109  1045  34BC               	retlw	188
   110  1046  34BE               	retlw	190
   111  1047  344C               	retlw	76
   112  1048  346B               	retlw	107
   113  1049  346E               	retlw	110
   114  104A  344E               	retlw	78
   115  104B  3403               	retlw	3
   116  104C  3415               	retlw	21
   117  104D  3450               	retlw	80
   118  104E  3479               	retlw	121
   119  104F  34AD               	retlw	173
   120  1050  3460               	retlw	96
   121  1051  34F3               	retlw	243
   122  1052  3449               	retlw	73
   123  1053  3471               	retlw	113
   124  1054                     _dpowers:	
   125  1054  3401               	retlw	1
   126  1055  3400               	retlw	0
   127  1056  3400               	retlw	0
   128  1057  3400               	retlw	0
   129  1058  340A               	retlw	10
   130  1059  3400               	retlw	0
   131  105A  3400               	retlw	0
   132  105B  3400               	retlw	0
   133  105C  3464               	retlw	100
   134  105D  3400               	retlw	0
   135  105E  3400               	retlw	0
   136  105F  3400               	retlw	0
   137  1060  34E8               	retlw	232
   138  1061  3403               	retlw	3
   139  1062  3400               	retlw	0
   140  1063  3400               	retlw	0
   141  1064  3410               	retlw	16
   142  1065  3427               	retlw	39
   143  1066  3400               	retlw	0
   144  1067  3400               	retlw	0
   145  1068  34A0               	retlw	160
   146  1069  3486               	retlw	134
   147  106A  3401               	retlw	1
   148  106B  3400               	retlw	0
   149  106C  3440               	retlw	64
   150  106D  3442               	retlw	66
   151  106E  340F               	retlw	15
   152  106F  3400               	retlw	0
   153  1070  3480               	retlw	128
   154  1071  3496               	retlw	150
   155  1072  3498               	retlw	152
   156  1073  3400               	retlw	0
   157  1074  3400               	retlw	0
   158  1075  34E1               	retlw	225
   159  1076  34F5               	retlw	245
   160  1077  3405               	retlw	5
   161  1078  3400               	retlw	0
   162  1079  34CA               	retlw	202
   163  107A  349A               	retlw	154
   164  107B  343B               	retlw	59
   165  0015                     _CCPR1	set	21
   166  001B                     _CCPR2	set	27
   167  0016                     _CCPR1H	set	22
   168  0015                     _CCPR1L	set	21
   169  001C                     _CCPR2H	set	28
   170  001B                     _CCPR2L	set	27
   171  000F                     _TMR1H	set	15
   172  000E                     _TMR1L	set	14
   173  0062                     _CCP1IF	set	98
   174  00B8                     _CCP1M0	set	184
   175  00B9                     _CCP1M1	set	185
   176  00BA                     _CCP1M2	set	186
   177  00BB                     _CCP1M3	set	187
   178  0068                     _CCP2IF	set	104
   179  00E8                     _CCP2M0	set	232
   180  00E9                     _CCP2M1	set	233
   181  00EA                     _CCP2M2	set	234
   182  00EB                     _CCP2M3	set	235
   183  005F                     _GIE	set	95
   184  005E                     _PEIE	set	94
   185  0028                     _RA0	set	40
   186  0041                     _RD1	set	65
   187  0042                     _RD2	set	66
   188  0043                     _RD3	set	67
   189  0044                     _RD4	set	68
   190  0045                     _RD5	set	69
   191  0046                     _RD6	set	70
   192  0047                     _RD7	set	71
   193  0084                     _T1CKPS0	set	132
   194  0085                     _T1CKPS1	set	133
   195  0082                     _T1SYNC	set	130
   196  0081                     _TMR1CS	set	129
   197  0086                     _TMR1GE	set	134
   198  0080                     _TMR1ON	set	128
   199  0462                     _CCP1IE	set	1122
   200  0468                     _CCP2IE	set	1128
   201  0428                     _TRISA0	set	1064
   202  0441                     _TRISD1	set	1089
   203  0442                     _TRISD2	set	1090
   204  0443                     _TRISD3	set	1091
   205  0444                     _TRISD4	set	1092
   206  0445                     _TRISD5	set	1093
   207  0446                     _TRISD6	set	1094
   208  0447                     _TRISD7	set	1095
   209  0188                     _ANSEL	set	392
   210  0189                     _ANSELH	set	393
   211  107C                     STR_1:	
   212  107C  3444               	retlw	68	;'D'
   213  107D  3469               	retlw	105	;'i'
   214  107E  3473               	retlw	115	;'s'
   215  107F  3474               	retlw	116	;'t'
   216  1080  3461               	retlw	97	;'a'
   217  1081  346E               	retlw	110	;'n'
   218  1082  3463               	retlw	99	;'c'
   219  1083  3465               	retlw	101	;'e'
   220  1084  343A               	retlw	58	;':'
   221  1085  3420               	retlw	32	;' '
   222  1086  3425               	retlw	37	;'%'
   223  1087  3432               	retlw	50	;'2'
   224  1088  342E               	retlw	46	;'.'
   225  1089  3431               	retlw	49	;'1'
   226  108A  3466               	retlw	102	;'f'
   227  108B  3400               	retlw	0
   228  108C                     STR_2:	
   229  108C  3464               	retlw	100	;'d'
   230  108D  3465               	retlw	101	;'e'
   231  108E  346D               	retlw	109	;'m'
   232  108F  343A               	retlw	58	;':'
   233  1090  3420               	retlw	32	;' '
   234  1091  3425               	retlw	37	;'%'
   235  1092  3435               	retlw	53	;'5'
   236  1093  3475               	retlw	117	;'u'
   237  1094  3400               	retlw	0
   238                           
   239                           	psect	cinit
   240  07A6                     start_initialization:	
   241                           
   242                           ; Clear objects allocated to BANK0
   243  07A6  01E4               	clrf	__pbssBANK0& (0+127)
   244  07A7  01E5               	clrf	(__pbssBANK0+1)& (0+127)
   245  07A8  01E6               	clrf	(__pbssBANK0+2)& (0+127)
   246  07A9  01E7               	clrf	(__pbssBANK0+3)& (0+127)
   247  07AA  01E8               	clrf	(__pbssBANK0+4)& (0+127)
   248  07AB  01E9               	clrf	(__pbssBANK0+5)& (0+127)
   249  07AC  01EA               	clrf	(__pbssBANK0+6)& (0+127)
   250  07AD  01EB               	clrf	(__pbssBANK0+7)& (0+127)
   251  07AE  01EC               	clrf	(__pbssBANK0+8)& (0+127)
   252  07AF                     end_of_initialization:	
   253                           ;End of C runtime variable initialization code
   254                           
   255  07AF  0183               	clrf	3
   256  07B0  160A  118A  2E87   	ljmp	_main	;jump to C main() function
   257                           
   258                           	psect	bssBANK0
   259  0064                     __pbssBANK0:	
   260  0064                     _dis:	
   261  0064                     	ds	3
   262  0067                     _canhlen:	
   263  0067                     	ds	2
   264  0069                     _canhxuong:	
   265  0069                     	ds	2
   266  006B                     _dem:	
   267  006B                     	ds	2
   268                           
   269                           	psect	cstackBANK1
   270  00A0                     __pcstackBANK1:	
   271  00A0                     _printf$3160:	
   272                           
   273                           ; 4 bytes @ 0x0
   274  00A0                     	ds	4
   275  00A4                     printf@ap:	
   276                           
   277                           ; 1 bytes @ 0x4
   278  00A4                     	ds	1
   279  00A5                     printf@integ:	
   280                           
   281                           ; 3 bytes @ 0x5
   282  00A5                     	ds	3
   283  00A8                     printf@flag:	
   284                           
   285                           ; 2 bytes @ 0x8
   286  00A8                     	ds	2
   287  00AA                     printf@f:	
   288                           
   289                           ; 1 bytes @ 0xA
   290  00AA                     	ds	1
   291  00AB                     printf@_val:	
   292                           
   293                           ; 4 bytes @ 0xB
   294  00AB                     	ds	4
   295  00AF                     printf@width:	
   296                           
   297                           ; 2 bytes @ 0xF
   298  00AF                     	ds	2
   299  00B1                     printf@exp:	
   300                           
   301                           ; 2 bytes @ 0x11
   302  00B1                     	ds	2
   303  00B3                     printf@fval:	
   304                           
   305                           ; 3 bytes @ 0x13
   306  00B3                     	ds	3
   307  00B6                     printf@prec:	
   308                           
   309                           ; 2 bytes @ 0x16
   310  00B6                     	ds	2
   311  00B8                     printf@c:	
   312                           
   313                           ; 1 bytes @ 0x18
   314  00B8                     	ds	1
   315                           
   316                           	psect	cstackCOMMON
   317  0070                     __pcstackCOMMON:	
   318  0070                     ?_lcd_init:	
   319  0070                     ?_lcd_putc:	
   320                           ; 0 bytes @ 0x0
   321                           
   322  0070                     ?_isprint:	
   323                           ; 0 bytes @ 0x0
   324                           
   325  0070                     ?_isdigit:	
   326                           ; 1 bit 
   327                           
   328  0070                     ?_ngat:	
   329                           ; 1 bit 
   330                           
   331  0070                     ??_ngat:	
   332                           ; 0 bytes @ 0x0
   333                           
   334  0070                     ?_putch:	
   335                           ; 0 bytes @ 0x0
   336                           
   337  0070                     ?_lcd_busy:	
   338                           ; 0 bytes @ 0x0
   339                           
   340  0070                     ?_main:	
   341                           ; 1 bytes @ 0x0
   342                           
   343                           
   344                           ; 2 bytes @ 0x0
   345  0070                     	ds	2
   346  0072                     ?_lcd_put_byte:	
   347  0072                     ??_lcd_busy:	
   348                           ; 0 bytes @ 0x2
   349                           
   350  0072                     ??_isprint:	
   351                           ; 0 bytes @ 0x2
   352                           
   353  0072                     ??_isdigit:	
   354                           ; 0 bytes @ 0x2
   355                           
   356  0072                     ?___ftge:	
   357                           ; 0 bytes @ 0x2
   358                           
   359  0072                     ?___lbmod:	
   360                           ; 1 bit 
   361                           
   362  0072                     ?___wmul:	
   363                           ; 1 bytes @ 0x2
   364                           
   365  0072                     ?___awmod:	
   366                           ; 2 bytes @ 0x2
   367                           
   368  0072                     ?___ftpack:	
   369                           ; 2 bytes @ 0x2
   370                           
   371  0072                     ?___ftneg:	
   372                           ; 3 bytes @ 0x2
   373                           
   374  0072                     ?__tdiv_to_l_:	
   375                           ; 3 bytes @ 0x2
   376                           
   377  0072                     ?__div_to_l_:	
   378                           ; 4 bytes @ 0x2
   379                           
   380  0072                     ?___lldiv:	
   381                           ; 4 bytes @ 0x2
   382                           
   383  0072                     lcd_put_byte@b:	
   384                           ; 4 bytes @ 0x2
   385                           
   386  0072                     _isdigit$3668:	
   387                           ; 1 bytes @ 0x2
   388                           
   389  0072                     _isprint$3671:	
   390                           ; 1 bytes @ 0x2
   391                           
   392  0072                     ___lbmod@divisor:	
   393                           ; 1 bytes @ 0x2
   394                           
   395  0072                     ___wmul@multiplier:	
   396                           ; 1 bytes @ 0x2
   397                           
   398  0072                     ___awmod@divisor:	
   399                           ; 2 bytes @ 0x2
   400                           
   401  0072                     ___ftneg@f1:	
   402                           ; 2 bytes @ 0x2
   403                           
   404  0072                     ___ftge@ff1:	
   405                           ; 3 bytes @ 0x2
   406                           
   407  0072                     __tdiv_to_l_@f1:	
   408                           ; 3 bytes @ 0x2
   409                           
   410  0072                     __div_to_l_@f1:	
   411                           ; 3 bytes @ 0x2
   412                           
   413  0072                     ___ftpack@arg:	
   414                           ; 3 bytes @ 0x2
   415                           
   416  0072                     ___lldiv@divisor:	
   417                           ; 3 bytes @ 0x2
   418                           
   419                           
   420                           ; 4 bytes @ 0x2
   421  0072                     	ds	1
   422  0073                     ??_lcd_put_byte:	
   423  0073                     ??___lbmod:	
   424                           ; 0 bytes @ 0x3
   425                           
   426  0073                     lcd_busy@busy:	
   427                           ; 0 bytes @ 0x3
   428                           
   429  0073                     isdigit@c:	
   430                           ; 1 bytes @ 0x3
   431                           
   432  0073                     isprint@c:	
   433                           ; 1 bytes @ 0x3
   434                           
   435                           
   436                           ; 1 bytes @ 0x3
   437  0073                     	ds	1
   438  0074                     ___lbmod@dividend:	
   439  0074                     ___wmul@multiplicand:	
   440                           ; 1 bytes @ 0x4
   441                           
   442  0074                     ___awmod@dividend:	
   443                           ; 2 bytes @ 0x4
   444                           
   445                           
   446                           ; 2 bytes @ 0x4
   447  0074                     	ds	1
   448  0075                     ??___ftneg:	
   449  0075                     lcd_put_byte@rs:	
   450                           ; 0 bytes @ 0x5
   451                           
   452  0075                     ___lbmod@counter:	
   453                           ; 1 bytes @ 0x5
   454                           
   455  0075                     ___ftpack@exp:	
   456                           ; 1 bytes @ 0x5
   457                           
   458  0075                     ___ftge@ff2:	
   459                           ; 1 bytes @ 0x5
   460                           
   461  0075                     __tdiv_to_l_@f2:	
   462                           ; 3 bytes @ 0x5
   463                           
   464  0075                     __div_to_l_@f2:	
   465                           ; 3 bytes @ 0x5
   466                           
   467                           
   468                           ; 3 bytes @ 0x5
   469  0075                     	ds	1
   470  0076                     ??___wmul:	
   471  0076                     ??___awmod:	
   472                           ; 0 bytes @ 0x6
   473                           
   474  0076                     lcd_put_byte@temp:	
   475                           ; 0 bytes @ 0x6
   476                           
   477  0076                     ___lbmod@rem:	
   478                           ; 1 bytes @ 0x6
   479                           
   480  0076                     ___awmod@counter:	
   481                           ; 1 bytes @ 0x6
   482                           
   483  0076                     ___ftpack@sign:	
   484                           ; 1 bytes @ 0x6
   485                           
   486  0076                     ___wmul@product:	
   487                           ; 1 bytes @ 0x6
   488                           
   489  0076                     ___lldiv@dividend:	
   490                           ; 2 bytes @ 0x6
   491                           
   492                           
   493                           ; 4 bytes @ 0x6
   494  0076                     	ds	1
   495  0077                     ??_lcd_init:	
   496  0077                     ?_lcd_gotoxy:	
   497                           ; 0 bytes @ 0x7
   498                           
   499  0077                     ??___ftpack:	
   500                           ; 0 bytes @ 0x7
   501                           
   502  0077                     ?___lbdiv:	
   503                           ; 0 bytes @ 0x7
   504                           
   505  0077                     lcd_gotoxy@row:	
   506                           ; 1 bytes @ 0x7
   507                           
   508  0077                     ___lbdiv@divisor:	
   509                           ; 1 bytes @ 0x7
   510                           
   511  0077                     ___awmod@sign:	
   512                           ; 1 bytes @ 0x7
   513                           
   514                           
   515                           ; 1 bytes @ 0x7
   516  0077                     	ds	1
   517  0078                     ??_lcd_gotoxy:	
   518  0078                     ??__tdiv_to_l_:	
   519                           ; 0 bytes @ 0x8
   520                           
   521  0078                     ??___lbdiv:	
   522                           ; 0 bytes @ 0x8
   523                           
   524  0078                     ??___ftge:	
   525                           ; 0 bytes @ 0x8
   526                           
   527  0078                     ?___awdiv:	
   528                           ; 0 bytes @ 0x8
   529                           
   530  0078                     lcd_gotoxy@col:	
   531                           ; 2 bytes @ 0x8
   532                           
   533  0078                     ___lbdiv@dividend:	
   534                           ; 1 bytes @ 0x8
   535                           
   536  0078                     ___awdiv@divisor:	
   537                           ; 1 bytes @ 0x8
   538                           
   539                           
   540                           ; 2 bytes @ 0x8
   541  0078                     	ds	1
   542  0079                     lcd_gotoxy@address:	
   543  0079                     ___lbdiv@counter:	
   544                           ; 1 bytes @ 0x9
   545                           
   546                           
   547                           ; 1 bytes @ 0x9
   548  0079                     	ds	1
   549  007A                     ??_lcd_putc:	
   550  007A                     ??___llmod:	
   551                           ; 0 bytes @ 0xA
   552                           
   553  007A                     ??___lldiv:	
   554                           ; 0 bytes @ 0xA
   555                           
   556  007A                     ??___lwtoft:	
   557                           ; 0 bytes @ 0xA
   558                           
   559  007A                     ??___lltoft:	
   560                           ; 0 bytes @ 0xA
   561                           
   562  007A                     lcd_putc@c:	
   563                           ; 0 bytes @ 0xA
   564                           
   565  007A                     ___lbdiv@quotient:	
   566                           ; 1 bytes @ 0xA
   567                           
   568  007A                     ___llmod@counter:	
   569                           ; 1 bytes @ 0xA
   570                           
   571  007A                     ___lltoft@exp:	
   572                           ; 1 bytes @ 0xA
   573                           
   574  007A                     ___awdiv@dividend:	
   575                           ; 1 bytes @ 0xA
   576                           
   577                           
   578                           ; 2 bytes @ 0xA
   579  007A                     	ds	1
   580  007B                     ??_putch:	
   581  007B                     ?___bmul:	
   582                           ; 0 bytes @ 0xB
   583                           
   584  007B                     putch@c:	
   585                           ; 1 bytes @ 0xB
   586                           
   587  007B                     ___bmul@multiplicand:	
   588                           ; 1 bytes @ 0xB
   589                           
   590                           
   591                           ; 1 bytes @ 0xB
   592  007B                     	ds	1
   593  007C                     ??_fround:	
   594  007C                     ??___bmul:	
   595                           ; 0 bytes @ 0xC
   596                           
   597  007C                     ??___ftsub:	
   598                           ; 0 bytes @ 0xC
   599                           
   600  007C                     ??___awdiv:	
   601                           ; 0 bytes @ 0xC
   602                           
   603                           
   604                           	psect	cstackBANK0
   605  0020                     __pcstackBANK0:	
   606                           ; 0 bytes @ 0xC
   607                           
   608  0020                     ??__div_to_l_:	
   609  0020                     ?___lwtoft:	
   610                           ; 0 bytes @ 0x0
   611                           
   612  0020                     ?___lltoft:	
   613                           ; 3 bytes @ 0x0
   614                           
   615  0020                     ___bmul@product:	
   616                           ; 3 bytes @ 0x0
   617                           
   618  0020                     ___awdiv@counter:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0020                     ___lwtoft@c:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0020                     ___lldiv@quotient:	
   625                           ; 2 bytes @ 0x0
   626                           
   627  0020                     ___lltoft@c:	
   628                           ; 4 bytes @ 0x0
   629                           
   630  0020                     __tdiv_to_l_@quot:	
   631                           ; 4 bytes @ 0x0
   632                           
   633                           
   634                           ; 4 bytes @ 0x0
   635  0020                     	ds	1
   636  0021                     ___bmul@multiplier:	
   637  0021                     ___awdiv@sign:	
   638                           ; 1 bytes @ 0x1
   639                           
   640                           
   641                           ; 1 bytes @ 0x1
   642  0021                     	ds	1
   643  0022                     ___awdiv@quotient:	
   644                           
   645                           ; 2 bytes @ 0x2
   646  0022                     	ds	1
   647  0023                     ?___ftdiv:	
   648  0023                     ___ftdiv@f2:	
   649                           ; 3 bytes @ 0x3
   650                           
   651                           
   652                           ; 3 bytes @ 0x3
   653  0023                     	ds	1
   654  0024                     ?___fttol:	
   655  0024                     ___lldiv@counter:	
   656                           ; 4 bytes @ 0x4
   657                           
   658  0024                     __tdiv_to_l_@cntr:	
   659                           ; 1 bytes @ 0x4
   660                           
   661  0024                     ___fttol@f1:	
   662                           ; 1 bytes @ 0x4
   663                           
   664                           
   665                           ; 3 bytes @ 0x4
   666  0024                     	ds	1
   667  0025                     ?___llmod:	
   668  0025                     __tdiv_to_l_@exp1:	
   669                           ; 4 bytes @ 0x5
   670                           
   671  0025                     ___llmod@divisor:	
   672                           ; 1 bytes @ 0x5
   673                           
   674                           
   675                           ; 4 bytes @ 0x5
   676  0025                     	ds	1
   677  0026                     ___ftdiv@f1:	
   678                           
   679                           ; 3 bytes @ 0x6
   680  0026                     	ds	2
   681  0028                     ??___fttol:	
   682  0028                     __div_to_l_@quot:	
   683                           ; 0 bytes @ 0x8
   684                           
   685                           
   686                           ; 4 bytes @ 0x8
   687  0028                     	ds	1
   688  0029                     ??___ftdiv:	
   689  0029                     ___llmod@dividend:	
   690                           ; 0 bytes @ 0x9
   691                           
   692                           
   693                           ; 4 bytes @ 0x9
   694  0029                     	ds	2
   695  002B                     ___fttol@sign1:	
   696                           
   697                           ; 1 bytes @ 0xB
   698  002B                     	ds	1
   699  002C                     ___ftdiv@cntr:	
   700  002C                     __div_to_l_@cntr:	
   701                           ; 1 bytes @ 0xC
   702                           
   703  002C                     ___fttol@lval:	
   704                           ; 1 bytes @ 0xC
   705                           
   706                           
   707                           ; 4 bytes @ 0xC
   708  002C                     	ds	1
   709  002D                     __div_to_l_@exp1:	
   710  002D                     ___ftdiv@f3:	
   711                           ; 1 bytes @ 0xD
   712                           
   713                           
   714                           ; 3 bytes @ 0xD
   715  002D                     	ds	3
   716  0030                     ___ftdiv@exp:	
   717  0030                     ___fttol@exp1:	
   718                           ; 1 bytes @ 0x10
   719                           
   720                           
   721                           ; 1 bytes @ 0x10
   722  0030                     	ds	1
   723  0031                     ___ftdiv@sign:	
   724                           
   725                           ; 1 bytes @ 0x11
   726  0031                     	ds	1
   727  0032                     ?___ftmul:	
   728  0032                     ___ftmul@f1:	
   729                           ; 3 bytes @ 0x12
   730                           
   731                           
   732                           ; 3 bytes @ 0x12
   733  0032                     	ds	3
   734  0035                     ___ftmul@f2:	
   735                           
   736                           ; 3 bytes @ 0x15
   737  0035                     	ds	3
   738  0038                     ??___ftmul:	
   739                           
   740                           ; 0 bytes @ 0x18
   741  0038                     	ds	3
   742  003B                     ___ftmul@exp:	
   743                           
   744                           ; 1 bytes @ 0x1B
   745  003B                     	ds	1
   746  003C                     ___ftmul@f3_as_product:	
   747                           
   748                           ; 3 bytes @ 0x1C
   749  003C                     	ds	3
   750  003F                     ___ftmul@cntr:	
   751                           
   752                           ; 1 bytes @ 0x1F
   753  003F                     	ds	1
   754  0040                     ___ftmul@sign:	
   755                           
   756                           ; 1 bytes @ 0x20
   757  0040                     	ds	1
   758  0041                     ?_scale:	
   759  0041                     ?___ftadd:	
   760                           ; 3 bytes @ 0x21
   761                           
   762  0041                     ___ftadd@f1:	
   763                           ; 3 bytes @ 0x21
   764                           
   765                           
   766                           ; 3 bytes @ 0x21
   767  0041                     	ds	3
   768  0044                     ??_scale:	
   769  0044                     ___ftadd@f2:	
   770                           ; 0 bytes @ 0x24
   771                           
   772                           
   773                           ; 3 bytes @ 0x24
   774  0044                     	ds	3
   775  0047                     ??___ftadd:	
   776                           
   777                           ; 0 bytes @ 0x27
   778  0047                     	ds	1
   779  0048                     _scale$4108:	
   780                           
   781                           ; 3 bytes @ 0x28
   782  0048                     	ds	2
   783  004A                     ___ftadd@sign:	
   784                           
   785                           ; 1 bytes @ 0x2A
   786  004A                     	ds	1
   787  004B                     scale@scl:	
   788  004B                     ___ftadd@exp2:	
   789                           ; 1 bytes @ 0x2B
   790                           
   791                           
   792                           ; 1 bytes @ 0x2B
   793  004B                     	ds	1
   794  004C                     ___ftadd@exp1:	
   795                           
   796                           ; 1 bytes @ 0x2C
   797  004C                     	ds	1
   798  004D                     ?_fround:	
   799  004D                     ?___ftsub:	
   800                           ; 3 bytes @ 0x2D
   801                           
   802  004D                     ___ftsub@f2:	
   803                           ; 3 bytes @ 0x2D
   804                           
   805                           
   806                           ; 3 bytes @ 0x2D
   807  004D                     	ds	3
   808  0050                     ___ftsub@f1:	
   809  0050                     _fround$4107:	
   810                           ; 3 bytes @ 0x30
   811                           
   812                           
   813                           ; 3 bytes @ 0x30
   814  0050                     	ds	3
   815  0053                     _fround$4106:	
   816                           
   817                           ; 3 bytes @ 0x33
   818  0053                     	ds	3
   819  0056                     fround@prec:	
   820                           
   821                           ; 1 bytes @ 0x36
   822  0056                     	ds	1
   823  0057                     ?_printf:	
   824                           
   825                           ; 2 bytes @ 0x37
   826  0057                     	ds	3
   827  005A                     ??_printf:	
   828                           
   829                           ; 0 bytes @ 0x3A
   830  005A                     	ds	5
   831  005F                     ??_main:	
   832                           
   833                           ; 0 bytes @ 0x3F
   834  005F                     	ds	2
   835  0061                     _main$4105:	
   836                           
   837                           ; 3 bytes @ 0x41
   838  0061                     	ds	3
   839                           
   840                           	psect	maintext
   841  1687                     __pmaintext:	
   842 ;;Data sizes: Strings 25, constant 118, data 0, bss 9, persistent 0 stack 0
   843 ;;Auto spaces:   Size  Autos    Used
   844 ;; COMMON          14     12      12
   845 ;; BANK0           80     68      77
   846 ;; BANK1           80     25      25
   847 ;; BANK3           96      0       0
   848 ;; BANK2           96      0       0
   849 ;;
   850 ;; Pointer list with targets:
   851 ;; ?___ftpack	float  size(1) Largest target is 0
   852 ;;
   853 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   854 ;;
   855 ;; ?___llmod	unsigned long  size(1) Largest target is 0
   856 ;;
   857 ;; ?___ftsub	float  size(1) Largest target is 0
   858 ;;
   859 ;; ?___lltoft	float  size(1) Largest target is 0
   860 ;;
   861 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
   862 ;;
   863 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
   864 ;;
   865 ;; ?___fttol	long  size(1) Largest target is 0
   866 ;;
   867 ;; ?___ftadd	float  size(1) Largest target is 0
   868 ;;
   869 ;; ?___ftneg	float  size(1) Largest target is 0
   870 ;;
   871 ;; ?___awmod	int  size(1) Largest target is 40
   872 ;;		 -> dpowers(CODE[40]), 
   873 ;;
   874 ;; ?___awdiv	int  size(1) Largest target is 0
   875 ;;
   876 ;; ?_scale	int  size(1) Largest target is 0
   877 ;;
   878 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   879 ;;
   880 ;; ?_fround	unsigned int  size(1) Largest target is 0
   881 ;;
   882 ;; ?___lwtoft	float  size(1) Largest target is 0
   883 ;;
   884 ;; ?___ftdiv	float  size(1) Largest target is 0
   885 ;;
   886 ;; ?___ftmul	float  size(1) Largest target is 0
   887 ;;
   888 ;; printf@f	PTR const unsigned char  size(1) Largest target is 16
   889 ;;		 -> STR_2(CODE[9]), STR_1(CODE[16]), 
   890 ;;
   891 ;; ?_printf	int  size(1) Largest target is 0
   892 ;;
   893 ;; printf@ap	PTR void [1] size(1) Largest target is 2
   894 ;;		 -> ?_printf(BANK0[2]), 
   895 ;;
   896 ;; S3149$_cp	PTR const unsigned char  size(1) Largest target is 0
   897 ;;
   898 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   899 ;;
   900 ;;
   901 ;; Critical Paths under _main in COMMON
   902 ;;
   903 ;;   _printf->_putch
   904 ;;   _printf->___awdiv
   905 ;;   _putch->_lcd_putc
   906 ;;   _lcd_putc->_lcd_gotoxy
   907 ;;   _scale->___awdiv
   908 ;;   _scale->___bmul
   909 ;;   _fround->___bmul
   910 ;;   _lcd_gotoxy->_lcd_put_byte
   911 ;;   _lcd_init->_lcd_put_byte
   912 ;;   ___lltoft->___ftpack
   913 ;;   ___lwtoft->___ftpack
   914 ;;   ___ftmul->___awdiv
   915 ;;   ___ftmul->___bmul
   916 ;;   ___ftdiv->___ftpack
   917 ;;   ___ftadd->___bmul
   918 ;;   ___llmod->___lldiv
   919 ;;   ___awdiv->___awmod
   920 ;;   ___fttol->___awdiv
   921 ;;   ___fttol->___bmul
   922 ;;   ___lbdiv->___lbmod
   923 ;;   ___bmul->___lbdiv
   924 ;;
   925 ;; Critical Paths under _ngat in COMMON
   926 ;;
   927 ;;   None.
   928 ;;
   929 ;; Critical Paths under _main in BANK0
   930 ;;
   931 ;;   _main->_printf
   932 ;;   _printf->_fround
   933 ;;   ___ftsub->___ftadd
   934 ;;   _scale->___ftmul
   935 ;;   _fround->___ftadd
   936 ;;   ___ftmul->___ftdiv
   937 ;;   ___ftdiv->___lwtoft
   938 ;;   ___ftadd->___ftmul
   939 ;;   ___llmod->___lldiv
   940 ;;   ___fttol->___awdiv
   941 ;;
   942 ;; Critical Paths under _ngat in BANK0
   943 ;;
   944 ;;   None.
   945 ;;
   946 ;; Critical Paths under _main in BANK1
   947 ;;
   948 ;;   _main->_printf
   949 ;;
   950 ;; Critical Paths under _ngat in BANK1
   951 ;;
   952 ;;   None.
   953 ;;
   954 ;; Critical Paths under _main in BANK3
   955 ;;
   956 ;;   None.
   957 ;;
   958 ;; Critical Paths under _ngat in BANK3
   959 ;;
   960 ;;   None.
   961 ;;
   962 ;; Critical Paths under _main in BANK2
   963 ;;
   964 ;;   None.
   965 ;;
   966 ;; Critical Paths under _ngat in BANK2
   967 ;;
   968 ;;   None.
   969 ;;
   970 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   971 ;;
   972 ;;
   973 ;;Call Graph Tables:
   974 ;;
   975 ;; ---------------------------------------------------------------------------------
   976 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   977 ;; ---------------------------------------------------------------------------------
   978 ;; (0) _main                                                 5     5      0   12642
   979 ;;                                             63 BANK0      5     5      0
   980 ;;                           _lcd_init
   981 ;;                           ___lwtoft
   982 ;;                            ___ftdiv
   983 ;;                            ___ftmul
   984 ;;                         _lcd_gotoxy
   985 ;;                             _printf
   986 ;; ---------------------------------------------------------------------------------
   987 ;; (1) _printf                                              37    34      3   10807
   988 ;;                                             55 BANK0      8     5      3
   989 ;;                                              0 BANK1     25    25      0
   990 ;;                              _putch
   991 ;;                            _isdigit
   992 ;;                             ___wmul
   993 ;;                             ___ftge
   994 ;;                            ___ftneg
   995 ;;                            ___awdiv
   996 ;;                              _scale
   997 ;;                            ___ftmul
   998 ;;                             _fround
   999 ;;                            ___ftadd
  1000 ;;                            ___fttol
  1001 ;;                         __div_to_l_
  1002 ;;                        __tdiv_to_l_
  1003 ;;                           ___lltoft
  1004 ;;                            ___ftsub
  1005 ;;                            ___lldiv
  1006 ;;                            ___llmod
  1007 ;; ---------------------------------------------------------------------------------
  1008 ;; (2) _putch                                                1     1      0     713
  1009 ;;                                             11 COMMON     1     1      0
  1010 ;;                           _lcd_putc
  1011 ;; ---------------------------------------------------------------------------------
  1012 ;; (3) _lcd_putc                                             1     1      0     691
  1013 ;;                                             10 COMMON     1     1      0
  1014 ;;                       _lcd_put_byte
  1015 ;;                           _lcd_busy
  1016 ;;                         _lcd_gotoxy
  1017 ;;                            _isprint
  1018 ;; ---------------------------------------------------------------------------------
  1019 ;; (2) ___ftsub                                              6     0      6    1094
  1020 ;;                                             45 BANK0      6     0      6
  1021 ;;                            ___ftadd
  1022 ;;                           ___lltoft (ARG)
  1023 ;; ---------------------------------------------------------------------------------
  1024 ;; (2) _scale                                               14    11      3    1688
  1025 ;;                                             33 BANK0     11     8      3
  1026 ;;                            ___awmod
  1027 ;;                            ___awdiv
  1028 ;;                            ___ftmul
  1029 ;;                             ___bmul
  1030 ;;                            ___fttol (ARG)
  1031 ;; ---------------------------------------------------------------------------------
  1032 ;; (2) _fround                                              13    10      3    1215
  1033 ;;                                             45 BANK0     10     7      3
  1034 ;;                            ___lbmod
  1035 ;;                             ___bmul
  1036 ;;                            ___lbdiv
  1037 ;;                            ___ftmul
  1038 ;;                            ___ftadd (ARG)
  1039 ;; ---------------------------------------------------------------------------------
  1040 ;; (4) _lcd_gotoxy                                           3     2      1     313
  1041 ;;                                              7 COMMON     3     2      1
  1042 ;;                       _lcd_put_byte
  1043 ;;                           _lcd_busy
  1044 ;; ---------------------------------------------------------------------------------
  1045 ;; (1) _lcd_init                                             4     4      0     244
  1046 ;;                                              7 COMMON     3     3      0
  1047 ;;                       _lcd_put_byte
  1048 ;;                           _lcd_busy
  1049 ;; ---------------------------------------------------------------------------------
  1050 ;; (2) ___lltoft                                             5     1      4     278
  1051 ;;                                             10 COMMON     1     1      0
  1052 ;;                                              0 BANK0      4     0      4
  1053 ;;                           ___ftpack
  1054 ;; ---------------------------------------------------------------------------------
  1055 ;; (1) ___lwtoft                                             3     0      3     231
  1056 ;;                                              0 BANK0      3     0      3
  1057 ;;                           ___ftpack
  1058 ;; ---------------------------------------------------------------------------------
  1059 ;; (3) ___ftmul                                             15     9      6     535
  1060 ;;                                             18 BANK0     15     9      6
  1061 ;;                           ___ftpack
  1062 ;;                            ___ftdiv (ARG)
  1063 ;;                           ___lwtoft (ARG)
  1064 ;;                            ___fttol (ARG)
  1065 ;;                            ___awdiv (ARG)
  1066 ;;                            ___awmod (ARG)
  1067 ;;                             ___bmul (ARG)
  1068 ;;                            ___lbdiv (ARG)
  1069 ;;                            ___lbmod (ARG)
  1070 ;; ---------------------------------------------------------------------------------
  1071 ;; (1) ___ftdiv                                             15     9      6     489
  1072 ;;                                              3 BANK0     15     9      6
  1073 ;;                           ___ftpack
  1074 ;;                           ___lwtoft (ARG)
  1075 ;; ---------------------------------------------------------------------------------
  1076 ;; (3) ___ftadd                                             12     6      6    1049
  1077 ;;                                             33 BANK0     12     6      6
  1078 ;;                           ___ftpack
  1079 ;;                            ___lbmod (ARG)
  1080 ;;                             ___bmul (ARG)
  1081 ;;                            ___lbdiv (ARG)
  1082 ;;                            ___ftmul (ARG)
  1083 ;; ---------------------------------------------------------------------------------
  1084 ;; (5) _lcd_busy                                             2     2      0      23
  1085 ;;                                              2 COMMON     2     2      0
  1086 ;; ---------------------------------------------------------------------------------
  1087 ;; (5) _lcd_put_byte                                         5     4      1     221
  1088 ;;                                              2 COMMON     5     4      1
  1089 ;; ---------------------------------------------------------------------------------
  1090 ;; (3) ___awmod                                              6     2      4     296
  1091 ;;                                              2 COMMON     6     2      4
  1092 ;; ---------------------------------------------------------------------------------
  1093 ;; (2) ___lldiv                                             13     5      8     162
  1094 ;;                                              2 COMMON     8     0      8
  1095 ;;                                              0 BANK0      5     5      0
  1096 ;; ---------------------------------------------------------------------------------
  1097 ;; (2) ___ftge                                               6     0      6     136
  1098 ;;                                              2 COMMON     6     0      6
  1099 ;; ---------------------------------------------------------------------------------
  1100 ;; (2) ___ftneg                                              3     0      3      45
  1101 ;;                                              2 COMMON     3     0      3
  1102 ;; ---------------------------------------------------------------------------------
  1103 ;; (2) ___llmod                                              9     1      8     159
  1104 ;;                                             10 COMMON     1     1      0
  1105 ;;                                              5 BANK0      8     0      8
  1106 ;;                            ___lldiv (ARG)
  1107 ;; ---------------------------------------------------------------------------------
  1108 ;; (3) ___awdiv                                              8     4      4     300
  1109 ;;                                              8 COMMON     4     0      4
  1110 ;;                                              0 BANK0      4     4      0
  1111 ;;                            ___awmod (ARG)
  1112 ;; ---------------------------------------------------------------------------------
  1113 ;; (2) ___fttol                                             13     9      4     252
  1114 ;;                                              4 BANK0     13     9      4
  1115 ;;                           ___ftpack (ARG)
  1116 ;;                            ___awmod (ARG)
  1117 ;;                            ___awdiv (ARG)
  1118 ;;                             ___bmul (ARG)
  1119 ;; ---------------------------------------------------------------------------------
  1120 ;; (4) ___ftpack                                             8     3      5     209
  1121 ;;                                              2 COMMON     8     3      5
  1122 ;; ---------------------------------------------------------------------------------
  1123 ;; (3) ___lbmod                                              5     4      1     159
  1124 ;;                                              2 COMMON     5     4      1
  1125 ;; ---------------------------------------------------------------------------------
  1126 ;; (3) ___lbdiv                                              4     3      1     162
  1127 ;;                                              7 COMMON     4     3      1
  1128 ;;                            ___lbmod (ARG)
  1129 ;; ---------------------------------------------------------------------------------
  1130 ;; (2) ___wmul                                               6     2      4      92
  1131 ;;                                              2 COMMON     6     2      4
  1132 ;; ---------------------------------------------------------------------------------
  1133 ;; (3) ___bmul                                               3     2      1      68
  1134 ;;                                             11 COMMON     1     0      1
  1135 ;;                                              0 BANK0      2     2      0
  1136 ;;                            ___lbmod (ARG)
  1137 ;;                            ___lbdiv (ARG)
  1138 ;; ---------------------------------------------------------------------------------
  1139 ;; (2) __div_to_l_                                          20    14      6     446
  1140 ;;                                              2 COMMON     6     0      6
  1141 ;;                                              0 BANK0     14    14      0
  1142 ;; ---------------------------------------------------------------------------------
  1143 ;; (2) __tdiv_to_l_                                         15     9      6     303
  1144 ;;                                              2 COMMON     9     3      6
  1145 ;;                                              0 BANK0      6     6      0
  1146 ;; ---------------------------------------------------------------------------------
  1147 ;; (2) _isdigit                                              2     2      0      68
  1148 ;;                                              2 COMMON     2     2      0
  1149 ;; ---------------------------------------------------------------------------------
  1150 ;; (4) _isprint                                              2     2      0      68
  1151 ;;                                              2 COMMON     2     2      0
  1152 ;; ---------------------------------------------------------------------------------
  1153 ;; Estimated maximum stack depth 5
  1154 ;; ---------------------------------------------------------------------------------
  1155 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1156 ;; ---------------------------------------------------------------------------------
  1157 ;; (6) _ngat                                                 2     2      0       0
  1158 ;;                                              0 COMMON     2     2      0
  1159 ;; ---------------------------------------------------------------------------------
  1160 ;; Estimated maximum stack depth 6
  1161 ;; ---------------------------------------------------------------------------------
  1162 ;; Call Graph Graphs:
  1163 ;; _main (ROOT)
  1164 ;;   _lcd_init
  1165 ;;     _lcd_put_byte
  1166 ;;     _lcd_busy
  1167 ;;   ___lwtoft
  1168 ;;     ___ftpack
  1169 ;;   ___ftdiv
  1170 ;;     ___ftpack
  1171 ;;     ___lwtoft (ARG)
  1172 ;;       ___ftpack
  1173 ;;   ___ftmul
  1174 ;;     ___ftpack
  1175 ;;     ___ftdiv (ARG)
  1176 ;;       ___ftpack
  1177 ;;       ___lwtoft (ARG)
  1178 ;;         ___ftpack
  1179 ;;     ___lwtoft (ARG)
  1180 ;;       ___ftpack
  1181 ;;     ___fttol (ARG)
  1182 ;;       ___ftpack (ARG)
  1183 ;;       ___awmod (ARG)
  1184 ;;       ___awdiv (ARG)
  1185 ;;         ___awmod (ARG)
  1186 ;;       ___bmul (ARG)
  1187 ;;         ___lbmod (ARG)
  1188 ;;         ___lbdiv (ARG)
  1189 ;;           ___lbmod (ARG)
  1190 ;;     ___awdiv (ARG)
  1191 ;;       ___awmod (ARG)
  1192 ;;     ___awmod (ARG)
  1193 ;;     ___bmul (ARG)
  1194 ;;       ___lbmod (ARG)
  1195 ;;       ___lbdiv (ARG)
  1196 ;;         ___lbmod (ARG)
  1197 ;;     ___lbdiv (ARG)
  1198 ;;       ___lbmod (ARG)
  1199 ;;     ___lbmod (ARG)
  1200 ;;   _lcd_gotoxy
  1201 ;;     _lcd_put_byte
  1202 ;;     _lcd_busy
  1203 ;;   _printf
  1204 ;;     _putch
  1205 ;;       _lcd_putc
  1206 ;;         _lcd_put_byte
  1207 ;;         _lcd_busy
  1208 ;;         _lcd_gotoxy
  1209 ;;           _lcd_put_byte
  1210 ;;           _lcd_busy
  1211 ;;         _isprint
  1212 ;;     _isdigit
  1213 ;;     ___wmul
  1214 ;;     ___ftge
  1215 ;;     ___ftneg
  1216 ;;     ___awdiv
  1217 ;;       ___awmod (ARG)
  1218 ;;     _scale
  1219 ;;       ___awmod
  1220 ;;       ___awdiv
  1221 ;;         ___awmod (ARG)
  1222 ;;       ___ftmul
  1223 ;;         ___ftpack
  1224 ;;         ___ftdiv (ARG)
  1225 ;;           ___ftpack
  1226 ;;           ___lwtoft (ARG)
  1227 ;;             ___ftpack
  1228 ;;         ___lwtoft (ARG)
  1229 ;;           ___ftpack
  1230 ;;         ___fttol (ARG)
  1231 ;;           ___ftpack (ARG)
  1232 ;;           ___awmod (ARG)
  1233 ;;           ___awdiv (ARG)
  1234 ;;             ___awmod (ARG)
  1235 ;;           ___bmul (ARG)
  1236 ;;             ___lbmod (ARG)
  1237 ;;             ___lbdiv (ARG)
  1238 ;;               ___lbmod (ARG)
  1239 ;;         ___awdiv (ARG)
  1240 ;;           ___awmod (ARG)
  1241 ;;         ___awmod (ARG)
  1242 ;;         ___bmul (ARG)
  1243 ;;           ___lbmod (ARG)
  1244 ;;           ___lbdiv (ARG)
  1245 ;;             ___lbmod (ARG)
  1246 ;;         ___lbdiv (ARG)
  1247 ;;           ___lbmod (ARG)
  1248 ;;         ___lbmod (ARG)
  1249 ;;       ___bmul
  1250 ;;         ___lbmod (ARG)
  1251 ;;         ___lbdiv (ARG)
  1252 ;;           ___lbmod (ARG)
  1253 ;;       ___fttol (ARG)
  1254 ;;         ___ftpack (ARG)
  1255 ;;         ___awmod (ARG)
  1256 ;;         ___awdiv (ARG)
  1257 ;;           ___awmod (ARG)
  1258 ;;         ___bmul (ARG)
  1259 ;;           ___lbmod (ARG)
  1260 ;;           ___lbdiv (ARG)
  1261 ;;             ___lbmod (ARG)
  1262 ;;     ___ftmul
  1263 ;;       ___ftpack
  1264 ;;       ___ftdiv (ARG)
  1265 ;;         ___ftpack
  1266 ;;         ___lwtoft (ARG)
  1267 ;;           ___ftpack
  1268 ;;       ___lwtoft (ARG)
  1269 ;;         ___ftpack
  1270 ;;       ___fttol (ARG)
  1271 ;;         ___ftpack (ARG)
  1272 ;;         ___awmod (ARG)
  1273 ;;         ___awdiv (ARG)
  1274 ;;           ___awmod (ARG)
  1275 ;;         ___bmul (ARG)
  1276 ;;           ___lbmod (ARG)
  1277 ;;           ___lbdiv (ARG)
  1278 ;;             ___lbmod (ARG)
  1279 ;;       ___awdiv (ARG)
  1280 ;;         ___awmod (ARG)
  1281 ;;       ___awmod (ARG)
  1282 ;;       ___bmul (ARG)
  1283 ;;         ___lbmod (ARG)
  1284 ;;         ___lbdiv (ARG)
  1285 ;;           ___lbmod (ARG)
  1286 ;;       ___lbdiv (ARG)
  1287 ;;         ___lbmod (ARG)
  1288 ;;       ___lbmod (ARG)
  1289 ;;     _fround
  1290 ;;       ___lbmod
  1291 ;;       ___bmul
  1292 ;;         ___lbmod (ARG)
  1293 ;;         ___lbdiv (ARG)
  1294 ;;           ___lbmod (ARG)
  1295 ;;       ___lbdiv
  1296 ;;         ___lbmod (ARG)
  1297 ;;       ___ftmul
  1298 ;;         ___ftpack
  1299 ;;         ___ftdiv (ARG)
  1300 ;;           ___ftpack
  1301 ;;           ___lwtoft (ARG)
  1302 ;;             ___ftpack
  1303 ;;         ___lwtoft (ARG)
  1304 ;;           ___ftpack
  1305 ;;         ___fttol (ARG)
  1306 ;;           ___ftpack (ARG)
  1307 ;;           ___awmod (ARG)
  1308 ;;           ___awdiv (ARG)
  1309 ;;             ___awmod (ARG)
  1310 ;;           ___bmul (ARG)
  1311 ;;             ___lbmod (ARG)
  1312 ;;             ___lbdiv (ARG)
  1313 ;;               ___lbmod (ARG)
  1314 ;;         ___awdiv (ARG)
  1315 ;;           ___awmod (ARG)
  1316 ;;         ___awmod (ARG)
  1317 ;;         ___bmul (ARG)
  1318 ;;           ___lbmod (ARG)
  1319 ;;           ___lbdiv (ARG)
  1320 ;;             ___lbmod (ARG)
  1321 ;;         ___lbdiv (ARG)
  1322 ;;           ___lbmod (ARG)
  1323 ;;         ___lbmod (ARG)
  1324 ;;       ___ftadd (ARG)
  1325 ;;         ___ftpack
  1326 ;;         ___lbmod (ARG)
  1327 ;;         ___bmul (ARG)
  1328 ;;           ___lbmod (ARG)
  1329 ;;           ___lbdiv (ARG)
  1330 ;;             ___lbmod (ARG)
  1331 ;;         ___lbdiv (ARG)
  1332 ;;           ___lbmod (ARG)
  1333 ;;         ___ftmul (ARG)
  1334 ;;           ___ftpack
  1335 ;;           ___ftdiv (ARG)
  1336 ;;             ___ftpack
  1337 ;;             ___lwtoft (ARG)
  1338 ;;               ___ftpack
  1339 ;;           ___lwtoft (ARG)
  1340 ;;             ___ftpack
  1341 ;;           ___fttol (ARG)
  1342 ;;             ___ftpack (ARG)
  1343 ;;             ___awmod (ARG)
  1344 ;;             ___awdiv (ARG)
  1345 ;;               ___awmod (ARG)
  1346 ;;             ___bmul (ARG)
  1347 ;;               ___lbmod (ARG)
  1348 ;;               ___lbdiv (ARG)
  1349 ;;                 ___lbmod (ARG)
  1350 ;;           ___awdiv (ARG)
  1351 ;;             ___awmod (ARG)
  1352 ;;           ___awmod (ARG)
  1353 ;;           ___bmul (ARG)
  1354 ;;             ___lbmod (ARG)
  1355 ;;             ___lbdiv (ARG)
  1356 ;;               ___lbmod (ARG)
  1357 ;;           ___lbdiv (ARG)
  1358 ;;             ___lbmod (ARG)
  1359 ;;           ___lbmod (ARG)
  1360 ;;     ___ftadd
  1361 ;;       ___ftpack
  1362 ;;       ___lbmod (ARG)
  1363 ;;       ___bmul (ARG)
  1364 ;;         ___lbmod (ARG)
  1365 ;;         ___lbdiv (ARG)
  1366 ;;           ___lbmod (ARG)
  1367 ;;       ___lbdiv (ARG)
  1368 ;;         ___lbmod (ARG)
  1369 ;;       ___ftmul (ARG)
  1370 ;;         ___ftpack
  1371 ;;         ___ftdiv (ARG)
  1372 ;;           ___ftpack
  1373 ;;           ___lwtoft (ARG)
  1374 ;;             ___ftpack
  1375 ;;         ___lwtoft (ARG)
  1376 ;;           ___ftpack
  1377 ;;         ___fttol (ARG)
  1378 ;;           ___ftpack (ARG)
  1379 ;;           ___awmod (ARG)
  1380 ;;           ___awdiv (ARG)
  1381 ;;             ___awmod (ARG)
  1382 ;;           ___bmul (ARG)
  1383 ;;             ___lbmod (ARG)
  1384 ;;             ___lbdiv (ARG)
  1385 ;;               ___lbmod (ARG)
  1386 ;;         ___awdiv (ARG)
  1387 ;;           ___awmod (ARG)
  1388 ;;         ___awmod (ARG)
  1389 ;;         ___bmul (ARG)
  1390 ;;           ___lbmod (ARG)
  1391 ;;           ___lbdiv (ARG)
  1392 ;;             ___lbmod (ARG)
  1393 ;;         ___lbdiv (ARG)
  1394 ;;           ___lbmod (ARG)
  1395 ;;         ___lbmod (ARG)
  1396 ;;     ___fttol
  1397 ;;       ___ftpack (ARG)
  1398 ;;       ___awmod (ARG)
  1399 ;;       ___awdiv (ARG)
  1400 ;;         ___awmod (ARG)
  1401 ;;       ___bmul (ARG)
  1402 ;;         ___lbmod (ARG)
  1403 ;;         ___lbdiv (ARG)
  1404 ;;           ___lbmod (ARG)
  1405 ;;     __div_to_l_
  1406 ;;     __tdiv_to_l_
  1407 ;;     ___lltoft
  1408 ;;       ___ftpack
  1409 ;;     ___ftsub
  1410 ;;       ___ftadd
  1411 ;;         ___ftpack
  1412 ;;         ___lbmod (ARG)
  1413 ;;         ___bmul (ARG)
  1414 ;;           ___lbmod (ARG)
  1415 ;;           ___lbdiv (ARG)
  1416 ;;             ___lbmod (ARG)
  1417 ;;         ___lbdiv (ARG)
  1418 ;;           ___lbmod (ARG)
  1419 ;;         ___ftmul (ARG)
  1420 ;;           ___ftpack
  1421 ;;           ___ftdiv (ARG)
  1422 ;;             ___ftpack
  1423 ;;             ___lwtoft (ARG)
  1424 ;;               ___ftpack
  1425 ;;           ___lwtoft (ARG)
  1426 ;;             ___ftpack
  1427 ;;           ___fttol (ARG)
  1428 ;;             ___ftpack (ARG)
  1429 ;;             ___awmod (ARG)
  1430 ;;             ___awdiv (ARG)
  1431 ;;               ___awmod (ARG)
  1432 ;;             ___bmul (ARG)
  1433 ;;               ___lbmod (ARG)
  1434 ;;               ___lbdiv (ARG)
  1435 ;;                 ___lbmod (ARG)
  1436 ;;           ___awdiv (ARG)
  1437 ;;             ___awmod (ARG)
  1438 ;;           ___awmod (ARG)
  1439 ;;           ___bmul (ARG)
  1440 ;;             ___lbmod (ARG)
  1441 ;;             ___lbdiv (ARG)
  1442 ;;               ___lbmod (ARG)
  1443 ;;           ___lbdiv (ARG)
  1444 ;;             ___lbmod (ARG)
  1445 ;;           ___lbmod (ARG)
  1446 ;;       ___lltoft (ARG)
  1447 ;;         ___ftpack
  1448 ;;     ___lldiv
  1449 ;;     ___llmod
  1450 ;;       ___lldiv (ARG)
  1451 ;;
  1452 ;; _ngat (ROOT)
  1453 ;;
  1454 ;; Address spaces:
  1455 ;;Name               Size   Autos  Total    Cost      Usage
  1456 ;;BITCOMMON            E      0       0       0        0.0%
  1457 ;;EEDATA             100      0       0       0        0.0%
  1458 ;;NULL                 0      0       0       0        0.0%
  1459 ;;CODE                 0      0       0       0        0.0%
  1460 ;;COMMON               E      C       C       1       85.7%
  1461 ;;BITSFR0              0      0       0       1        0.0%
  1462 ;;SFR0                 0      0       0       1        0.0%
  1463 ;;BITSFR1              0      0       0       2        0.0%
  1464 ;;SFR1                 0      0       0       2        0.0%
  1465 ;;STACK                0      0       5       2        0.0%
  1466 ;;ABS                  0      0      72       3        0.0%
  1467 ;;BITBANK0            50      0       0       4        0.0%
  1468 ;;BITSFR3              0      0       0       4        0.0%
  1469 ;;SFR3                 0      0       0       4        0.0%
  1470 ;;BANK0               50     44      4D       5       96.3%
  1471 ;;BITSFR2              0      0       0       5        0.0%
  1472 ;;SFR2                 0      0       0       5        0.0%
  1473 ;;BITBANK1            50      0       0       6        0.0%
  1474 ;;BANK1               50     19      19       7       31.3%
  1475 ;;BITBANK3            60      0       0       8        0.0%
  1476 ;;BANK3               60      0       0       9        0.0%
  1477 ;;BITBANK2            60      0       0      10        0.0%
  1478 ;;BANK2               60      0       0      11        0.0%
  1479 ;;DATA                 0      0      77      12        0.0%
  1480                           
  1481                           
  1482 ;; *************** function _main *****************
  1483 ;; Defined at:
  1484 ;;		line 15 in file "C:\Online Class\HK6\Practice_Micro\hc-sr04\hcsr04.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;		None
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;		None
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  2  1042[COMMON] int 
  1491 ;; Registers used:
  1492 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1493 ;; Tracked objects:
  1494 ;;		On entry : 17F/0
  1495 ;;		On exit  : 60/20
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1498 ;;      Params:         0       0       0       0       0
  1499 ;;      Locals:         0       3       0       0       0
  1500 ;;      Temps:          0       2       0       0       0
  1501 ;;      Totals:         0       5       0       0       0
  1502 ;;Total ram usage:        5 bytes
  1503 ;; Hardware stack levels required when called:    6
  1504 ;; This function calls:
  1505 ;;		_lcd_init
  1506 ;;		___lwtoft
  1507 ;;		___ftdiv
  1508 ;;		___ftmul
  1509 ;;		_lcd_gotoxy
  1510 ;;		_printf
  1511 ;; This function is called by:
  1512 ;;		Startup code after reset
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515  1687                     _main:	
  1516                           
  1517                           ;hcsr04.c: 16: lcd_init();
  1518                           
  1519                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1520  1687  120A  158A  22D5   	fcall	_lcd_init
      +       160A  118A         
  1521                           
  1522                           ;hcsr04.c: 17: ANSEL=ANSELH=0;
  1523  168C  1683               	bsf	3,5	;RP0=1, select bank3
  1524  168D  1703               	bsf	3,6	;RP1=1, select bank3
  1525  168E  0189               	clrf	9	;volatile
  1526  168F  0188               	clrf	8	;volatile
  1527                           
  1528                           ;hcsr04.c: 18: TRISA0=0;
  1529  1690  1303               	bcf	3,6	;RP1=0, select bank1
  1530  1691  1005               	bcf	5,0
  1531                           
  1532                           ;hcsr04.c: 21: TMR1ON=1;
  1533  1692  1283               	bcf	3,5	;RP0=0, select bank0
  1534  1693  1410               	bsf	16,0
  1535                           
  1536                           ;hcsr04.c: 22: TMR1GE=0;
  1537  1694  1310               	bcf	16,6
  1538                           
  1539                           ;hcsr04.c: 24: TMR1CS=0;
  1540  1695  1090               	bcf	16,1
  1541                           
  1542                           ;hcsr04.c: 25: T1CKPS1=0;
  1543  1696  1290               	bcf	16,5
  1544                           
  1545                           ;hcsr04.c: 26: T1CKPS0=0;
  1546  1697  1210               	bcf	16,4
  1547                           
  1548                           ;hcsr04.c: 27: T1SYNC=1;
  1549  1698  1510               	bsf	16,2
  1550                           
  1551                           ;hcsr04.c: 29: TMR1H=0;
  1552  1699  018F               	clrf	15	;volatile
  1553                           
  1554                           ;hcsr04.c: 30: TMR1L=0;
  1555  169A  018E               	clrf	14	;volatile
  1556                           
  1557                           ;hcsr04.c: 33: CCP1M3 = 0;
  1558  169B  1197               	bcf	23,3
  1559                           
  1560                           ;hcsr04.c: 34: CCP1M2 = 1;
  1561  169C  1517               	bsf	23,2
  1562                           
  1563                           ;hcsr04.c: 35: CCP1M1 = 0;
  1564  169D  1097               	bcf	23,1
  1565                           
  1566                           ;hcsr04.c: 36: CCP1M0 = 1;
  1567  169E  1417               	bsf	23,0
  1568                           
  1569                           ;hcsr04.c: 38: CCPR1H=CCPR1L=0;
  1570  169F  0195               	clrf	21	;volatile
  1571  16A0  0196               	clrf	22	;volatile
  1572                           
  1573                           ;hcsr04.c: 41: CCP2M3=0;
  1574  16A1  119D               	bcf	29,3
  1575                           
  1576                           ;hcsr04.c: 42: CCP2M2=1;
  1577  16A2  151D               	bsf	29,2
  1578                           
  1579                           ;hcsr04.c: 43: CCP2M1=0;
  1580  16A3  109D               	bcf	29,1
  1581                           
  1582                           ;hcsr04.c: 44: CCP2M0=0;
  1583  16A4  101D               	bcf	29,0
  1584                           
  1585                           ;hcsr04.c: 46: CCPR2H=CCPR2L=0;
  1586  16A5  019B               	clrf	27	;volatile
  1587  16A6  019C               	clrf	28	;volatile
  1588                           
  1589                           ;hcsr04.c: 48: CCP1IE=1;
  1590  16A7  1683               	bsf	3,5	;RP0=1, select bank1
  1591  16A8  150C               	bsf	12,2
  1592                           
  1593                           ;hcsr04.c: 49: CCP1IF=0;
  1594  16A9  1283               	bcf	3,5	;RP0=0, select bank0
  1595  16AA  110C               	bcf	12,2
  1596                           
  1597                           ;hcsr04.c: 50: PEIE=1;
  1598  16AB  170B               	bsf	11,6
  1599                           
  1600                           ;hcsr04.c: 51: GIE=1;
  1601  16AC  178B               	bsf	11,7
  1602                           
  1603                           ;hcsr04.c: 54: CCP2IE=1;
  1604  16AD  1683               	bsf	3,5	;RP0=1, select bank1
  1605  16AE  140D               	bsf	13,0
  1606                           
  1607                           ;hcsr04.c: 55: CCP2IF=0;
  1608  16AF  1283               	bcf	3,5	;RP0=0, select bank0
  1609  16B0  100D               	bcf	13,0
  1610                           
  1611                           ;hcsr04.c: 56: PEIE=1;
  1612  16B1  170B               	bsf	11,6
  1613                           
  1614                           ;hcsr04.c: 57: GIE=1;
  1615  16B2  178B               	bsf	11,7
  1616  16B3                     l7210:	
  1617                           
  1618                           ;hcsr04.c: 60: {
  1619                           ;hcsr04.c: 61: RA0=1;
  1620  16B3  1283               	bcf	3,5	;RP0=0, select bank0
  1621  16B4  3010               	movlw	16
  1622  16B5  1405               	bsf	5,0
  1623                           
  1624                           ;hcsr04.c: 62: _delay((unsigned long)((10)*(20000000/4000000.0)));
  1625  16B6  00DF               	movwf	??_main
  1626  16B7                     u3857:	
  1627  16B7  0BDF               	decfsz	??_main,f
  1628  16B8  2EB7               	goto	u3857
  1629  16B9  0064               	clrwdt
  1630                           
  1631                           ;hcsr04.c: 63: RA0=0;
  1632  16BA  1283               	bcf	3,5	;RP0=0, select bank0
  1633  16BB  1303               	bcf	3,6	;RP1=0, select bank0
  1634  16BC  3041               	movlw	65
  1635  16BD  1005               	bcf	5,0
  1636                           
  1637                           ;hcsr04.c: 64: _delay((unsigned long)((10)*(20000000/4000.0)));
  1638  16BE  00E0               	movwf	??_main+1
  1639  16BF  30EE               	movlw	238
  1640  16C0  00DF               	movwf	??_main
  1641  16C1                     u3867:	
  1642  16C1  0BDF               	decfsz	??_main,f
  1643  16C2  2EC1               	goto	u3867
  1644  16C3  0BE0               	decfsz	??_main+1,f
  1645  16C4  2EC1               	goto	u3867
  1646  16C5  0064               	clrwdt
  1647                           
  1648                           ;hcsr04.c: 66: dem = canhxuong - canhlen;
  1649  16C6  1283               	bcf	3,5	;RP0=0, select bank0
  1650  16C7  1303               	bcf	3,6	;RP1=0, select bank0
  1651  16C8  086A               	movf	_canhxuong+1,w
  1652  16C9  00EC               	movwf	_dem+1
  1653  16CA  0869               	movf	_canhxuong,w
  1654  16CB  00EB               	movwf	_dem
  1655  16CC  0867               	movf	_canhlen,w
  1656  16CD  02EB               	subwf	_dem,f
  1657  16CE  0868               	movf	_canhlen+1,w
  1658  16CF  1C03               	skipc
  1659  16D0  03EC               	decf	_dem+1,f
  1660  16D1  02EC               	subwf	_dem+1,f
  1661                           
  1662                           ;hcsr04.c: 67: dis = ((dem/5000000.0)/2.0)*34324.0;
  1663  16D2  3097               	movlw	151
  1664  16D3  00A3               	movwf	?___ftdiv
  1665  16D4  3098               	movlw	152
  1666  16D5  00A4               	movwf	?___ftdiv+1
  1667  16D6  304A               	movlw	74
  1668  16D7  00A5               	movwf	?___ftdiv+2
  1669  16D8  086C               	movf	_dem+1,w
  1670  16D9  00A1               	movwf	?___lwtoft+1
  1671  16DA  086B               	movf	_dem,w
  1672  16DB  00A0               	movwf	?___lwtoft
  1673  16DC  120A  158A  245F   	fcall	___lwtoft
      +       160A  118A         
  1674  16E1  0820               	movf	?___lwtoft,w
  1675  16E2  00A6               	movwf	?___ftdiv+3
  1676  16E3  0821               	movf	?___lwtoft+1,w
  1677  16E4  00A7               	movwf	?___ftdiv+4
  1678  16E5  0822               	movf	?___lwtoft+2,w
  1679  16E6  00A8               	movwf	?___ftdiv+5
  1680  16E7  120A  158A  246F   	fcall	___ftdiv
      +       160A  118A         
  1681  16EC  0823               	movf	?___ftdiv,w
  1682  16ED  00E1               	movwf	_main$4105
  1683  16EE  0824               	movf	?___ftdiv+1,w
  1684  16EF  00E2               	movwf	_main$4105+1
  1685  16F0  0825               	movf	?___ftdiv+2,w
  1686  16F1  00E3               	movwf	_main$4105+2
  1687                           
  1688                           ;hcsr04.c: 67: dis = ((dem/5000000.0)/2.0)*34324.0;
  1689  16F2  3014               	movlw	20
  1690  16F3  00B2               	movwf	?___ftmul
  1691  16F4  3006               	movlw	6
  1692  16F5  00B3               	movwf	?___ftmul+1
  1693  16F6  3047               	movlw	71
  1694  16F7  00B4               	movwf	?___ftmul+2
  1695  16F8  3040               	movlw	64
  1696  16F9  01A3               	clrf	?___ftdiv
  1697  16FA  01A4               	clrf	?___ftdiv+1
  1698  16FB  00A5               	movwf	?___ftdiv+2
  1699  16FC  0861               	movf	_main$4105,w
  1700  16FD  00A6               	movwf	?___ftdiv+3
  1701  16FE  0862               	movf	_main$4105+1,w
  1702  16FF  00A7               	movwf	?___ftdiv+4
  1703  1700  0863               	movf	_main$4105+2,w
  1704  1701  00A8               	movwf	?___ftdiv+5
  1705  1702  120A  158A  246F   	fcall	___ftdiv
      +       160A  118A         
  1706  1707  0823               	movf	?___ftdiv,w
  1707  1708  00B5               	movwf	?___ftmul+3
  1708  1709  0824               	movf	?___ftdiv+1,w
  1709  170A  00B6               	movwf	?___ftmul+4
  1710  170B  0825               	movf	?___ftdiv+2,w
  1711  170C  00B7               	movwf	?___ftmul+5
  1712  170D  120A  158A  26EC   	fcall	___ftmul
      +       160A  118A         
  1713  1712  0832               	movf	?___ftmul,w
  1714  1713  00E4               	movwf	_dis
  1715  1714  0833               	movf	?___ftmul+1,w
  1716  1715  00E5               	movwf	_dis+1
  1717  1716  0834               	movf	?___ftmul+2,w
  1718  1717  00E6               	movwf	_dis+2
  1719  1718  3000               	movlw	0
  1720                           
  1721                           ;hcsr04.c: 68: lcd_gotoxy(0,0);
  1722  1719  01F7               	clrf	?_lcd_gotoxy
  1723  171A  120A  158A  228E   	fcall	_lcd_gotoxy
      +       160A  118A         
  1724                           
  1725                           ;hcsr04.c: 69: printf("Distance: %2.1f",dis);
  1726  171F  0864               	movf	_dis,w
  1727  1720  00D7               	movwf	?_printf
  1728  1721  0865               	movf	_dis+1,w
  1729  1722  00D8               	movwf	?_printf+1
  1730  1723  0866               	movf	_dis+2,w
  1731  1724  00D9               	movwf	?_printf+2
  1732  1725  3077               	movlw	(STR_1-__stringbase)& (0+255)
  1733  1726  120A  118A  200F   	fcall	_printf
      +       160A  118A         
  1734  172B  3000               	movlw	0
  1735                           
  1736                           ;hcsr04.c: 70: lcd_gotoxy(0,1);
  1737  172C  01F7               	clrf	?_lcd_gotoxy
  1738  172D  0AF7               	incf	?_lcd_gotoxy,f
  1739  172E  120A  158A  228E   	fcall	_lcd_gotoxy
      +       160A  118A         
  1740                           
  1741                           ;hcsr04.c: 71: printf("dem: %5u",dem);
  1742  1733  086C               	movf	_dem+1,w
  1743  1734  00D8               	movwf	?_printf+1
  1744  1735  086B               	movf	_dem,w
  1745  1736  00D7               	movwf	?_printf
  1746  1737  3087               	movlw	(STR_2-__stringbase)& (0+255)
  1747  1738  120A  118A  200F   	fcall	_printf
      +       160A  118A         
  1748  173D  2EB3               	goto	l7210
  1749  173E                     __end_of_main:	
  1750                           
  1751                           	psect	text538
  1752  000F                     __ptext538:	
  1753 ;; =============== function _main ends ============
  1754                           
  1755                           
  1756 ;; *************** function _printf *****************
  1757 ;; Defined at:
  1758 ;;		line 461 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  1759 ;; Parameters:    Size  Location     Type
  1760 ;;  f               1    wreg     PTR const unsigned char 
  1761 ;;		 -> STR_2(9), STR_1(16), 
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;  f               1   10[BANK1 ] PTR const unsigned char 
  1764 ;;		 -> STR_2(9), STR_1(16), 
  1765 ;;  _val            4   11[BANK1 ] struct .
  1766 ;;  fval            3   19[BANK1 ] struct .
  1767 ;;  integ           3    5[BANK1 ] struct .
  1768 ;;  ival            3    0        struct .
  1769 ;;  prec            2   22[BANK1 ] int 
  1770 ;;  exp             2   17[BANK1 ] int 
  1771 ;;  width           2   15[BANK1 ] int 
  1772 ;;  flag            2    8[BANK1 ] unsigned short 
  1773 ;;  c               1   24[BANK1 ] char 
  1774 ;;  ap              1    4[BANK1 ] PTR void [1]
  1775 ;;		 -> ?_printf(2), 
  1776 ;;  d               1    0        unsigned char 
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  2   55[BANK0 ] int 
  1779 ;; Registers used:
  1780 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1781 ;; Tracked objects:
  1782 ;;		On entry : 60/0
  1783 ;;		On exit  : 60/20
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1786 ;;      Params:         0       3       0       0       0
  1787 ;;      Locals:         0       0      25       0       0
  1788 ;;      Temps:          0       5       0       0       0
  1789 ;;      Totals:         0       8      25       0       0
  1790 ;;Total ram usage:       33 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; Hardware stack levels required when called:    5
  1793 ;; This function calls:
  1794 ;;		_putch
  1795 ;;		_isdigit
  1796 ;;		___wmul
  1797 ;;		___ftge
  1798 ;;		___ftneg
  1799 ;;		___awdiv
  1800 ;;		_scale
  1801 ;;		___ftmul
  1802 ;;		_fround
  1803 ;;		___ftadd
  1804 ;;		___fttol
  1805 ;;		__div_to_l_
  1806 ;;		__tdiv_to_l_
  1807 ;;		___lltoft
  1808 ;;		___ftsub
  1809 ;;		___lldiv
  1810 ;;		___llmod
  1811 ;; This function is called by:
  1812 ;;		_main
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815  000F                     _printf:	
  1816                           
  1817                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1818                           ;printf@f stored from wreg
  1819  000F  1683               	bsf	3,5	;RP0=1, select bank1
  1820  0010  00AA               	movwf	printf@f^(0+128)
  1821  0011  3057               	movlw	?_printf& (0+255)
  1822  0012  00A4               	movwf	printf@ap^(0+128)
  1823  0013                     l7150:	
  1824  0013  278C               	call	PL32	;select bank 1
  1825  0014  082A               	movf	printf@f^(0+128),w
  1826  0015  0AAA               	incf	printf@f^(0+128),f
  1827  0016  0084               	movwf	4
  1828  0017  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1829  001C  00B8               	movwf	printf@c^(0+128)
  1830  001D  08B8               	movf	printf@c^(0+128),f
  1831  001E  1903               	btfsc	3,2
  1832  001F  0008               	return
  1833  0020  3A25               	xorlw	37
  1834  0021  1903               	skipnz
  1835  0022  2828               	goto	l6906
  1836  0023  0838               	movf	printf@c^(0+128),w
  1837  0024  2509  120A  118A   	fcall	_putch
  1838  0027  2813               	goto	l7150
  1839  0028                     l6906:	
  1840  0028  01AF               	clrf	printf@width^(0+128)
  1841  0029  01B0               	clrf	(printf@width+1)^(0+128)
  1842  002A  01A8               	clrf	printf@flag^(0+128)
  1843  002B  01A9               	clrf	(printf@flag+1)^(0+128)
  1844  002C  082A               	movf	printf@f^(0+128),w
  1845  002D  0084               	movwf	4
  1846  002E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1847  0033  2577  120A  118A   	fcall	_isdigit
  1848  0036  1C03               	btfss	3,0
  1849  0037  285C               	goto	l6918
  1850  0038  01AF               	clrf	printf@width^(0+128)
  1851  0039  01B0               	clrf	(printf@width+1)^(0+128)
  1852  003A                     l6912:	
  1853  003A  0830               	movf	(printf@width+1)^(0+128),w
  1854  003B  00F3               	movwf	?___wmul+1
  1855  003C  082F               	movf	printf@width^(0+128),w
  1856  003D  00F2               	movwf	?___wmul
  1857  003E  300A               	movlw	10
  1858  003F  00F4               	movwf	?___wmul+2
  1859  0040  01F5               	clrf	?___wmul+3
  1860  0041  2585               	fcall	___wmul
  1861  0042  082A               	movf	printf@f^(0+128),w
  1862  0043  0084               	movwf	4
  1863  0044  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1864  0049  273B  120A  118A   	fcall	PL13	;call to abstracted procedure
  1865  004C  00AF               	movwf	printf@width^(0+128)
  1866  004D  277E               	fcall	PL30	;call to abstracted procedure
  1867  004E  00B0               	movwf	(printf@width+1)^(0+128)
  1868  004F  0AAA               	incf	printf@f^(0+128),f
  1869  0050  082A               	movf	printf@f^(0+128),w
  1870  0051  0084               	movwf	4
  1871  0052  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1872  0057  2577  120A  118A   	fcall	_isdigit
  1873  005A  1803               	btfsc	3,0
  1874  005B  283A               	goto	l6912
  1875  005C                     l6918:	
  1876  005C  082A               	movf	printf@f^(0+128),w
  1877  005D  0084               	movwf	4
  1878  005E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1879  0063  3A2E               	xorlw	46
  1880  0064  1D03               	skipz
  1881  0065  288F               	goto	l6932
  1882  0066  1729               	bsf	(printf@flag^(0+128)+1),6
  1883  0067  0AAA               	incf	printf@f^(0+128),f
  1884  0068  01B6               	clrf	printf@prec^(0+128)
  1885  0069  01B7               	clrf	(printf@prec+1)^(0+128)
  1886  006A                     l6930:	
  1887  006A  082A               	movf	printf@f^(0+128),w
  1888  006B  0084               	movwf	4
  1889  006C  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1890  0071  2577  120A  118A   	fcall	_isdigit
  1891  0074  1C03               	btfss	3,0
  1892  0075  2898               	goto	l6940
  1893  0076  0837               	movf	(printf@prec+1)^(0+128),w
  1894  0077  00F3               	movwf	?___wmul+1
  1895  0078  0836               	movf	printf@prec^(0+128),w
  1896  0079  00F2               	movwf	?___wmul
  1897  007A  300A               	movlw	10
  1898  007B  00F4               	movwf	?___wmul+2
  1899  007C  01F5               	clrf	?___wmul+3
  1900  007D  2585               	fcall	___wmul
  1901  007E  082A               	movf	printf@f^(0+128),w
  1902  007F  0084               	movwf	4
  1903  0080  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1904  0085  273B  120A  118A   	fcall	PL13	;call to abstracted procedure
  1905  0088  00B6               	movwf	printf@prec^(0+128)
  1906  0089  277E  120A  118A   	fcall	PL30	;call to abstracted procedure
  1907  008C  00B7               	movwf	(printf@prec+1)^(0+128)
  1908  008D  0AAA               	incf	printf@f^(0+128),f
  1909  008E  286A               	goto	l6930
  1910  008F                     l6932:	
  1911  008F  01B6               	clrf	printf@prec^(0+128)
  1912  0090  01B7               	clrf	(printf@prec+1)^(0+128)
  1913  0091  1629               	bsf	(printf@flag^(0+128)+1),4
  1914  0092  2898               	goto	l6940
  1915  0093                     l2201:	
  1916  0093  1529               	bsf	(printf@flag^(0+128)+1),2
  1917  0094  28AB               	goto	l6942
  1918  0095                     l6936:	
  1919  0095  30C0               	movlw	192
  1920  0096  04A8               	iorwf	printf@flag^(0+128),f
  1921  0097  28AB               	goto	l6942
  1922  0098                     l6940:	
  1923  0098  082A               	movf	printf@f^(0+128),w
  1924  0099  0AAA               	incf	printf@f^(0+128),f
  1925  009A  0084               	movwf	4
  1926  009B  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1927  00A0  00B8               	movwf	printf@c^(0+128)
  1928                           
  1929                           ; Switch size 1, requested type "space"
  1930                           ; Number of cases is 3, Range of values is 0 to 117
  1931                           ; switch strategies available:
  1932                           ; Name         Instructions Cycles
  1933                           ; simple_byte           10     6 (average)
  1934                           ; jumptable            260     6 (fixed)
  1935                           ; rangetable           122     6 (fixed)
  1936                           ; spacedrange          242     9 (fixed)
  1937                           ; locatedrange         118     3 (fixed)
  1938                           ;	Chosen strategy is simple_byte
  1939  00A1  3A00               	xorlw	0	; case 0
  1940  00A2  1903               	skipnz
  1941  00A3  2D08               	goto	l2269
  1942  00A4  3A66               	xorlw	102	; case 102
  1943  00A5  1903               	skipnz
  1944  00A6  2893               	goto	l2201
  1945  00A7  3A13               	xorlw	19	; case 117
  1946  00A8  1903               	skipnz
  1947  00A9  2895               	goto	l6936
  1948  00AA  2813               	goto	l7150
  1949  00AB                     l6942:	
  1950  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1951  00AC  3007               	movlw	7
  1952  00AD  01DA               	clrf	??_printf
  1953  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  1954  00AF  0529               	andwf	(printf@flag+1)^(0+128),w
  1955  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  1956  00B1  00DB               	movwf	??_printf+1
  1957  00B2  045A               	iorwf	??_printf,w
  1958  00B3  1903               	skipnz
  1959  00B4  2BE4               	goto	l7084
  1960  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  1961  00B6  1E29               	btfss	(printf@flag+1)^(0+128),4
  1962  00B7  28BB               	goto	l6948
  1963  00B8  3006               	movlw	6
  1964  00B9  00B6               	movwf	printf@prec^(0+128)
  1965  00BA  01B7               	clrf	(printf@prec+1)^(0+128)
  1966  00BB                     l6948:	
  1967  00BB  0824               	movf	printf@ap^(0+128),w
  1968  00BC  0084               	movwf	4
  1969  00BD  1383               	bcf	3,7	;select IRP bank0
  1970  00BE  0800               	movf	0,w
  1971  00BF  00B3               	movwf	printf@fval^(0+128)
  1972  00C0  0A84               	incf	4,f
  1973  00C1  0800               	movf	0,w
  1974  00C2  00B4               	movwf	(printf@fval+1)^(0+128)
  1975  00C3  0A84               	incf	4,f
  1976  00C4  0800               	movf	0,w
  1977  00C5  00B5               	movwf	(printf@fval+2)^(0+128)
  1978  00C6  3003               	movlw	3
  1979  00C7  07A4               	addwf	printf@ap^(0+128),f
  1980  00C8  0833               	movf	printf@fval^(0+128),w
  1981  00C9  00F2               	movwf	?___ftge
  1982  00CA  0834               	movf	(printf@fval+1)^(0+128),w
  1983  00CB  00F3               	movwf	?___ftge+1
  1984  00CC  0835               	movf	(printf@fval+2)^(0+128),w
  1985  00CD  00F4               	movwf	?___ftge+2
  1986  00CE  01F5               	clrf	?___ftge+3
  1987  00CF  01F6               	clrf	?___ftge+4
  1988  00D0  01F7               	clrf	?___ftge+5
  1989  00D1  254B  120A  118A   	fcall	___ftge
  1990  00D4  1803               	btfsc	3,0
  1991  00D5  28E7               	goto	l6958
  1992  00D6  0833               	movf	printf@fval^(0+128),w
  1993  00D7  00F2               	movwf	?___ftneg
  1994  00D8  0834               	movf	(printf@fval+1)^(0+128),w
  1995  00D9  00F3               	movwf	?___ftneg+1
  1996  00DA  0835               	movf	(printf@fval+2)^(0+128),w
  1997  00DB  00F4               	movwf	?___ftneg+2
  1998  00DC  26BA  120A  118A   	fcall	___ftneg
  1999  00DF  0872               	movf	?___ftneg,w
  2000  00E0  00B3               	movwf	printf@fval^(0+128)
  2001  00E1  0873               	movf	?___ftneg+1,w
  2002  00E2  00B4               	movwf	(printf@fval+1)^(0+128)
  2003  00E3  0874               	movf	?___ftneg+2,w
  2004  00E4  00B5               	movwf	(printf@fval+2)^(0+128)
  2005  00E5  3003               	movlw	3
  2006  00E6  04A8               	iorwf	printf@flag^(0+128),f
  2007  00E7                     l6958:	
  2008  00E7  01B1               	clrf	printf@exp^(0+128)
  2009  00E8  01B2               	clrf	(printf@exp+1)^(0+128)
  2010  00E9  0835               	movf	(printf@fval+2)^(0+128),w
  2011  00EA  0434               	iorwf	(printf@fval+1)^(0+128),w
  2012  00EB  0433               	iorwf	printf@fval^(0+128),w
  2013  00EC  1903               	skipnz
  2014  00ED  297E               	goto	l6990
  2015  00EE  30B3               	movlw	low printf@fval
  2016  00EF  0084               	movwf	4
  2017  00F0  2777  120A  118A   	fcall	PL28	;call to abstracted procedure
  2018  00F3  0A84               	incf	4,f
  2019  00F4  0800               	movf	0,w
  2020  00F5  00DC               	movwf	??_printf+2
  2021  00F6  0A84               	incf	4,f
  2022  00F7  0800               	movf	0,w
  2023  00F8  00DD               	movwf	??_printf+3
  2024  00F9  300F               	movlw	15
  2025  00FA                     u3475:	
  2026  00FA  1003               	clrc
  2027  00FB  0CDD               	rrf	??_printf+3,f
  2028  00FC  0CDC               	rrf	??_printf+2,f
  2029  00FD  0CDB               	rrf	??_printf+1,f
  2030  00FE  0CDA               	rrf	??_printf,f
  2031  00FF  3EFF               	addlw	-1
  2032  0100  1D03               	skipz
  2033  0101  28FA               	goto	u3475
  2034  0102  085B               	movf	??_printf+1,w
  2035  0103  1683               	bsf	3,5	;RP0=1, select bank1
  2036  0104  00B2               	movwf	(printf@exp+1)^(0+128)
  2037  0105  1283               	bcf	3,5	;RP0=0, select bank0
  2038  0106  085A               	movf	??_printf,w
  2039  0107  1683               	bsf	3,5	;RP0=1, select bank1
  2040  0108  00B1               	movwf	printf@exp^(0+128)
  2041  0109  3082               	movlw	-126
  2042  010A  01B2               	clrf	(printf@exp+1)^(0+128)
  2043  010B  07B1               	addwf	printf@exp^(0+128),f
  2044  010C  1C03               	skipc
  2045  010D  03B2               	decf	(printf@exp+1)^(0+128),f
  2046  010E  30FF               	movlw	-1
  2047  010F  07B1               	addwf	printf@exp^(0+128),f
  2048  0110  1C03               	skipc
  2049  0111  03B2               	decf	(printf@exp+1)^(0+128),f
  2050  0112  3003               	movlw	3
  2051  0113  00F2               	movwf	?___wmul
  2052  0114  01F3               	clrf	?___wmul+1
  2053  0115  0832               	movf	(printf@exp+1)^(0+128),w
  2054  0116  00F5               	movwf	?___wmul+3
  2055  0117  0831               	movf	printf@exp^(0+128),w
  2056  0118  00F4               	movwf	?___wmul+2
  2057  0119  2585               	fcall	___wmul
  2058  011A  0873               	movf	?___wmul+1,w
  2059  011B  00B2               	movwf	(printf@exp+1)^(0+128)
  2060  011C  0872               	movf	?___wmul,w
  2061  011D  00B1               	movwf	printf@exp^(0+128)
  2062  011E  300A               	movlw	10
  2063  011F  00F8               	movwf	?___awdiv
  2064  0120  01F9               	clrf	?___awdiv+1
  2065  0121  0832               	movf	(printf@exp+1)^(0+128),w
  2066  0122  00FB               	movwf	?___awdiv+3
  2067  0123  0831               	movf	printf@exp^(0+128),w
  2068  0124  00FA               	movwf	?___awdiv+2
  2069  0125  120A  158A  2669   	fcall	___awdiv
      +       120A  118A         
  2070  012A  0879               	movf	?___awdiv+1,w
  2071  012B  1683               	bsf	3,5	;RP0=1, select bank1
  2072  012C  00B2               	movwf	(printf@exp+1)^(0+128)
  2073  012D  0878               	movf	?___awdiv,w
  2074  012E  00B1               	movwf	printf@exp^(0+128)
  2075  012F  1FB2               	btfss	(printf@exp+1)^(0+128),7
  2076  0130  2935               	goto	l6978
  2077  0131  30FF               	movlw	-1
  2078  0132  07B1               	addwf	printf@exp^(0+128),f
  2079  0133  1C03               	skipc
  2080  0134  03B2               	decf	(printf@exp+1)^(0+128),f
  2081  0135                     l6978:	
  2082  0135  0331               	decf	printf@exp^(0+128),w
  2083  0136  3AFF               	xorlw	255
  2084  0137  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  2085  013C  2725  120A  118A   	fcall	PL7	;call to abstracted procedure
  2086  013F  2752               	fcall	PL16	;call to abstracted procedure
  2087  0140  1683               	bsf	3,5	;RP0=1, select bank1
  2088  0141  0825               	movf	printf@integ^(0+128),w
  2089  0142  1283               	bcf	3,5	;RP0=0, select bank0
  2090  0143  00B5               	movwf	?___ftmul+3
  2091  0144  1683               	bsf	3,5	;RP0=1, select bank1
  2092  0145  0826               	movf	(printf@integ+1)^(0+128),w
  2093  0146  1283               	bcf	3,5	;RP0=0, select bank0
  2094  0147  00B6               	movwf	?___ftmul+4
  2095  0148  1683               	bsf	3,5	;RP0=1, select bank1
  2096  0149  0827               	movf	(printf@integ+2)^(0+128),w
  2097  014A  1283               	bcf	3,5	;RP0=0, select bank0
  2098  014B  00B7               	movwf	?___ftmul+5
  2099  014C  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2100  0151  0832               	movf	?___ftmul,w
  2101  0152  1683               	bsf	3,5	;RP0=1, select bank1
  2102  0153  00A5               	movwf	printf@integ^(0+128)
  2103  0154  1283               	bcf	3,5	;RP0=0, select bank0
  2104  0155  0833               	movf	?___ftmul+1,w
  2105  0156  1683               	bsf	3,5	;RP0=1, select bank1
  2106  0157  00A6               	movwf	(printf@integ+1)^(0+128)
  2107  0158  1283               	bcf	3,5	;RP0=0, select bank0
  2108  0159  0834               	movf	?___ftmul+2,w
  2109  015A  1683               	bsf	3,5	;RP0=1, select bank1
  2110  015B  00A7               	movwf	(printf@integ+2)^(0+128)
  2111  015C  2770  120A  118A   	fcall	PL21	;call to abstracted procedure
  2112  015F  3080               	movlw	128
  2113  0160  01F5               	clrf	?___ftge+3
  2114  0161  00F6               	movwf	?___ftge+4
  2115  0162  303F               	movlw	63
  2116  0163  00F7               	movwf	?___ftge+5
  2117  0164  254B  120A  118A   	fcall	___ftge
  2118  0167  1803               	btfsc	3,0
  2119  0168  296E               	goto	l6986
  2120  0169  30FF               	movlw	-1
  2121  016A  07B1               	addwf	printf@exp^(0+128),f
  2122  016B  1C03               	skipc
  2123  016C  03B2               	decf	(printf@exp+1)^(0+128),f
  2124  016D  297E               	goto	l6990
  2125  016E                     l6986:	
  2126  016E  2770  120A  118A   	fcall	PL21	;call to abstracted procedure
  2127  0171  3020               	movlw	32
  2128  0172  01F5               	clrf	?___ftge+3
  2129  0173  00F6               	movwf	?___ftge+4
  2130  0174  3041               	movlw	65
  2131  0175  00F7               	movwf	?___ftge+5
  2132  0176  254B  120A  118A   	fcall	___ftge
  2133  0179  1C03               	btfss	3,0
  2134  017A  297E               	goto	l6990
  2135  017B  0AB1               	incf	printf@exp^(0+128),f
  2136  017C  1903               	skipnz
  2137  017D  0AB2               	incf	(printf@exp+1)^(0+128),f
  2138  017E                     l6990:	
  2139  017E  0837               	movf	(printf@prec+1)^(0+128),w
  2140  017F  3A80               	xorlw	128
  2141  0180  00FF               	movwf	127
  2142  0181  3080               	movlw	128
  2143  0182  027F               	subwf	127,w
  2144  0183  1D03               	skipz
  2145  0184  2987               	goto	u3515
  2146  0185  300D               	movlw	13
  2147  0186  0236               	subwf	printf@prec^(0+128),w
  2148  0187                     u3515:	
  2149  0187  1803               	skipnc
  2150  0188  29B2               	goto	l6994
  2151  0189  278C               	call	PL32	;select bank 1
  2152  018A  0836               	movf	printf@prec^(0+128),w
  2153  018B  120A  158A  213C   	fcall	_fround
      +       120A  118A         
  2154  0190  084D               	movf	?_fround,w
  2155  0191  00C1               	movwf	?___ftadd
  2156  0192  084E               	movf	?_fround+1,w
  2157  0193  00C2               	movwf	?___ftadd+1
  2158  0194  084F               	movf	?_fround+2,w
  2159  0195  00C3               	movwf	?___ftadd+2
  2160  0196  1683               	bsf	3,5	;RP0=1, select bank1
  2161  0197  0833               	movf	printf@fval^(0+128),w
  2162  0198  1283               	bcf	3,5	;RP0=0, select bank0
  2163  0199  00C4               	movwf	?___ftadd+3
  2164  019A  1683               	bsf	3,5	;RP0=1, select bank1
  2165  019B  0834               	movf	(printf@fval+1)^(0+128),w
  2166  019C  1283               	bcf	3,5	;RP0=0, select bank0
  2167  019D  00C5               	movwf	?___ftadd+4
  2168  019E  1683               	bsf	3,5	;RP0=1, select bank1
  2169  019F  0835               	movf	(printf@fval+2)^(0+128),w
  2170  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  2171  01A1  00C6               	movwf	?___ftadd+5
  2172  01A2  160A  118A  273E   	fcall	___ftadd
      +       120A  118A         
  2173  01A7  0841               	movf	?___ftadd,w
  2174  01A8  1683               	bsf	3,5	;RP0=1, select bank1
  2175  01A9  00B3               	movwf	printf@fval^(0+128)
  2176  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  2177  01AB  0842               	movf	?___ftadd+1,w
  2178  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  2179  01AD  00B4               	movwf	(printf@fval+1)^(0+128)
  2180  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  2181  01AF  0843               	movf	?___ftadd+2,w
  2182  01B0  1683               	bsf	3,5	;RP0=1, select bank1
  2183  01B1  00B5               	movwf	(printf@fval+2)^(0+128)
  2184  01B2                     l6994:	
  2185  01B2  278C               	call	PL32	;select bank 1
  2186  01B3  0832               	movf	(printf@exp+1)^(0+128),w
  2187  01B4  3A80               	xorlw	128
  2188  01B5  00FF               	movwf	127
  2189  01B6  3080               	movlw	128
  2190  01B7  027F               	subwf	127,w
  2191  01B8  1D03               	skipz
  2192  01B9  29BC               	goto	u3525
  2193  01BA  300A               	movlw	10
  2194  01BB  0231               	subwf	printf@exp^(0+128),w
  2195  01BC                     u3525:	
  2196  01BC  1803               	skipnc
  2197  01BD  29DD               	goto	l7002
  2198  01BE  278C               	call	PL32	;select bank 1
  2199  01BF  0835               	movf	(printf@fval+2)^(0+128),w
  2200  01C0  0434               	iorwf	(printf@fval+1)^(0+128),w
  2201  01C1  0433               	iorwf	printf@fval^(0+128),w
  2202  01C2  1903               	skipnz
  2203  01C3  2A1E               	goto	l7018
  2204  01C4  0833               	movf	printf@fval^(0+128),w
  2205  01C5  2747  120A  118A   	fcall	PL14	;call to abstracted procedure
  2206  01C8  259E  120A  118A   	fcall	___fttol
  2207  01CB  0827               	movf	?___fttol+3,w
  2208  01CC  0426               	iorwf	?___fttol+2,w
  2209  01CD  0425               	iorwf	?___fttol+1,w
  2210  01CE  0424               	iorwf	?___fttol,w
  2211  01CF  1D03               	skipz
  2212  01D0  2A1E               	goto	l7018
  2213  01D1  1683               	bsf	3,5	;RP0=1, select bank1
  2214  01D2  0832               	movf	(printf@exp+1)^(0+128),w
  2215  01D3  3A80               	xorlw	128
  2216  01D4  00FF               	movwf	127
  2217  01D5  3080               	movlw	128
  2218  01D6  027F               	subwf	127,w
  2219  01D7  1D03               	skipz
  2220  01D8  29DB               	goto	u3555
  2221  01D9  3002               	movlw	2
  2222  01DA  0231               	subwf	printf@exp^(0+128),w
  2223  01DB                     u3555:	
  2224  01DB  1C03               	skipc
  2225  01DC  2A1E               	goto	l7018
  2226  01DD                     l7002:	
  2227  01DD  278C               	call	PL32	;select bank 1
  2228  01DE  2770  120A  118A   	fcall	PL21	;call to abstracted procedure
  2229  01E1  3070               	movlw	112
  2230  01E2  00F5               	movwf	?___ftge+3
  2231  01E3  3089               	movlw	137
  2232  01E4  00F6               	movwf	?___ftge+4
  2233  01E5  3040               	movlw	64
  2234  01E6  00F7               	movwf	?___ftge+5
  2235  01E7  254B  120A  118A   	fcall	___ftge
  2236  01EA  1803               	btfsc	3,0
  2237  01EB  29EE               	goto	l7006
  2238  01EC  30F7               	movlw	-9
  2239  01ED  29EF               	goto	L1
  2240  01EE                     l7006:	
  2241  01EE  30F8               	movlw	-8
  2242  01EF                     L1:	
  2243  01EF  07B1               	addwf	printf@exp^(0+128),f
  2244  01F0  1C03               	skipc
  2245  01F1  03B2               	decf	(printf@exp+1)^(0+128),f
  2246  01F2  0831               	movf	printf@exp^(0+128),w
  2247  01F3  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  2248  01F8  2725  120A  118A   	fcall	PL7	;call to abstracted procedure
  2249  01FB  00F2               	movwf	?__tdiv_to_l_
  2250  01FC  0834               	movf	(printf@fval+1)^(0+128),w
  2251  01FD  00F3               	movwf	?__tdiv_to_l_+1
  2252  01FE  0835               	movf	(printf@fval+2)^(0+128),w
  2253  01FF  00F4               	movwf	?__tdiv_to_l_+2
  2254  0200  0825               	movf	printf@integ^(0+128),w
  2255  0201  00F5               	movwf	?__tdiv_to_l_+3
  2256  0202  0826               	movf	(printf@integ+1)^(0+128),w
  2257  0203  00F6               	movwf	?__tdiv_to_l_+4
  2258  0204  0827               	movf	(printf@integ+2)^(0+128),w
  2259  0205  00F7               	movwf	?__tdiv_to_l_+5
  2260  0206  2642  120A  118A   	fcall	__tdiv_to_l_
  2261  0209  0875               	movf	?__tdiv_to_l_+3,w
  2262  020A  1683               	bsf	3,5	;RP0=1, select bank1
  2263  020B  00A3               	movwf	(_printf$3160+3)^(0+128)
  2264  020C  0874               	movf	?__tdiv_to_l_+2,w
  2265  020D  00A2               	movwf	(_printf$3160+2)^(0+128)
  2266  020E  0873               	movf	?__tdiv_to_l_+1,w
  2267  020F  00A1               	movwf	(_printf$3160+1)^(0+128)
  2268  0210  0872               	movf	?__tdiv_to_l_,w
  2269  0211  00A0               	movwf	_printf$3160^(0+128)
  2270  0212  0823               	movf	(_printf$3160+3)^(0+128),w
  2271  0213  00AE               	movwf	(printf@_val+3)^(0+128)
  2272  0214  0822               	movf	(_printf$3160+2)^(0+128),w
  2273  0215  00AD               	movwf	(printf@_val+2)^(0+128)
  2274  0216  0821               	movf	(_printf$3160+1)^(0+128),w
  2275  0217  00AC               	movwf	(printf@_val+1)^(0+128)
  2276  0218  0820               	movf	_printf$3160^(0+128),w
  2277  0219  00AB               	movwf	printf@_val^(0+128)
  2278  021A  01B3               	clrf	printf@fval^(0+128)
  2279  021B  01B4               	clrf	(printf@fval+1)^(0+128)
  2280  021C  01B5               	clrf	(printf@fval+2)^(0+128)
  2281  021D  2A5F               	goto	l7022
  2282  021E                     l7018:	
  2283  021E  278C               	call	PL32	;select bank 1
  2284  021F  0833               	movf	printf@fval^(0+128),w
  2285  0220  2747  120A  118A   	fcall	PL14	;call to abstracted procedure
  2286  0223  259E  120A  118A   	fcall	___fttol
  2287  0226  2717  120A  118A   	fcall	PL6	;call to abstracted procedure
  2288  0229  1683               	bsf	3,5	;RP0=1, select bank1
  2289  022A  00AB               	movwf	printf@_val^(0+128)
  2290  022B  082E               	movf	(printf@_val+3)^(0+128),w
  2291  022C  1283               	bcf	3,5	;RP0=0, select bank0
  2292  022D  00A3               	movwf	?___lltoft+3
  2293  022E  1683               	bsf	3,5	;RP0=1, select bank1
  2294  022F  082D               	movf	(printf@_val+2)^(0+128),w
  2295  0230  1283               	bcf	3,5	;RP0=0, select bank0
  2296  0231  00A2               	movwf	?___lltoft+2
  2297  0232  1683               	bsf	3,5	;RP0=1, select bank1
  2298  0233  082C               	movf	(printf@_val+1)^(0+128),w
  2299  0234  1283               	bcf	3,5	;RP0=0, select bank0
  2300  0235  00A1               	movwf	?___lltoft+1
  2301  0236  1683               	bsf	3,5	;RP0=1, select bank1
  2302  0237  082B               	movf	printf@_val^(0+128),w
  2303  0238  1283               	bcf	3,5	;RP0=0, select bank0
  2304  0239  00A0               	movwf	?___lltoft
  2305  023A  26C2  120A  118A   	fcall	___lltoft
  2306  023D  0820               	movf	?___lltoft,w
  2307  023E  00CD               	movwf	?___ftsub
  2308  023F  0821               	movf	?___lltoft+1,w
  2309  0240  00CE               	movwf	?___ftsub+1
  2310  0241  0822               	movf	?___lltoft+2,w
  2311  0242  00CF               	movwf	?___ftsub+2
  2312  0243  1683               	bsf	3,5	;RP0=1, select bank1
  2313  0244  0833               	movf	printf@fval^(0+128),w
  2314  0245  1283               	bcf	3,5	;RP0=0, select bank0
  2315  0246  00D0               	movwf	?___ftsub+3
  2316  0247  1683               	bsf	3,5	;RP0=1, select bank1
  2317  0248  0834               	movf	(printf@fval+1)^(0+128),w
  2318  0249  1283               	bcf	3,5	;RP0=0, select bank0
  2319  024A  00D1               	movwf	?___ftsub+4
  2320  024B  1683               	bsf	3,5	;RP0=1, select bank1
  2321  024C  0835               	movf	(printf@fval+2)^(0+128),w
  2322  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2323  024E  00D2               	movwf	?___ftsub+5
  2324  024F  26E2  120A  118A   	fcall	___ftsub
  2325  0252  084D               	movf	?___ftsub,w
  2326  0253  1683               	bsf	3,5	;RP0=1, select bank1
  2327  0254  00B3               	movwf	printf@fval^(0+128)
  2328  0255  1283               	bcf	3,5	;RP0=0, select bank0
  2329  0256  084E               	movf	?___ftsub+1,w
  2330  0257  1683               	bsf	3,5	;RP0=1, select bank1
  2331  0258  00B4               	movwf	(printf@fval+1)^(0+128)
  2332  0259  1283               	bcf	3,5	;RP0=0, select bank0
  2333  025A  084F               	movf	?___ftsub+2,w
  2334  025B  1683               	bsf	3,5	;RP0=1, select bank1
  2335  025C  00B5               	movwf	(printf@fval+2)^(0+128)
  2336  025D  01B1               	clrf	printf@exp^(0+128)
  2337  025E  01B2               	clrf	(printf@exp+1)^(0+128)
  2338  025F                     l7022:	
  2339  025F  01B8               	clrf	printf@c^(0+128)
  2340  0260  0AB8               	incf	printf@c^(0+128),f
  2341  0261                     l7028:	
  2342  0261  26FA               	fcall	PL2	;call to abstracted procedure
  2343  0262  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2344  0267  00DB               	movwf	??_printf+1
  2345  0268  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2346  026D  00DC               	movwf	??_printf+2
  2347  026E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2348  0273  00DD               	movwf	??_printf+3
  2349  0274  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2350  0279  00DE               	movwf	??_printf+4
  2351  027A  1683               	bsf	3,5	;RP0=1, select bank1
  2352  027B  022E               	subwf	(printf@_val+3)^(0+128),w
  2353  027C  1D03               	skipz
  2354  027D  2A8E               	goto	u3575
  2355  027E  1283               	bcf	3,5	;RP0=0, select bank0
  2356  027F  085D               	movf	??_printf+3,w
  2357  0280  1683               	bsf	3,5	;RP0=1, select bank1
  2358  0281  022D               	subwf	(printf@_val+2)^(0+128),w
  2359  0282  1D03               	skipz
  2360  0283  2A8E               	goto	u3575
  2361  0284  1283               	bcf	3,5	;RP0=0, select bank0
  2362  0285  085C               	movf	??_printf+2,w
  2363  0286  1683               	bsf	3,5	;RP0=1, select bank1
  2364  0287  022C               	subwf	(printf@_val+1)^(0+128),w
  2365  0288  1D03               	skipz
  2366  0289  2A8E               	goto	u3575
  2367  028A  1283               	bcf	3,5	;RP0=0, select bank0
  2368  028B  085B               	movf	??_printf+1,w
  2369  028C  1683               	bsf	3,5	;RP0=1, select bank1
  2370  028D  022B               	subwf	printf@_val^(0+128),w
  2371  028E                     u3575:	
  2372  028E  1C03               	btfss	3,0
  2373  028F  2A95               	goto	l7036
  2374  0290  0AB8               	incf	printf@c^(0+128),f
  2375  0291  0838               	movf	printf@c^(0+128),w
  2376  0292  3A0A               	xorlw	10
  2377  0293  1D03               	skipz
  2378  0294  2A61               	goto	l7028
  2379  0295                     l7036:	
  2380  0295  0836               	movf	printf@prec^(0+128),w
  2381  0296  0738               	addwf	printf@c^(0+128),w
  2382  0297  1283               	bcf	3,5	;RP0=0, select bank0
  2383  0298  00DA               	movwf	??_printf
  2384  0299  1683               	bsf	3,5	;RP0=1, select bank1
  2385  029A  0837               	movf	(printf@prec+1)^(0+128),w
  2386  029B  1803               	skipnc
  2387  029C  0A37               	incf	(printf@prec+1)^(0+128),w
  2388  029D  1BB8               	btfsc	printf@c^(0+128),7
  2389  029E  3EFF               	addlw	255
  2390  029F  1283               	bcf	3,5	;RP0=0, select bank0
  2391  02A0  00DB               	movwf	??_printf+1
  2392  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  2393  02A2  0831               	movf	printf@exp^(0+128),w
  2394  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  2395  02A4  075A               	addwf	??_printf,w
  2396  02A5  00DC               	movwf	??_printf+2
  2397  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  2398  02A7  0832               	movf	(printf@exp+1)^(0+128),w
  2399  02A8  1803               	skipnc
  2400  02A9  0A32               	incf	(printf@exp+1)^(0+128),w
  2401  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  2402  02AB  075B               	addwf	??_printf+1,w
  2403  02AC  00DD               	movwf	??_printf+3
  2404  02AD  085C               	movf	??_printf+2,w
  2405  02AE  1683               	bsf	3,5	;RP0=1, select bank1
  2406  02AF  02AF               	subwf	printf@width^(0+128),f
  2407  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  2408  02B1  085D               	movf	??_printf+3,w
  2409  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  2410  02B3  1C03               	skipc
  2411  02B4  03B0               	decf	(printf@width+1)^(0+128),f
  2412  02B5  02B0               	subwf	(printf@width+1)^(0+128),f
  2413  02B6  0837               	movf	(printf@prec+1)^(0+128),w
  2414  02B7  0436               	iorwf	printf@prec^(0+128),w
  2415  02B8  1903               	skipnz
  2416  02B9  2ABE               	goto	l7042
  2417  02BA  30FF               	movlw	-1
  2418  02BB  07AF               	addwf	printf@width^(0+128),f
  2419  02BC  1C03               	skipc
  2420  02BD  03B0               	decf	(printf@width+1)^(0+128),f
  2421  02BE                     l7042:	
  2422  02BE  0828               	movf	printf@flag^(0+128),w
  2423  02BF  3903               	andlw	3
  2424  02C0  1D03               	btfss	3,2
  2425  02C1  2AD1               	goto	l7044
  2426  02C2                     l7050:	
  2427  02C2  0830               	movf	(printf@width+1)^(0+128),w
  2428  02C3  3A80               	xorlw	128
  2429  02C4  00FF               	movwf	127
  2430  02C5  3080               	movlw	128
  2431  02C6  027F               	subwf	127,w
  2432  02C7  1D03               	skipz
  2433  02C8  2ACB               	goto	u3615
  2434  02C9  3001               	movlw	1
  2435  02CA  022F               	subwf	printf@width^(0+128),w
  2436  02CB                     u3615:	
  2437  02CB  1C03               	btfss	3,0
  2438  02CC  2AD7               	goto	l7052
  2439  02CD  3020               	movlw	32
  2440  02CE  2509  120A  118A   	fcall	_putch
  2441  02D1                     l7044:	
  2442  02D1  30FF               	movlw	-1
  2443  02D2  278C               	call	PL32	;select bank 1
  2444  02D3  07AF               	addwf	printf@width^(0+128),f
  2445  02D4  1C03               	skipc
  2446  02D5  03B0               	decf	(printf@width+1)^(0+128),f
  2447  02D6  2AC2               	goto	l7050
  2448  02D7                     l7052:	
  2449  02D7  278C               	call	PL32	;select bank 1
  2450  02D8  0828               	movf	printf@flag^(0+128),w
  2451  02D9  3903               	andlw	3
  2452  02DA  1903               	btfsc	3,2
  2453  02DB  2B0A               	goto	l7058
  2454  02DC  302D               	movlw	45
  2455  02DD  2B07               	goto	L2
  2456  02DE                     l7056:	
  2457  02DE  2704  120A  118A   	fcall	PL4	;call to abstracted procedure
  2458  02E1  26FA               	fcall	PL2	;call to abstracted procedure
  2459  02E2  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2460  02E7  00F2               	movwf	?___lldiv
  2461  02E8  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2462  02ED  00F3               	movwf	?___lldiv+1
  2463  02EE  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2464  02F3  00F4               	movwf	?___lldiv+2
  2465  02F4  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2466  02F9  270C  120A  118A   	fcall	PL5	;call to abstracted procedure
  2467  02FC  25F9  120A  118A   	fcall	___lldiv
  2468  02FF  2732  120A  118A   	fcall	PL12	;call to abstracted procedure
  2469  0302  250D  120A  118A   	fcall	___llmod
  2470  0305  0825               	movf	?___llmod,w
  2471  0306  3E30               	addlw	48
  2472  0307                     L2:	
  2473  0307  2509  120A  118A   	fcall	_putch
  2474  030A                     l7058:	
  2475  030A  278C               	call	PL32	;select bank 1
  2476  030B  03B8               	decf	printf@c^(0+128),f
  2477  030C  0F38               	incfsz	printf@c^(0+128),w
  2478  030D  2ADE               	goto	l7056
  2479  030E                     l7064:	
  2480  030E  0832               	movf	(printf@exp+1)^(0+128),w
  2481  030F  3A80               	xorlw	128
  2482  0310  00FF               	movwf	127
  2483  0311  3080               	movlw	128
  2484  0312  027F               	subwf	127,w
  2485  0313  1D03               	skipz
  2486  0314  2B17               	goto	u3645
  2487  0315  3001               	movlw	1
  2488  0316  0231               	subwf	printf@exp^(0+128),w
  2489  0317                     u3645:	
  2490  0317  1C03               	btfss	3,0
  2491  0318  2B23               	goto	l7066
  2492  0319  3030               	movlw	48
  2493  031A  2509  120A  118A   	fcall	_putch
  2494  031D  30FF               	movlw	-1
  2495  031E  278C               	call	PL32	;select bank 1
  2496  031F  07B1               	addwf	printf@exp^(0+128),f
  2497  0320  1C03               	skipc
  2498  0321  03B2               	decf	(printf@exp+1)^(0+128),f
  2499  0322  2B0E               	goto	l7064
  2500  0323                     l7066:	
  2501  0323  278C               	call	PL32	;select bank 1
  2502  0324  0837               	movf	(printf@prec+1)^(0+128),w
  2503  0325  3A80               	xorlw	128
  2504  0326  00FF               	movwf	127
  2505  0327  3080               	movlw	128
  2506  0328  027F               	subwf	127,w
  2507  0329  1D03               	skipz
  2508  032A  2B2D               	goto	u3655
  2509  032B  3009               	movlw	9
  2510  032C  0236               	subwf	printf@prec^(0+128),w
  2511  032D                     u3655:	
  2512  032D  1C03               	skipc
  2513  032E  2B32               	goto	l7070
  2514  032F  3008               	movlw	8
  2515  0330  278C               	call	PL32	;select bank 1
  2516  0331  2B34               	goto	L3
  2517  0332                     l7070:	
  2518  0332  278C               	call	PL32	;select bank 1
  2519  0333  0836               	movf	printf@prec^(0+128),w
  2520  0334                     L3:	
  2521  0334  00B8               	movwf	printf@c^(0+128)
  2522  0335  1283               	bcf	3,5	;RP0=0, select bank0
  2523  0336  00DA               	movwf	??_printf
  2524  0337  01DB               	clrf	??_printf+1
  2525  0338  1BDA               	btfsc	??_printf,7
  2526  0339  03DB               	decf	??_printf+1,f
  2527  033A  1683               	bsf	3,5	;RP0=1, select bank1
  2528  033B  02B6               	subwf	printf@prec^(0+128),f
  2529  033C  1283               	bcf	3,5	;RP0=0, select bank0
  2530  033D  085B               	movf	??_printf+1,w
  2531  033E  1683               	bsf	3,5	;RP0=1, select bank1
  2532  033F  1C03               	skipc
  2533  0340  03B7               	decf	(printf@prec+1)^(0+128),f
  2534  0341  02B7               	subwf	(printf@prec+1)^(0+128),f
  2535  0342  0838               	movf	printf@c^(0+128),w
  2536  0343  1903               	btfsc	3,2
  2537  0344  2B49               	goto	l2241
  2538  0345  302E               	movlw	46
  2539  0346  2509  120A  118A   	fcall	_putch
  2540  0349                     l2241:	
  2541  0349  278C               	call	PL32	;select bank 1
  2542  034A  0838               	movf	printf@c^(0+128),w
  2543  034B  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  2544  0350  0841               	movf	?_scale,w
  2545  0351  00B5               	movwf	?___ftmul+3
  2546  0352  0842               	movf	?_scale+1,w
  2547  0353  00B6               	movwf	?___ftmul+4
  2548  0354  0843               	movf	?_scale+2,w
  2549  0355  00B7               	movwf	?___ftmul+5
  2550  0356  1683               	bsf	3,5	;RP0=1, select bank1
  2551  0357  0833               	movf	printf@fval^(0+128),w
  2552  0358  2752               	fcall	PL16	;call to abstracted procedure
  2553  0359  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2554  035E  0832               	movf	?___ftmul,w
  2555  035F  00A4               	movwf	?___fttol
  2556  0360  0833               	movf	?___ftmul+1,w
  2557  0361  00A5               	movwf	?___fttol+1
  2558  0362  0834               	movf	?___ftmul+2,w
  2559  0363  00A6               	movwf	?___fttol+2
  2560  0364  259E  120A  118A   	fcall	___fttol
  2561  0367  2717  120A  118A   	fcall	PL6	;call to abstracted procedure
  2562  036A  2BD1               	goto	L4
  2563  036B                     l7074:	
  2564  036B  2704  120A  118A   	fcall	PL4	;call to abstracted procedure
  2565  036E  26FA               	fcall	PL2	;call to abstracted procedure
  2566  036F  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2567  0374  00F2               	movwf	?___lldiv
  2568  0375  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2569  037A  00F3               	movwf	?___lldiv+1
  2570  037B  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2571  0380  00F4               	movwf	?___lldiv+2
  2572  0381  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2573  0386  270C  120A  118A   	fcall	PL5	;call to abstracted procedure
  2574  0389  25F9  120A  118A   	fcall	___lldiv
  2575  038C  2732  120A  118A   	fcall	PL12	;call to abstracted procedure
  2576  038F  250D  120A  118A   	fcall	___llmod
  2577  0392  0825               	movf	?___llmod,w
  2578  0393  3E30               	addlw	48
  2579  0394  2509  120A  118A   	fcall	_putch
  2580  0397  278C               	call	PL32	;select bank 1
  2581  0398  26FA               	fcall	PL2	;call to abstracted procedure
  2582  0399  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2583  039E  00A5               	movwf	?___llmod
  2584  039F  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2585  03A4  00A6               	movwf	?___llmod+1
  2586  03A5  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2587  03AA  00A7               	movwf	?___llmod+2
  2588  03AB  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2589  03B0  00A8               	movwf	?___llmod+3
  2590  03B1  1683               	bsf	3,5	;RP0=1, select bank1
  2591  03B2  082E               	movf	(printf@_val+3)^(0+128),w
  2592  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  2593  03B4  00AC               	movwf	?___llmod+7
  2594  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  2595  03B6  082D               	movf	(printf@_val+2)^(0+128),w
  2596  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2597  03B8  00AB               	movwf	?___llmod+6
  2598  03B9  1683               	bsf	3,5	;RP0=1, select bank1
  2599  03BA  082C               	movf	(printf@_val+1)^(0+128),w
  2600  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  2601  03BC  00AA               	movwf	?___llmod+5
  2602  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  2603  03BE  082B               	movf	printf@_val^(0+128),w
  2604  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  2605  03C0  00A9               	movwf	?___llmod+4
  2606  03C1  250D  120A  118A   	fcall	___llmod
  2607  03C4  0828               	movf	?___llmod+3,w
  2608  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  2609  03C6  00AE               	movwf	(printf@_val+3)^(0+128)
  2610  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2611  03C8  0827               	movf	?___llmod+2,w
  2612  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  2613  03CA  00AD               	movwf	(printf@_val+2)^(0+128)
  2614  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  2615  03CC  0826               	movf	?___llmod+1,w
  2616  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  2617  03CE  00AC               	movwf	(printf@_val+1)^(0+128)
  2618  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  2619  03D0  0825               	movf	?___llmod,w
  2620  03D1                     L4:	
  2621  03D1  1683               	bsf	3,5	;RP0=1, select bank1
  2622  03D2  00AB               	movwf	printf@_val^(0+128)
  2623  03D3  03B8               	decf	printf@c^(0+128),f
  2624  03D4  0F38               	incfsz	printf@c^(0+128),w
  2625  03D5  2B6B               	goto	l7074
  2626  03D6                     l7082:	
  2627  03D6  0837               	movf	(printf@prec+1)^(0+128),w
  2628  03D7  0436               	iorwf	printf@prec^(0+128),w
  2629  03D8  1903               	btfsc	3,2
  2630  03D9  2813               	goto	l7150
  2631  03DA  3030               	movlw	48
  2632  03DB  2509  120A  118A   	fcall	_putch
  2633  03DE  30FF               	movlw	-1
  2634  03DF  278C               	call	PL32	;select bank 1
  2635  03E0  07B6               	addwf	printf@prec^(0+128),f
  2636  03E1  1C03               	skipc
  2637  03E2  03B7               	decf	(printf@prec+1)^(0+128),f
  2638  03E3  2BD6               	goto	l7082
  2639  03E4                     l7084:	
  2640  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  2641  03E5  0824               	movf	printf@ap^(0+128),w
  2642  03E6  0084               	movwf	4
  2643  03E7  1383               	bcf	3,7	;select IRP bank0
  2644  03E8  2777  120A  118A   	fcall	PL28	;call to abstracted procedure
  2645  03EB  085A               	movf	??_printf,w
  2646  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  2647  03ED  00AB               	movwf	printf@_val^(0+128)
  2648  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  2649  03EF  085B               	movf	??_printf+1,w
  2650  03F0  1683               	bsf	3,5	;RP0=1, select bank1
  2651  03F1  00AC               	movwf	(printf@_val^(0+128)+1)
  2652  03F2  01AD               	clrf	(printf@_val^(0+128)+2)
  2653  03F3  01AE               	clrf	(printf@_val^(0+128)+3)
  2654  03F4  0AA4               	incf	printf@ap^(0+128),f
  2655  03F5  0AA4               	incf	printf@ap^(0+128),f
  2656  03F6  0837               	movf	(printf@prec+1)^(0+128),w
  2657  03F7  0436               	iorwf	printf@prec^(0+128),w
  2658  03F8  1D03               	skipz
  2659  03F9  2C02               	goto	l7094
  2660  03FA  082E               	movf	(printf@_val+3)^(0+128),w
  2661  03FB  042D               	iorwf	(printf@_val+2)^(0+128),w
  2662  03FC  042C               	iorwf	(printf@_val+1)^(0+128),w
  2663  03FD  042B               	iorwf	printf@_val^(0+128),w
  2664  03FE  1903               	btfsc	3,2
  2665  03FF  0AB6               	incf	printf@prec^(0+128),f
  2666  0400  1903               	skipnz
  2667  0401  0AB7               	incf	(printf@prec+1)^(0+128),f
  2668  0402                     l7094:	
  2669  0402  01B8               	clrf	printf@c^(0+128)
  2670  0403  0AB8               	incf	printf@c^(0+128),f
  2671  0404                     l7100:	
  2672  0404  26FA               	fcall	PL2	;call to abstracted procedure
  2673  0405  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2674  040A  00DB               	movwf	??_printf+1
  2675  040B  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2676  0410  00DC               	movwf	??_printf+2
  2677  0411  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2678  0416  00DD               	movwf	??_printf+3
  2679  0417  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2680  041C  00DE               	movwf	??_printf+4
  2681  041D  1683               	bsf	3,5	;RP0=1, select bank1
  2682  041E  022E               	subwf	(printf@_val+3)^(0+128),w
  2683  041F  1D03               	skipz
  2684  0420  2C31               	goto	u3715
  2685  0421  1283               	bcf	3,5	;RP0=0, select bank0
  2686  0422  085D               	movf	??_printf+3,w
  2687  0423  1683               	bsf	3,5	;RP0=1, select bank1
  2688  0424  022D               	subwf	(printf@_val+2)^(0+128),w
  2689  0425  1D03               	skipz
  2690  0426  2C31               	goto	u3715
  2691  0427  1283               	bcf	3,5	;RP0=0, select bank0
  2692  0428  085C               	movf	??_printf+2,w
  2693  0429  1683               	bsf	3,5	;RP0=1, select bank1
  2694  042A  022C               	subwf	(printf@_val+1)^(0+128),w
  2695  042B  1D03               	skipz
  2696  042C  2C31               	goto	u3715
  2697  042D  1283               	bcf	3,5	;RP0=0, select bank0
  2698  042E  085B               	movf	??_printf+1,w
  2699  042F  1683               	bsf	3,5	;RP0=1, select bank1
  2700  0430  022B               	subwf	printf@_val^(0+128),w
  2701  0431                     u3715:	
  2702  0431  1C03               	btfss	3,0
  2703  0432  2C38               	goto	l7108
  2704  0433  0AB8               	incf	printf@c^(0+128),f
  2705  0434  0838               	movf	printf@c^(0+128),w
  2706  0435  3A0A               	xorlw	10
  2707  0436  1D03               	skipz
  2708  0437  2C04               	goto	l7100
  2709  0438                     l7108:	
  2710  0438  0838               	movf	printf@c^(0+128),w
  2711  0439  275D  120A  118A   	fcall	PL18	;call to abstracted procedure
  2712  043C  0837               	movf	(printf@prec+1)^(0+128),w
  2713  043D  3A80               	xorlw	128
  2714  043E  1283               	bcf	3,5	;RP0=0, select bank0
  2715  043F  025C               	subwf	??_printf+2,w
  2716  0440  1D03               	skipz
  2717  0441  2C46               	goto	u3735
  2718  0442  1683               	bsf	3,5	;RP0=1, select bank1
  2719  0443  0836               	movf	printf@prec^(0+128),w
  2720  0444  1283               	bcf	3,5	;RP0=0, select bank0
  2721  0445  025A               	subwf	??_printf,w
  2722  0446                     u3735:	
  2723  0446  1803               	skipnc
  2724  0447  2C4C               	goto	l7112
  2725  0448  278C               	call	PL32	;select bank 1
  2726  0449  0836               	movf	printf@prec^(0+128),w
  2727  044A  00B8               	movwf	printf@c^(0+128)
  2728  044B  2C64               	goto	l7116
  2729  044C                     l7112:	
  2730  044C  1683               	bsf	3,5	;RP0=1, select bank1
  2731  044D  2767  120A  118A   	fcall	PL20	;call to abstracted procedure
  2732  0450  0837               	movf	(printf@prec+1)^(0+128),w
  2733  0451  3A80               	xorlw	128
  2734  0452  1283               	bcf	3,5	;RP0=0, select bank0
  2735  0453  00DC               	movwf	??_printf+2
  2736  0454  085B               	movf	??_printf+1,w
  2737  0455  3A80               	xorlw	128
  2738  0456  025C               	subwf	??_printf+2,w
  2739  0457  1D03               	skipz
  2740  0458  2C5C               	goto	u3745
  2741  0459  085A               	movf	??_printf,w
  2742  045A  1683               	bsf	3,5	;RP0=1, select bank1
  2743  045B  0236               	subwf	printf@prec^(0+128),w
  2744  045C                     u3745:	
  2745  045C  1803               	skipnc
  2746  045D  2C64               	goto	l7116
  2747  045E  278C               	call	PL32	;select bank 1
  2748  045F  0838               	movf	printf@c^(0+128),w
  2749  0460  00B6               	movwf	printf@prec^(0+128)
  2750  0461  01B7               	clrf	(printf@prec+1)^(0+128)
  2751  0462  1BB6               	btfsc	printf@prec^(0+128),7
  2752  0463  03B7               	decf	(printf@prec+1)^(0+128),f
  2753  0464                     l7116:	
  2754  0464  278C               	call	PL32	;select bank 1
  2755  0465  0830               	movf	(printf@width+1)^(0+128),w
  2756  0466  042F               	iorwf	printf@width^(0+128),w
  2757  0467  1903               	skipnz
  2758  0468  2C71               	goto	l7122
  2759  0469  0828               	movf	printf@flag^(0+128),w
  2760  046A  3903               	andlw	3
  2761  046B  1903               	btfsc	3,2
  2762  046C  2C71               	goto	l7122
  2763  046D  30FF               	movlw	-1
  2764  046E  07AF               	addwf	printf@width^(0+128),f
  2765  046F  1C03               	skipc
  2766  0470  03B0               	decf	(printf@width+1)^(0+128),f
  2767  0471                     l7122:	
  2768  0471  1F29               	btfss	(printf@flag+1)^(0+128),6
  2769  0472  2C8E               	goto	l7130
  2770  0473  0837               	movf	(printf@prec+1)^(0+128),w
  2771  0474  3A80               	xorlw	128
  2772  0475  1283               	bcf	3,5	;RP0=0, select bank0
  2773  0476  00DA               	movwf	??_printf
  2774  0477  1683               	bsf	3,5	;RP0=1, select bank1
  2775  0478  0830               	movf	(printf@width+1)^(0+128),w
  2776  0479  3A80               	xorlw	128
  2777  047A  1283               	bcf	3,5	;RP0=0, select bank0
  2778  047B  025A               	subwf	??_printf,w
  2779  047C  1D03               	skipz
  2780  047D  2C81               	goto	u3785
  2781  047E  1683               	bsf	3,5	;RP0=1, select bank1
  2782  047F  082F               	movf	printf@width^(0+128),w
  2783  0480  0236               	subwf	printf@prec^(0+128),w
  2784  0481                     u3785:	
  2785  0481  1803               	skipnc
  2786  0482  2C8B               	goto	l7128
  2787  0483  278C               	call	PL32	;select bank 1
  2788  0484  0836               	movf	printf@prec^(0+128),w
  2789  0485  02AF               	subwf	printf@width^(0+128),f
  2790  0486  0837               	movf	(printf@prec+1)^(0+128),w
  2791  0487  1C03               	skipc
  2792  0488  03B0               	decf	(printf@width+1)^(0+128),f
  2793  0489  02B0               	subwf	(printf@width+1)^(0+128),f
  2794  048A  2C8E               	goto	l7130
  2795  048B                     l7128:	
  2796  048B  278C               	call	PL32	;select bank 1
  2797  048C  01AF               	clrf	printf@width^(0+128)
  2798  048D  01B0               	clrf	(printf@width+1)^(0+128)
  2799  048E                     l7130:	
  2800  048E  0838               	movf	printf@c^(0+128),w
  2801  048F  275D  120A  118A   	fcall	PL18	;call to abstracted procedure
  2802  0492  0830               	movf	(printf@width+1)^(0+128),w
  2803  0493  3A80               	xorlw	128
  2804  0494  1283               	bcf	3,5	;RP0=0, select bank0
  2805  0495  025C               	subwf	??_printf+2,w
  2806  0496  1D03               	skipz
  2807  0497  2C9C               	goto	u3795
  2808  0498  1683               	bsf	3,5	;RP0=1, select bank1
  2809  0499  082F               	movf	printf@width^(0+128),w
  2810  049A  1283               	bcf	3,5	;RP0=0, select bank0
  2811  049B  025A               	subwf	??_printf,w
  2812  049C                     u3795:	
  2813  049C  1803               	skipnc
  2814  049D  2CAA               	goto	l7134
  2815  049E  1683               	bsf	3,5	;RP0=1, select bank1
  2816  049F  2767  120A  118A   	fcall	PL20	;call to abstracted procedure
  2817  04A2  02AF               	subwf	printf@width^(0+128),f
  2818  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  2819  04A4  085B               	movf	??_printf+1,w
  2820  04A5  1683               	bsf	3,5	;RP0=1, select bank1
  2821  04A6  1C03               	skipc
  2822  04A7  03B0               	decf	(printf@width+1)^(0+128),f
  2823  04A8  02B0               	subwf	(printf@width+1)^(0+128),f
  2824  04A9  2CAD               	goto	l7136
  2825  04AA                     l7134:	
  2826  04AA  278C               	call	PL32	;select bank 1
  2827  04AB  01AF               	clrf	printf@width^(0+128)
  2828  04AC  01B0               	clrf	(printf@width+1)^(0+128)
  2829  04AD                     l7136:	
  2830  04AD  0830               	movf	(printf@width+1)^(0+128),w
  2831  04AE  042F               	iorwf	printf@width^(0+128),w
  2832  04AF  1903               	skipnz
  2833  04B0  2CBE               	goto	l7142
  2834  04B1                     l7138:	
  2835  04B1  3020               	movlw	32
  2836  04B2  2509  120A  118A   	fcall	_putch
  2837  04B5  30FF               	movlw	-1
  2838  04B6  278C               	call	PL32	;select bank 1
  2839  04B7  07AF               	addwf	printf@width^(0+128),f
  2840  04B8  1C03               	skipc
  2841  04B9  03B0               	decf	(printf@width+1)^(0+128),f
  2842  04BA  0830               	movf	(printf@width+1)^(0+128),w
  2843  04BB  042F               	iorwf	printf@width^(0+128),w
  2844  04BC  1D03               	skipz
  2845  04BD  2CB1               	goto	l7138
  2846  04BE                     l7142:	
  2847  04BE  0828               	movf	printf@flag^(0+128),w
  2848  04BF  3903               	andlw	3
  2849  04C0  1903               	btfsc	3,2
  2850  04C1  2CC6               	goto	l7148
  2851  04C2  302D               	movlw	45
  2852  04C3                     L5:	
  2853  04C3  2509  120A  118A   	fcall	_putch
  2854  04C6                     l7148:	
  2855  04C6  30FF               	movlw	-1
  2856  04C7  278C               	call	PL32	;select bank 1
  2857  04C8  07B6               	addwf	printf@prec^(0+128),f
  2858  04C9  1C03               	skipc
  2859  04CA  03B7               	decf	(printf@prec+1)^(0+128),f
  2860  04CB  0A36               	incf	printf@prec^(0+128),w
  2861  04CC  1903               	skipnz
  2862  04CD  0A37               	incf	(printf@prec+1)^(0+128),w
  2863  04CE  1903               	btfsc	3,2
  2864  04CF  2813               	goto	l7150
  2865  04D0  300A               	movlw	10
  2866  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  2867  04D2  00A5               	movwf	?___llmod
  2868  04D3  01A6               	clrf	?___llmod+1
  2869  04D4  01A7               	clrf	?___llmod+2
  2870  04D5  01A8               	clrf	?___llmod+3
  2871  04D6  1683               	bsf	3,5	;RP0=1, select bank1
  2872  04D7  0836               	movf	printf@prec^(0+128),w
  2873  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  2874  04D9  00DA               	movwf	??_printf
  2875  04DA  1003               	clrc
  2876  04DB  0DDA               	rlf	??_printf,f
  2877  04DC  1003               	clrc
  2878  04DD  0D5A               	rlf	??_printf,w
  2879  04DE  3E4F               	addlw	low (_dpowers-__stringbase)
  2880  04DF  0084               	movwf	4
  2881  04E0  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2882  04E5  00F2               	movwf	?___lldiv
  2883  04E6  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2884  04EB  00F3               	movwf	?___lldiv+1
  2885  04EC  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2886  04F1  00F4               	movwf	?___lldiv+2
  2887  04F2  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2888  04F7  270C  120A  118A   	fcall	PL5	;call to abstracted procedure
  2889  04FA  25F9  120A  118A   	fcall	___lldiv
  2890  04FD  2732  120A  118A   	fcall	PL12	;call to abstracted procedure
  2891  0500  250D  120A  118A   	fcall	___llmod
  2892  0503  0825               	movf	?___llmod,w
  2893  0504  3E30               	addlw	48
  2894  0505  1683               	bsf	3,5	;RP0=1, select bank1
  2895  0506  00B8               	movwf	printf@c^(0+128)
  2896  0507  2CC3               	goto	L5
  2897  0508                     l2269:	
  2898  0508  0008               	return
  2899  0509                     __end_of_printf:	
  2900  0509                     __ptext539:	
  2901 ;; =============== function _printf ends ============
  2902                           
  2903                           
  2904 ;; *************** function _putch *****************
  2905 ;; Defined at:
  2906 ;;		line 96 in file "C:\Online Class\HK6\Practice_Micro\hc-sr04\hcsr04.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;  c               1    wreg     unsigned char 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;  c               1   11[COMMON] unsigned char 
  2911 ;; Return value:  Size  Location     Type
  2912 ;;		None               void
  2913 ;; Registers used:
  2914 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/20
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2920 ;;      Params:         0       0       0       0       0
  2921 ;;      Locals:         1       0       0       0       0
  2922 ;;      Temps:          0       0       0       0       0
  2923 ;;      Totals:         1       0       0       0       0
  2924 ;;Total ram usage:        1 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; Hardware stack levels required when called:    4
  2927 ;; This function calls:
  2928 ;;		_lcd_putc
  2929 ;; This function is called by:
  2930 ;;		_printf
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933  0509                     _putch:	
  2934                           
  2935                           ; Regs used in _putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2936                           ;putch@c stored from wreg
  2937  0509  00FB               	movwf	putch@c
  2938                           
  2939                           ;hcsr04.c: 97: lcd_putc(c);
  2940  050A  120A  158A  2AA6   	ljmp	_lcd_putc
  2941  050D                     __end_of_putch:	
  2942  050D                     __ptext557:	
  2943 ;; =============== function ___ftneg ends ============
  2944                           
  2945                           
  2946 ;; *************** function ___llmod *****************
  2947 ;; Defined at:
  2948 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\llmod.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;  divisor         4    5[BANK0 ] unsigned long 
  2951 ;;  dividend        4    9[BANK0 ] unsigned long 
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;  counter         1   10[COMMON] unsigned char 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  4    5[BANK0 ] unsigned long 
  2956 ;; Registers used:
  2957 ;;		wreg, status,2, status,0
  2958 ;; Tracked objects:
  2959 ;;		On entry : 60/0
  2960 ;;		On exit  : 60/0
  2961 ;;		Unchanged: FFF9F/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2963 ;;      Params:         0       8       0       0       0
  2964 ;;      Locals:         1       0       0       0       0
  2965 ;;      Temps:          0       0       0       0       0
  2966 ;;      Totals:         1       8       0       0       0
  2967 ;;Total ram usage:        9 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    1
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_printf
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976  050D                     ___llmod:	
  2977                           
  2978                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2979  050D  0828               	movf	___llmod@divisor+3,w
  2980  050E  0427               	iorwf	___llmod@divisor+2,w
  2981  050F  0426               	iorwf	___llmod@divisor+1,w
  2982  0510  0425               	iorwf	___llmod@divisor,w
  2983  0511  1903               	skipnz
  2984  0512  2D42               	goto	l6426
  2985  0513  01FA               	clrf	___llmod@counter
  2986  0514                     L13:	
  2987  0514  0AFA               	incf	___llmod@counter,f
  2988  0515  1BA8               	btfsc	___llmod@divisor+3,7
  2989  0516  2D1D               	goto	l6418
  2990  0517  1003               	clrc
  2991  0518  0DA5               	rlf	___llmod@divisor,f
  2992  0519  0DA6               	rlf	___llmod@divisor+1,f
  2993  051A  0DA7               	rlf	___llmod@divisor+2,f
  2994  051B  0DA8               	rlf	___llmod@divisor+3,f
  2995  051C  2D14               	goto	L13
  2996  051D                     l6418:	
  2997  051D  0828               	movf	___llmod@divisor+3,w
  2998  051E  022C               	subwf	___llmod@dividend+3,w
  2999  051F  1D03               	skipz
  3000  0520  2D2B               	goto	u2525
  3001  0521  0827               	movf	___llmod@divisor+2,w
  3002  0522  022B               	subwf	___llmod@dividend+2,w
  3003  0523  1D03               	skipz
  3004  0524  2D2B               	goto	u2525
  3005  0525  0826               	movf	___llmod@divisor+1,w
  3006  0526  022A               	subwf	___llmod@dividend+1,w
  3007  0527  1D03               	skipz
  3008  0528  2D2B               	goto	u2525
  3009  0529  0825               	movf	___llmod@divisor,w
  3010  052A  0229               	subwf	___llmod@dividend,w
  3011  052B                     u2525:	
  3012  052B  1C03               	skipc
  3013  052C  2D3C               	goto	L14
  3014  052D  0825               	movf	___llmod@divisor,w
  3015  052E  02A9               	subwf	___llmod@dividend,f
  3016  052F  0826               	movf	___llmod@divisor+1,w
  3017  0530  1C03               	skipc
  3018  0531  0F26               	incfsz	___llmod@divisor+1,w
  3019  0532  02AA               	subwf	___llmod@dividend+1,f
  3020  0533  0827               	movf	___llmod@divisor+2,w
  3021  0534  1C03               	skipc
  3022  0535  0F27               	incfsz	___llmod@divisor+2,w
  3023  0536  02AB               	subwf	___llmod@dividend+2,f
  3024  0537  0828               	movf	___llmod@divisor+3,w
  3025  0538  1C03               	skipc
  3026  0539  0F28               	incfsz	___llmod@divisor+3,w
  3027  053A  02AC               	subwf	___llmod@dividend+3,f
  3028  053B  1003               	clrc
  3029  053C                     L14:	
  3030  053C  0CA8               	rrf	___llmod@divisor+3,f
  3031  053D  0CA7               	rrf	___llmod@divisor+2,f
  3032  053E  0CA6               	rrf	___llmod@divisor+1,f
  3033  053F  0CA5               	rrf	___llmod@divisor,f
  3034  0540  0BFA               	decfsz	___llmod@counter,f
  3035  0541  2D1D               	goto	l6418
  3036  0542                     l6426:	
  3037  0542  082C               	movf	___llmod@dividend+3,w
  3038  0543  00A8               	movwf	?___llmod+3
  3039  0544  082B               	movf	___llmod@dividend+2,w
  3040  0545  00A7               	movwf	?___llmod+2
  3041  0546  082A               	movf	___llmod@dividend+1,w
  3042  0547  00A6               	movwf	?___llmod+1
  3043  0548  0829               	movf	___llmod@dividend,w
  3044  0549  00A5               	movwf	?___llmod
  3045  054A  0008               	return
  3046  054B                     __end_of___llmod:	
  3047  054B                     __ptext555:	
  3048 ;; =============== function ___lldiv ends ============
  3049                           
  3050                           
  3051 ;; *************** function ___ftge *****************
  3052 ;; Defined at:
  3053 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftge.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;  ff1             3    2[COMMON] float 
  3056 ;;  ff2             3    5[COMMON] float 
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;		None
  3059 ;; Return value:  Size  Location     Type
  3060 ;;		None               void
  3061 ;; Registers used:
  3062 ;;		wreg, status,2, status,0
  3063 ;; Tracked objects:
  3064 ;;		On entry : 60/20
  3065 ;;		On exit  : 60/20
  3066 ;;		Unchanged: FFF9F/0
  3067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3068 ;;      Params:         6       0       0       0       0
  3069 ;;      Locals:         0       0       0       0       0
  3070 ;;      Temps:          0       0       0       0       0
  3071 ;;      Totals:         6       0       0       0       0
  3072 ;;Total ram usage:        6 bytes
  3073 ;; Hardware stack levels used:    1
  3074 ;; Hardware stack levels required when called:    1
  3075 ;; This function calls:
  3076 ;;		Nothing
  3077 ;; This function is called by:
  3078 ;;		_printf
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081  054B                     ___ftge:	
  3082                           
  3083                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3084  054B  1FF4               	btfss	___ftge@ff1+2,7
  3085  054C  2D5A               	goto	l6442
  3086  054D  0872               	movf	___ftge@ff1,w
  3087  054E  3C00               	sublw	0
  3088  054F  00F2               	movwf	___ftge@ff1
  3089  0550  0873               	movf	___ftge@ff1+1,w
  3090  0551  1C03               	skipc
  3091  0552  0F73               	incfsz	___ftge@ff1+1,w
  3092  0553  3C00               	sublw	0
  3093  0554  00F3               	movwf	___ftge@ff1+1
  3094  0555  0874               	movf	___ftge@ff1+2,w
  3095  0556  1C03               	skipc
  3096  0557  0F74               	incfsz	___ftge@ff1+2,w
  3097  0558  3C80               	sublw	128
  3098  0559  00F4               	movwf	___ftge@ff1+2
  3099  055A                     l6442:	
  3100  055A  1FF7               	btfss	___ftge@ff2+2,7
  3101  055B  2D69               	goto	l6446
  3102  055C  0875               	movf	___ftge@ff2,w
  3103  055D  3C00               	sublw	0
  3104  055E  00F5               	movwf	___ftge@ff2
  3105  055F  0876               	movf	___ftge@ff2+1,w
  3106  0560  1C03               	skipc
  3107  0561  0F76               	incfsz	___ftge@ff2+1,w
  3108  0562  3C00               	sublw	0
  3109  0563  00F6               	movwf	___ftge@ff2+1
  3110  0564  0877               	movf	___ftge@ff2+2,w
  3111  0565  1C03               	skipc
  3112  0566  0F77               	incfsz	___ftge@ff2+2,w
  3113  0567  3C80               	sublw	128
  3114  0568  00F7               	movwf	___ftge@ff2+2
  3115  0569                     l6446:	
  3116  0569  3080               	movlw	128
  3117  056A  06F4               	xorwf	___ftge@ff1+2,f
  3118  056B  06F7               	xorwf	___ftge@ff2+2,f
  3119  056C  0877               	movf	___ftge@ff2+2,w
  3120  056D  0274               	subwf	___ftge@ff1+2,w
  3121  056E  1D03               	skipz
  3122  056F  0008               	return
  3123  0570  0876               	movf	___ftge@ff2+1,w
  3124  0571  0273               	subwf	___ftge@ff1+1,w
  3125  0572  1D03               	skipz
  3126  0573  0008               	return
  3127  0574  0875               	movf	___ftge@ff2,w
  3128  0575  0272               	subwf	___ftge@ff1,w
  3129  0576  0008               	return
  3130  0577                     __end_of___ftge:	
  3131  0577                     __ptext567:	
  3132 ;; =============== function __tdiv_to_l_ ends ============
  3133                           
  3134                           
  3135 ;; *************** function _isdigit *****************
  3136 ;; Defined at:
  3137 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isdigit.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;  c               1    wreg     unsigned char 
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;  c               1    3[COMMON] unsigned char 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;		None               void
  3144 ;; Registers used:
  3145 ;;		wreg, status,2, status,0
  3146 ;; Tracked objects:
  3147 ;;		On entry : 60/20
  3148 ;;		On exit  : 60/20
  3149 ;;		Unchanged: FFF9F/0
  3150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3151 ;;      Params:         0       0       0       0       0
  3152 ;;      Locals:         2       0       0       0       0
  3153 ;;      Temps:          0       0       0       0       0
  3154 ;;      Totals:         2       0       0       0       0
  3155 ;;Total ram usage:        2 bytes
  3156 ;; Hardware stack levels used:    1
  3157 ;; Hardware stack levels required when called:    1
  3158 ;; This function calls:
  3159 ;;		Nothing
  3160 ;; This function is called by:
  3161 ;;		_printf
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164  0577                     _isdigit:	
  3165                           
  3166                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3167                           ;isdigit@c stored from wreg
  3168  0577  00F3               	movwf	isdigit@c
  3169  0578  303A               	movlw	58
  3170  0579  01F2               	clrf	_isdigit$3668
  3171  057A  0273               	subwf	isdigit@c,w
  3172  057B  1803               	skipnc
  3173  057C  2D83               	goto	l6128
  3174  057D  3030               	movlw	48
  3175  057E  0273               	subwf	isdigit@c,w
  3176  057F  1C03               	skipc
  3177  0580  2D83               	goto	l6128
  3178  0581  01F2               	clrf	_isdigit$3668
  3179  0582  0AF2               	incf	_isdigit$3668,f
  3180  0583                     l6128:	
  3181  0583  0C72               	rrf	_isdigit$3668,w
  3182  0584  0008               	return
  3183  0585                     __end_of_isdigit:	
  3184  0585                     __ptext563:	
  3185 ;; =============== function ___lbdiv ends ============
  3186                           
  3187                           
  3188 ;; *************** function ___wmul *****************
  3189 ;; Defined at:
  3190 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  multiplier      2    2[COMMON] unsigned int 
  3193 ;;  multiplicand    2    4[COMMON] unsigned int 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  product         2    6[COMMON] unsigned int 
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  2    2[COMMON] unsigned int 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0
  3200 ;; Tracked objects:
  3201 ;;		On entry : 60/20
  3202 ;;		On exit  : 60/20
  3203 ;;		Unchanged: FFF9F/0
  3204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3205 ;;      Params:         4       0       0       0       0
  3206 ;;      Locals:         2       0       0       0       0
  3207 ;;      Temps:          0       0       0       0       0
  3208 ;;      Totals:         6       0       0       0       0
  3209 ;;Total ram usage:        6 bytes
  3210 ;; Hardware stack levels used:    1
  3211 ;; Hardware stack levels required when called:    1
  3212 ;; This function calls:
  3213 ;;		Nothing
  3214 ;; This function is called by:
  3215 ;;		_fround
  3216 ;;		_scale
  3217 ;;		_printf
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220  0585                     ___wmul:	
  3221                           
  3222                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3223  0585  01F6               	clrf	___wmul@product
  3224  0586  01F7               	clrf	___wmul@product+1
  3225  0587                     l6244:	
  3226  0587  1C72               	btfss	___wmul@multiplier,0
  3227  0588  2D8F               	goto	l6248
  3228  0589  0874               	movf	___wmul@multiplicand,w
  3229  058A  07F6               	addwf	___wmul@product,f
  3230  058B  1803               	skipnc
  3231  058C  0AF7               	incf	___wmul@product+1,f
  3232  058D  0875               	movf	___wmul@multiplicand+1,w
  3233  058E  07F7               	addwf	___wmul@product+1,f
  3234  058F                     l6248:	
  3235  058F  1003               	clrc
  3236  0590  0DF4               	rlf	___wmul@multiplicand,f
  3237  0591  0DF5               	rlf	___wmul@multiplicand+1,f
  3238  0592  1003               	clrc
  3239  0593  0CF3               	rrf	___wmul@multiplier+1,f
  3240  0594  0CF2               	rrf	___wmul@multiplier,f
  3241  0595  0873               	movf	___wmul@multiplier+1,w
  3242  0596  0472               	iorwf	___wmul@multiplier,w
  3243  0597  1D03               	skipz
  3244  0598  2D87               	goto	l6244
  3245  0599  0877               	movf	___wmul@product+1,w
  3246  059A  00F3               	movwf	?___wmul+1
  3247  059B  0876               	movf	___wmul@product,w
  3248  059C  00F2               	movwf	?___wmul
  3249  059D  0008               	return
  3250  059E                     __end_of___wmul:	
  3251  059E                     __ptext559:	
  3252 ;; =============== function ___awdiv ends ============
  3253                           
  3254                           
  3255 ;; *************** function ___fttol *****************
  3256 ;; Defined at:
  3257 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  3258 ;; Parameters:    Size  Location     Type
  3259 ;;  f1              3    4[BANK0 ] float 
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;  lval            4   12[BANK0 ] unsigned long 
  3262 ;;  exp1            1   16[BANK0 ] unsigned char 
  3263 ;;  sign1           1   11[BANK0 ] unsigned char 
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  4    4[BANK0 ] long 
  3266 ;; Registers used:
  3267 ;;		wreg, status,2, status,0
  3268 ;; Tracked objects:
  3269 ;;		On entry : 60/0
  3270 ;;		On exit  : 60/0
  3271 ;;		Unchanged: FFF9F/0
  3272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3273 ;;      Params:         0       4       0       0       0
  3274 ;;      Locals:         0       6       0       0       0
  3275 ;;      Temps:          0       3       0       0       0
  3276 ;;      Totals:         0      13       0       0       0
  3277 ;;Total ram usage:       13 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; Hardware stack levels required when called:    1
  3280 ;; This function calls:
  3281 ;;		Nothing
  3282 ;; This function is called by:
  3283 ;;		_printf
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286  059E                     ___fttol:	
  3287                           
  3288                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3289  059E  2785  120A  118A   	fcall	PL31	;call to abstracted procedure
  3290  05A1  1003               	clrc
  3291  05A2  0D29               	rlf	??___fttol+1,w
  3292  05A3  0D2A               	rlf	??___fttol+2,w
  3293  05A4  00B0               	movwf	___fttol@exp1
  3294  05A5  08B0               	movf	___fttol@exp1,f
  3295  05A6  1D03               	skipz
  3296  05A7  2DAD               	goto	l6332
  3297  05A8                     l6330:	
  3298  05A8  01A4               	clrf	?___fttol
  3299  05A9  01A5               	clrf	?___fttol+1
  3300  05AA  01A6               	clrf	?___fttol+2
  3301  05AB  01A7               	clrf	?___fttol+3
  3302  05AC  0008               	return
  3303  05AD                     l6332:	
  3304  05AD  2785  120A  118A   	fcall	PL31	;call to abstracted procedure
  3305  05B0  3017               	movlw	23
  3306  05B1                     u2365:	
  3307  05B1  1003               	clrc
  3308  05B2  0CAA               	rrf	??___fttol+2,f
  3309  05B3  0CA9               	rrf	??___fttol+1,f
  3310  05B4  0CA8               	rrf	??___fttol,f
  3311  05B5  3EFF               	addlw	-1
  3312  05B6  1D03               	skipz
  3313  05B7  2DB1               	goto	u2365
  3314  05B8  0828               	movf	??___fttol,w
  3315  05B9  00AB               	movwf	___fttol@sign1
  3316  05BA  17A5               	bsf	___fttol@f1+1,7
  3317  05BB  01A6               	clrf	___fttol@f1+2
  3318  05BC  0824               	movf	___fttol@f1,w
  3319  05BD  00AC               	movwf	___fttol@lval
  3320  05BE  0825               	movf	___fttol@f1+1,w
  3321  05BF  00AD               	movwf	___fttol@lval+1
  3322  05C0  0826               	movf	___fttol@f1+2,w
  3323  05C1  00AE               	movwf	___fttol@lval+2
  3324  05C2  308E               	movlw	142
  3325  05C3  01AF               	clrf	___fttol@lval+3
  3326  05C4  02B0               	subwf	___fttol@exp1,f
  3327  05C5  1FB0               	btfss	___fttol@exp1,7
  3328  05C6  2DD4               	goto	l6352
  3329  05C7  0830               	movf	___fttol@exp1,w
  3330  05C8  3A80               	xorlw	128
  3331  05C9  3E8F               	addlw	143
  3332  05CA  1C03               	btfss	3,0
  3333  05CB  2DA8               	goto	l6330
  3334  05CC                     l6348:	
  3335  05CC  1003               	clrc
  3336  05CD  0CAF               	rrf	___fttol@lval+3,f
  3337  05CE  0CAE               	rrf	___fttol@lval+2,f
  3338  05CF  0CAD               	rrf	___fttol@lval+1,f
  3339  05D0  0CAC               	rrf	___fttol@lval,f
  3340  05D1  0FB0               	incfsz	___fttol@exp1,f
  3341  05D2  2DCC               	goto	l6348
  3342  05D3  2DE2               	goto	l6358
  3343  05D4                     l6352:	
  3344  05D4  3018               	movlw	24
  3345  05D5  0230               	subwf	___fttol@exp1,w
  3346  05D6  1803               	btfsc	3,0
  3347  05D7  2DA8               	goto	l6330
  3348  05D8                     l3389:	
  3349  05D8  08B0               	movf	___fttol@exp1,f
  3350  05D9  1903               	btfsc	3,2
  3351  05DA  2DE2               	goto	l6358
  3352  05DB  1003               	clrc
  3353  05DC  0DAC               	rlf	___fttol@lval,f
  3354  05DD  0DAD               	rlf	___fttol@lval+1,f
  3355  05DE  0DAE               	rlf	___fttol@lval+2,f
  3356  05DF  0DAF               	rlf	___fttol@lval+3,f
  3357  05E0  03B0               	decf	___fttol@exp1,f
  3358  05E1  2DD8               	goto	l3389
  3359  05E2                     l6358:	
  3360  05E2  082B               	movf	___fttol@sign1,w
  3361  05E3  1903               	btfsc	3,2
  3362  05E4  2DF0               	goto	l6362
  3363  05E5  09AC               	comf	___fttol@lval,f
  3364  05E6  09AD               	comf	___fttol@lval+1,f
  3365  05E7  09AE               	comf	___fttol@lval+2,f
  3366  05E8  09AF               	comf	___fttol@lval+3,f
  3367  05E9  0AAC               	incf	___fttol@lval,f
  3368  05EA  1903               	skipnz
  3369  05EB  0AAD               	incf	___fttol@lval+1,f
  3370  05EC  1903               	skipnz
  3371  05ED  0AAE               	incf	___fttol@lval+2,f
  3372  05EE  1903               	skipnz
  3373  05EF  0AAF               	incf	___fttol@lval+3,f
  3374  05F0                     l6362:	
  3375  05F0  082F               	movf	___fttol@lval+3,w
  3376  05F1  00A7               	movwf	?___fttol+3
  3377  05F2  082E               	movf	___fttol@lval+2,w
  3378  05F3  00A6               	movwf	?___fttol+2
  3379  05F4  082D               	movf	___fttol@lval+1,w
  3380  05F5  00A5               	movwf	?___fttol+1
  3381  05F6  082C               	movf	___fttol@lval,w
  3382  05F7  00A4               	movwf	?___fttol
  3383  05F8  0008               	return
  3384  05F9                     __end_of___fttol:	
  3385  05F9                     __ptext554:	
  3386 ;; =============== function ___awmod ends ============
  3387                           
  3388                           
  3389 ;; *************** function ___lldiv *****************
  3390 ;; Defined at:
  3391 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lldiv.c"
  3392 ;; Parameters:    Size  Location     Type
  3393 ;;  divisor         4    2[COMMON] unsigned long 
  3394 ;;  dividend        4    6[COMMON] unsigned long 
  3395 ;; Auto vars:     Size  Location     Type
  3396 ;;  quotient        4    0[BANK0 ] unsigned long 
  3397 ;;  counter         1    4[BANK0 ] unsigned char 
  3398 ;; Return value:  Size  Location     Type
  3399 ;;                  4    2[COMMON] unsigned long 
  3400 ;; Registers used:
  3401 ;;		wreg, status,2, status,0
  3402 ;; Tracked objects:
  3403 ;;		On entry : 60/20
  3404 ;;		On exit  : 60/0
  3405 ;;		Unchanged: FFF9F/0
  3406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3407 ;;      Params:         8       0       0       0       0
  3408 ;;      Locals:         0       5       0       0       0
  3409 ;;      Temps:          0       0       0       0       0
  3410 ;;      Totals:         8       5       0       0       0
  3411 ;;Total ram usage:       13 bytes
  3412 ;; Hardware stack levels used:    1
  3413 ;; Hardware stack levels required when called:    1
  3414 ;; This function calls:
  3415 ;;		Nothing
  3416 ;; This function is called by:
  3417 ;;		_printf
  3418 ;; This function uses a non-reentrant model
  3419 ;;
  3420  05F9                     ___lldiv:	
  3421                           
  3422                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3423  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  3424  05FA  01A0               	clrf	___lldiv@quotient
  3425  05FB  01A1               	clrf	___lldiv@quotient+1
  3426  05FC  01A2               	clrf	___lldiv@quotient+2
  3427  05FD  01A3               	clrf	___lldiv@quotient+3
  3428  05FE  0875               	movf	___lldiv@divisor+3,w
  3429  05FF  0474               	iorwf	___lldiv@divisor+2,w
  3430  0600  0473               	iorwf	___lldiv@divisor+1,w
  3431  0601  0472               	iorwf	___lldiv@divisor,w
  3432  0602  1903               	skipnz
  3433  0603  2E39               	goto	l6480
  3434  0604  01A4               	clrf	___lldiv@counter
  3435  0605                     L10:	
  3436  0605  0AA4               	incf	___lldiv@counter,f
  3437  0606  1BF5               	btfsc	___lldiv@divisor+3,7
  3438  0607  2E0E               	goto	l6468
  3439  0608  1003               	clrc
  3440  0609  0DF2               	rlf	___lldiv@divisor,f
  3441  060A  0DF3               	rlf	___lldiv@divisor+1,f
  3442  060B  0DF4               	rlf	___lldiv@divisor+2,f
  3443  060C  0DF5               	rlf	___lldiv@divisor+3,f
  3444  060D  2E05               	goto	L10
  3445  060E                     l6468:	
  3446  060E  1003               	clrc
  3447  060F  0DA0               	rlf	___lldiv@quotient,f
  3448  0610  0DA1               	rlf	___lldiv@quotient+1,f
  3449  0611  0DA2               	rlf	___lldiv@quotient+2,f
  3450  0612  0DA3               	rlf	___lldiv@quotient+3,f
  3451  0613  0875               	movf	___lldiv@divisor+3,w
  3452  0614  0279               	subwf	___lldiv@dividend+3,w
  3453  0615  1D03               	skipz
  3454  0616  2E21               	goto	u2605
  3455  0617  0874               	movf	___lldiv@divisor+2,w
  3456  0618  0278               	subwf	___lldiv@dividend+2,w
  3457  0619  1D03               	skipz
  3458  061A  2E21               	goto	u2605
  3459  061B  0873               	movf	___lldiv@divisor+1,w
  3460  061C  0277               	subwf	___lldiv@dividend+1,w
  3461  061D  1D03               	skipz
  3462  061E  2E21               	goto	u2605
  3463  061F  0872               	movf	___lldiv@divisor,w
  3464  0620  0276               	subwf	___lldiv@dividend,w
  3465  0621                     u2605:	
  3466  0621  1C03               	skipc
  3467  0622  2E33               	goto	L11
  3468  0623  0872               	movf	___lldiv@divisor,w
  3469  0624  02F6               	subwf	___lldiv@dividend,f
  3470  0625  0873               	movf	___lldiv@divisor+1,w
  3471  0626  1C03               	skipc
  3472  0627  0F73               	incfsz	___lldiv@divisor+1,w
  3473  0628  02F7               	subwf	___lldiv@dividend+1,f
  3474  0629  0874               	movf	___lldiv@divisor+2,w
  3475  062A  1C03               	skipc
  3476  062B  0F74               	incfsz	___lldiv@divisor+2,w
  3477  062C  02F8               	subwf	___lldiv@dividend+2,f
  3478  062D  0875               	movf	___lldiv@divisor+3,w
  3479  062E  1C03               	skipc
  3480  062F  0F75               	incfsz	___lldiv@divisor+3,w
  3481  0630  02F9               	subwf	___lldiv@dividend+3,f
  3482  0631  1420               	bsf	___lldiv@quotient,0
  3483  0632  1003               	clrc
  3484  0633                     L11:	
  3485  0633  0CF5               	rrf	___lldiv@divisor+3,f
  3486  0634  0CF4               	rrf	___lldiv@divisor+2,f
  3487  0635  0CF3               	rrf	___lldiv@divisor+1,f
  3488  0636  0CF2               	rrf	___lldiv@divisor,f
  3489  0637  0BA4               	decfsz	___lldiv@counter,f
  3490  0638  2E0E               	goto	l6468
  3491  0639                     l6480:	
  3492  0639  0823               	movf	___lldiv@quotient+3,w
  3493  063A  00F5               	movwf	?___lldiv+3
  3494  063B  0822               	movf	___lldiv@quotient+2,w
  3495  063C  00F4               	movwf	?___lldiv+2
  3496  063D  0821               	movf	___lldiv@quotient+1,w
  3497  063E  00F3               	movwf	?___lldiv+1
  3498  063F  0820               	movf	___lldiv@quotient,w
  3499  0640  00F2               	movwf	?___lldiv
  3500  0641  0008               	return
  3501  0642                     __end_of___lldiv:	
  3502  0642                     __ptext566:	
  3503 ;; =============== function __div_to_l_ ends ============
  3504                           
  3505                           
  3506 ;; *************** function __tdiv_to_l_ *****************
  3507 ;; Defined at:
  3508 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdivl.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;  f1              3    2[COMMON] float 
  3511 ;;  f2              3    5[COMMON] float 
  3512 ;; Auto vars:     Size  Location     Type
  3513 ;;  quot            4    0[BANK0 ] unsigned long 
  3514 ;;  exp1            1    5[BANK0 ] unsigned char 
  3515 ;;  cntr            1    4[BANK0 ] unsigned char 
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  4    2[COMMON] unsigned long 
  3518 ;; Registers used:
  3519 ;;		wreg, status,2, status,0
  3520 ;; Tracked objects:
  3521 ;;		On entry : 60/20
  3522 ;;		On exit  : 60/0
  3523 ;;		Unchanged: FFF9F/0
  3524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3525 ;;      Params:         6       0       0       0       0
  3526 ;;      Locals:         0       6       0       0       0
  3527 ;;      Temps:          3       0       0       0       0
  3528 ;;      Totals:         9       6       0       0       0
  3529 ;;Total ram usage:       15 bytes
  3530 ;; Hardware stack levels used:    1
  3531 ;; Hardware stack levels required when called:    1
  3532 ;; This function calls:
  3533 ;;		Nothing
  3534 ;; This function is called by:
  3535 ;;		_printf
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538  0642                     __tdiv_to_l_:	
  3539                           
  3540                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  3541  0642  0872               	movf	__tdiv_to_l_@f1,w
  3542  0643  00F8               	movwf	??__tdiv_to_l_
  3543  0644  0873               	movf	__tdiv_to_l_@f1+1,w
  3544  0645  00F9               	movwf	??__tdiv_to_l_+1
  3545  0646  0874               	movf	__tdiv_to_l_@f1+2,w
  3546  0647  00FA               	movwf	??__tdiv_to_l_+2
  3547  0648  1003               	clrc
  3548  0649  0D79               	rlf	??__tdiv_to_l_+1,w
  3549  064A  0D7A               	rlf	??__tdiv_to_l_+2,w
  3550  064B  1283               	bcf	3,5	;RP0=0, select bank0
  3551  064C  00A5               	movwf	__tdiv_to_l_@exp1
  3552  064D  08A5               	movf	__tdiv_to_l_@exp1,f
  3553  064E  1D03               	skipz
  3554  064F  2E55               	goto	l6136
  3555  0650                     l6134:	
  3556  0650  01F2               	clrf	?__tdiv_to_l_
  3557  0651  01F3               	clrf	?__tdiv_to_l_+1
  3558  0652  01F4               	clrf	?__tdiv_to_l_+2
  3559  0653  01F5               	clrf	?__tdiv_to_l_+3
  3560  0654  0008               	return
  3561  0655                     l6136:	
  3562  0655  0875               	movf	__tdiv_to_l_@f2,w
  3563  0656  00F8               	movwf	??__tdiv_to_l_
  3564  0657  0876               	movf	__tdiv_to_l_@f2+1,w
  3565  0658  00F9               	movwf	??__tdiv_to_l_+1
  3566  0659  0877               	movf	__tdiv_to_l_@f2+2,w
  3567  065A  00FA               	movwf	??__tdiv_to_l_+2
  3568  065B  1003               	clrc
  3569  065C  0D79               	rlf	??__tdiv_to_l_+1,w
  3570  065D  0D7A               	rlf	??__tdiv_to_l_+2,w
  3571  065E  00A4               	movwf	__tdiv_to_l_@cntr
  3572  065F  08A4               	movf	__tdiv_to_l_@cntr,f
  3573  0660  1903               	btfsc	3,2
  3574  0661  2E50               	goto	l6134
  3575  0662  307F               	movlw	127
  3576  0663  17F3               	bsf	__tdiv_to_l_@f1+1,7
  3577  0664  01F4               	clrf	__tdiv_to_l_@f1+2
  3578  0665  17F6               	bsf	__tdiv_to_l_@f2+1,7
  3579  0666  01F7               	clrf	__tdiv_to_l_@f2+2
  3580  0667  01A0               	clrf	__tdiv_to_l_@quot
  3581  0668  01A1               	clrf	__tdiv_to_l_@quot+1
  3582  0669  01A2               	clrf	__tdiv_to_l_@quot+2
  3583  066A  01A3               	clrf	__tdiv_to_l_@quot+3
  3584  066B  02A5               	subwf	__tdiv_to_l_@exp1,f
  3585  066C  3098               	movlw	152
  3586  066D  0724               	addwf	__tdiv_to_l_@cntr,w
  3587  066E  00F8               	movwf	??__tdiv_to_l_
  3588  066F  02A5               	subwf	__tdiv_to_l_@exp1,f
  3589  0670  3018               	movlw	24
  3590  0671  00A4               	movwf	__tdiv_to_l_@cntr
  3591  0672                     l6150:	
  3592  0672  1003               	clrc
  3593  0673  0DA0               	rlf	__tdiv_to_l_@quot,f
  3594  0674  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  3595  0675  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  3596  0676  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  3597  0677  0877               	movf	__tdiv_to_l_@f2+2,w
  3598  0678  0274               	subwf	__tdiv_to_l_@f1+2,w
  3599  0679  1D03               	skipz
  3600  067A  2E81               	goto	u2015
  3601  067B  0876               	movf	__tdiv_to_l_@f2+1,w
  3602  067C  0273               	subwf	__tdiv_to_l_@f1+1,w
  3603  067D  1D03               	skipz
  3604  067E  2E81               	goto	u2015
  3605  067F  0875               	movf	__tdiv_to_l_@f2,w
  3606  0680  0272               	subwf	__tdiv_to_l_@f1,w
  3607  0681                     u2015:	
  3608  0681  1C03               	skipc
  3609  0682  2E8F               	goto	L19
  3610  0683  0875               	movf	__tdiv_to_l_@f2,w
  3611  0684  02F2               	subwf	__tdiv_to_l_@f1,f
  3612  0685  0876               	movf	__tdiv_to_l_@f2+1,w
  3613  0686  1C03               	skipc
  3614  0687  0F76               	incfsz	__tdiv_to_l_@f2+1,w
  3615  0688  02F3               	subwf	__tdiv_to_l_@f1+1,f
  3616  0689  0877               	movf	__tdiv_to_l_@f2+2,w
  3617  068A  1C03               	skipc
  3618  068B  0A77               	incf	__tdiv_to_l_@f2+2,w
  3619  068C  02F4               	subwf	__tdiv_to_l_@f1+2,f
  3620  068D  1420               	bsf	__tdiv_to_l_@quot,0
  3621  068E  1003               	clrc
  3622  068F                     L19:	
  3623  068F  0DF2               	rlf	__tdiv_to_l_@f1,f
  3624  0690  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  3625  0691  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  3626  0692  0BA4               	decfsz	__tdiv_to_l_@cntr,f
  3627  0693  2E72               	goto	l6150
  3628  0694  1FA5               	btfss	__tdiv_to_l_@exp1,7
  3629  0695  2EA3               	goto	l6170
  3630  0696  0825               	movf	__tdiv_to_l_@exp1,w
  3631  0697  3A80               	xorlw	128
  3632  0698  3E97               	addlw	151
  3633  0699  1C03               	btfss	3,0
  3634  069A  2E50               	goto	l6134
  3635  069B                     l6166:	
  3636  069B  1003               	clrc
  3637  069C  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  3638  069D  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  3639  069E  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  3640  069F  0CA0               	rrf	__tdiv_to_l_@quot,f
  3641  06A0  0FA5               	incfsz	__tdiv_to_l_@exp1,f
  3642  06A1  2E9B               	goto	l6166
  3643  06A2  2EB1               	goto	l6176
  3644  06A3                     l6170:	
  3645  06A3  3018               	movlw	24
  3646  06A4  0225               	subwf	__tdiv_to_l_@exp1,w
  3647  06A5  1803               	btfsc	3,0
  3648  06A6  2E50               	goto	l6134
  3649  06A7                     l3527:	
  3650  06A7  08A5               	movf	__tdiv_to_l_@exp1,f
  3651  06A8  1903               	btfsc	3,2
  3652  06A9  2EB1               	goto	l6176
  3653  06AA  1003               	clrc
  3654  06AB  0DA0               	rlf	__tdiv_to_l_@quot,f
  3655  06AC  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  3656  06AD  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  3657  06AE  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  3658  06AF  03A5               	decf	__tdiv_to_l_@exp1,f
  3659  06B0  2EA7               	goto	l3527
  3660  06B1                     l6176:	
  3661  06B1  0823               	movf	__tdiv_to_l_@quot+3,w
  3662  06B2  00F5               	movwf	?__tdiv_to_l_+3
  3663  06B3  0822               	movf	__tdiv_to_l_@quot+2,w
  3664  06B4  00F4               	movwf	?__tdiv_to_l_+2
  3665  06B5  0821               	movf	__tdiv_to_l_@quot+1,w
  3666  06B6  00F3               	movwf	?__tdiv_to_l_+1
  3667  06B7  0820               	movf	__tdiv_to_l_@quot,w
  3668  06B8  00F2               	movwf	?__tdiv_to_l_
  3669  06B9  0008               	return
  3670  06BA                     __end_of__tdiv_to_l_:	
  3671  06BA                     __ptext556:	
  3672 ;; =============== function ___ftge ends ============
  3673                           
  3674                           
  3675 ;; *************** function ___ftneg *****************
  3676 ;; Defined at:
  3677 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftneg.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;  f1              3    2[COMMON] float 
  3680 ;; Auto vars:     Size  Location     Type
  3681 ;;		None
  3682 ;; Return value:  Size  Location     Type
  3683 ;;                  3    2[COMMON] float 
  3684 ;; Registers used:
  3685 ;;		wreg
  3686 ;; Tracked objects:
  3687 ;;		On entry : 160/20
  3688 ;;		On exit  : 160/20
  3689 ;;		Unchanged: FFE9F/0
  3690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3691 ;;      Params:         3       0       0       0       0
  3692 ;;      Locals:         0       0       0       0       0
  3693 ;;      Temps:          0       0       0       0       0
  3694 ;;      Totals:         3       0       0       0       0
  3695 ;;Total ram usage:        3 bytes
  3696 ;; Hardware stack levels used:    1
  3697 ;; Hardware stack levels required when called:    1
  3698 ;; This function calls:
  3699 ;;		Nothing
  3700 ;; This function is called by:
  3701 ;;		_printf
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704  06BA                     ___ftneg:	
  3705                           
  3706                           ; Regs used in ___ftneg: [wreg]
  3707  06BA  0874               	movf	___ftneg@f1+2,w
  3708  06BB  0473               	iorwf	___ftneg@f1+1,w
  3709  06BC  0472               	iorwf	___ftneg@f1,w
  3710  06BD  1903               	skipnz
  3711  06BE  0008               	return
  3712  06BF  3080               	movlw	128
  3713  06C0  06F4               	xorwf	___ftneg@f1+2,f
  3714  06C1  0008               	return
  3715  06C2                     __end_of___ftneg:	
  3716  06C2                     __ptext546:	
  3717 ;; =============== function _lcd_init ends ============
  3718                           
  3719                           
  3720 ;; *************** function ___lltoft *****************
  3721 ;; Defined at:
  3722 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lltoft.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  c               4    0[BANK0 ] unsigned long 
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;  exp             1   10[COMMON] unsigned char 
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  3    0[BANK0 ] float 
  3729 ;; Registers used:
  3730 ;;		wreg, status,2, status,0, pclath, cstack
  3731 ;; Tracked objects:
  3732 ;;		On entry : 60/0
  3733 ;;		On exit  : 60/0
  3734 ;;		Unchanged: FFF9F/0
  3735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3736 ;;      Params:         0       4       0       0       0
  3737 ;;      Locals:         1       0       0       0       0
  3738 ;;      Temps:          0       0       0       0       0
  3739 ;;      Totals:         1       4       0       0       0
  3740 ;;Total ram usage:        5 bytes
  3741 ;; Hardware stack levels used:    1
  3742 ;; Hardware stack levels required when called:    2
  3743 ;; This function calls:
  3744 ;;		___ftpack
  3745 ;; This function is called by:
  3746 ;;		_printf
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749  06C2                     ___lltoft:	
  3750                           
  3751                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  3752  06C2  308E               	movlw	142
  3753  06C3  00FA               	movwf	___lltoft@exp
  3754  06C4                     l6756:	
  3755  06C4  30FF               	movlw	255
  3756  06C5  0523               	andwf	___lltoft@c+3,w
  3757  06C6  1903               	btfsc	3,2
  3758  06C7  2ECF               	goto	l6758
  3759  06C8  1003               	clrc
  3760  06C9  0CA3               	rrf	___lltoft@c+3,f
  3761  06CA  0CA2               	rrf	___lltoft@c+2,f
  3762  06CB  0CA1               	rrf	___lltoft@c+1,f
  3763  06CC  0CA0               	rrf	___lltoft@c,f
  3764  06CD  0AFA               	incf	___lltoft@exp,f
  3765  06CE  2EC4               	goto	l6756
  3766  06CF                     l6758:	
  3767  06CF  0820               	movf	___lltoft@c,w
  3768  06D0  00F2               	movwf	?___ftpack
  3769  06D1  0821               	movf	___lltoft@c+1,w
  3770  06D2  00F3               	movwf	?___ftpack+1
  3771  06D3  0822               	movf	___lltoft@c+2,w
  3772  06D4  00F4               	movwf	?___ftpack+2
  3773  06D5  087A               	movf	___lltoft@exp,w
  3774  06D6  00F5               	movwf	?___ftpack+3
  3775  06D7  01F6               	clrf	?___ftpack+4
  3776  06D8  120A  158A  2769   	fcall	___ftpack
  3777  06DB  0872               	movf	?___ftpack,w
  3778  06DC  00A0               	movwf	?___lltoft
  3779  06DD  0873               	movf	?___ftpack+1,w
  3780  06DE  00A1               	movwf	?___lltoft+1
  3781  06DF  0874               	movf	?___ftpack+2,w
  3782  06E0  00A2               	movwf	?___lltoft+2
  3783  06E1  0008               	return
  3784  06E2                     __end_of___lltoft:	
  3785  06E2                     __ptext541:	
  3786 ;; =============== function _lcd_putc ends ============
  3787                           
  3788                           
  3789 ;; *************** function ___ftsub *****************
  3790 ;; Defined at:
  3791 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftsub.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;  f2              3   45[BANK0 ] float 
  3794 ;;  f1              3   48[BANK0 ] float 
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;		None
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  3   45[BANK0 ] float 
  3799 ;; Registers used:
  3800 ;;		wreg, status,2, status,0, pclath, cstack
  3801 ;; Tracked objects:
  3802 ;;		On entry : 60/0
  3803 ;;		On exit  : 60/0
  3804 ;;		Unchanged: FFF9F/0
  3805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3806 ;;      Params:         0       6       0       0       0
  3807 ;;      Locals:         0       0       0       0       0
  3808 ;;      Temps:          0       0       0       0       0
  3809 ;;      Totals:         0       6       0       0       0
  3810 ;;Total ram usage:        6 bytes
  3811 ;; Hardware stack levels used:    1
  3812 ;; Hardware stack levels required when called:    3
  3813 ;; This function calls:
  3814 ;;		___ftadd
  3815 ;; This function is called by:
  3816 ;;		_printf
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819  06E2                     ___ftsub:	
  3820                           
  3821                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  3822  06E2  3080               	movlw	128
  3823  06E3  06CF               	xorwf	___ftsub@f2+2,f
  3824  06E4  0850               	movf	___ftsub@f1,w
  3825  06E5  00C1               	movwf	?___ftadd
  3826  06E6  0851               	movf	___ftsub@f1+1,w
  3827  06E7  00C2               	movwf	?___ftadd+1
  3828  06E8  0852               	movf	___ftsub@f1+2,w
  3829  06E9  00C3               	movwf	?___ftadd+2
  3830  06EA  084D               	movf	___ftsub@f2,w
  3831  06EB  00C4               	movwf	?___ftadd+3
  3832  06EC  084E               	movf	___ftsub@f2+1,w
  3833  06ED  00C5               	movwf	?___ftadd+4
  3834  06EE  084F               	movf	___ftsub@f2+2,w
  3835  06EF  00C6               	movwf	?___ftadd+5
  3836  06F0  160A  118A  273E   	fcall	___ftadd
  3837  06F3  0841               	movf	?___ftadd,w
  3838  06F4  00CD               	movwf	?___ftsub
  3839  06F5  0842               	movf	?___ftadd+1,w
  3840  06F6  00CE               	movwf	?___ftsub+1
  3841  06F7  0843               	movf	?___ftadd+2,w
  3842  06F8  00CF               	movwf	?___ftsub+2
  3843  06F9  0008               	return
  3844  06FA                     __end_of___ftsub:	
  3845  06FA                     PL2:	
  3846  06FA  0838               	movf	printf@c^(0+128),w
  3847  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  3848  06FC  00DA               	movwf	??_printf
  3849  06FD  1003               	clrc
  3850  06FE  0DDA               	rlf	??_printf,f
  3851  06FF  1003               	clrc
  3852  0700  0D5A               	rlf	??_printf,w
  3853  0701  3E4F               	addlw	low (_dpowers-__stringbase)
  3854  0702  0084               	movwf	4
  3855  0703  0008               	return
  3856  0704                     PL4:	
  3857  0704  300A               	movlw	10
  3858  0705  1283               	bcf	3,5	;RP0=0, select bank0
  3859  0706  00A5               	movwf	?___llmod
  3860  0707  01A6               	clrf	?___llmod+1
  3861  0708  01A7               	clrf	?___llmod+2
  3862  0709  01A8               	clrf	?___llmod+3
  3863  070A  1683               	bsf	3,5	;RP0=1, select bank1
  3864  070B  0008               	return
  3865  070C                     PL5:	
  3866  070C  00F5               	movwf	?___lldiv+3
  3867  070D  1683               	bsf	3,5	;RP0=1, select bank1
  3868  070E  082E               	movf	(printf@_val+3)^(0+128),w
  3869  070F  00F9               	movwf	?___lldiv+7
  3870  0710  082D               	movf	(printf@_val+2)^(0+128),w
  3871  0711  00F8               	movwf	?___lldiv+6
  3872  0712  082C               	movf	(printf@_val+1)^(0+128),w
  3873  0713  00F7               	movwf	?___lldiv+5
  3874  0714  082B               	movf	printf@_val^(0+128),w
  3875  0715  00F6               	movwf	?___lldiv+4
  3876  0716  0008               	return
  3877  0717                     PL6:	
  3878  0717  0827               	movf	?___fttol+3,w
  3879  0718  1683               	bsf	3,5	;RP0=1, select bank1
  3880  0719  00AE               	movwf	(printf@_val+3)^(0+128)
  3881  071A  1283               	bcf	3,5	;RP0=0, select bank0
  3882  071B  0826               	movf	?___fttol+2,w
  3883  071C  1683               	bsf	3,5	;RP0=1, select bank1
  3884  071D  00AD               	movwf	(printf@_val+2)^(0+128)
  3885  071E  1283               	bcf	3,5	;RP0=0, select bank0
  3886  071F  0825               	movf	?___fttol+1,w
  3887  0720  1683               	bsf	3,5	;RP0=1, select bank1
  3888  0721  00AC               	movwf	(printf@_val+1)^(0+128)
  3889  0722  1283               	bcf	3,5	;RP0=0, select bank0
  3890  0723  0824               	movf	?___fttol,w
  3891  0724  0008               	return
  3892  0725                     PL7:	
  3893  0725  0841               	movf	?_scale,w
  3894  0726  1683               	bsf	3,5	;RP0=1, select bank1
  3895  0727  00A5               	movwf	printf@integ^(0+128)
  3896  0728  1283               	bcf	3,5	;RP0=0, select bank0
  3897  0729  0842               	movf	?_scale+1,w
  3898  072A  1683               	bsf	3,5	;RP0=1, select bank1
  3899  072B  00A6               	movwf	(printf@integ+1)^(0+128)
  3900  072C  1283               	bcf	3,5	;RP0=0, select bank0
  3901  072D  0843               	movf	?_scale+2,w
  3902  072E  1683               	bsf	3,5	;RP0=1, select bank1
  3903  072F  00A7               	movwf	(printf@integ+2)^(0+128)
  3904  0730  0833               	movf	printf@fval^(0+128),w
  3905  0731  0008               	return
  3906  0732                     PL12:	
  3907  0732  0875               	movf	?___lldiv+3,w
  3908  0733  00AC               	movwf	?___llmod+7
  3909  0734  0874               	movf	?___lldiv+2,w
  3910  0735  00AB               	movwf	?___llmod+6
  3911  0736  0873               	movf	?___lldiv+1,w
  3912  0737  00AA               	movwf	?___llmod+5
  3913  0738  0872               	movf	?___lldiv,w
  3914  0739  00A9               	movwf	?___llmod+4
  3915  073A  0008               	return
  3916  073B                     PL13:	
  3917  073B  0772               	addwf	?___wmul,w
  3918  073C  1283               	bcf	3,5	;RP0=0, select bank0
  3919  073D  00DA               	movwf	??_printf
  3920  073E  3000               	movlw	0
  3921  073F  1803               	skipnc
  3922  0740  3001               	movlw	1
  3923  0741  0773               	addwf	?___wmul+1,w
  3924  0742  00DB               	movwf	??_printf+1
  3925  0743  085A               	movf	??_printf,w
  3926  0744  3ED0               	addlw	208
  3927  0745  1683               	bsf	3,5	;RP0=1, select bank1
  3928  0746  0008               	return
  3929  0747                     PL14:	
  3930  0747  1283               	bcf	3,5	;RP0=0, select bank0
  3931  0748  00A4               	movwf	?___fttol
  3932  0749  1683               	bsf	3,5	;RP0=1, select bank1
  3933  074A  0834               	movf	(printf@fval+1)^(0+128),w
  3934  074B  1283               	bcf	3,5	;RP0=0, select bank0
  3935  074C  00A5               	movwf	?___fttol+1
  3936  074D  1683               	bsf	3,5	;RP0=1, select bank1
  3937  074E  0835               	movf	(printf@fval+2)^(0+128),w
  3938  074F  1283               	bcf	3,5	;RP0=0, select bank0
  3939  0750  00A6               	movwf	?___fttol+2
  3940  0751  0008               	return
  3941  0752                     PL16:	
  3942  0752  1283               	bcf	3,5	;RP0=0, select bank0
  3943  0753  00B2               	movwf	?___ftmul
  3944  0754  1683               	bsf	3,5	;RP0=1, select bank1
  3945  0755  0834               	movf	(printf@fval+1)^(0+128),w
  3946  0756  1283               	bcf	3,5	;RP0=0, select bank0
  3947  0757  00B3               	movwf	?___ftmul+1
  3948  0758  1683               	bsf	3,5	;RP0=1, select bank1
  3949  0759  0835               	movf	(printf@fval+2)^(0+128),w
  3950  075A  1283               	bcf	3,5	;RP0=0, select bank0
  3951  075B  00B4               	movwf	?___ftmul+2
  3952  075C  0008               	return
  3953  075D                     PL18:	
  3954  075D  1283               	bcf	3,5	;RP0=0, select bank0
  3955  075E  00DA               	movwf	??_printf
  3956  075F  01DB               	clrf	??_printf+1
  3957  0760  1BDA               	btfsc	??_printf,7
  3958  0761  03DB               	decf	??_printf+1,f
  3959  0762  085B               	movf	??_printf+1,w
  3960  0763  3A80               	xorlw	128
  3961  0764  00DC               	movwf	??_printf+2
  3962  0765  1683               	bsf	3,5	;RP0=1, select bank1
  3963  0766  0008               	return
  3964  0767                     PL20:	
  3965  0767  1303               	bcf	3,6	;RP1=0, select bank1
  3966  0768  0838               	movf	printf@c^(0+128),w
  3967  0769  1283               	bcf	3,5	;RP0=0, select bank0
  3968  076A  00DA               	movwf	??_printf
  3969  076B  01DB               	clrf	??_printf+1
  3970  076C  1BDA               	btfsc	??_printf,7
  3971  076D  03DB               	decf	??_printf+1,f
  3972  076E  1683               	bsf	3,5	;RP0=1, select bank1
  3973  076F  0008               	return
  3974  0770                     PL21:	
  3975  0770  0825               	movf	printf@integ^(0+128),w
  3976  0771  00F2               	movwf	?___ftge
  3977  0772  0826               	movf	(printf@integ+1)^(0+128),w
  3978  0773  00F3               	movwf	?___ftge+1
  3979  0774  0827               	movf	(printf@integ+2)^(0+128),w
  3980  0775  00F4               	movwf	?___ftge+2
  3981  0776  0008               	return
  3982  0777                     PL28:	
  3983  0777  0800               	movf	0,w
  3984  0778  1283               	bcf	3,5	;RP0=0, select bank0
  3985  0779  00DA               	movwf	??_printf
  3986  077A  0A84               	incf	4,f
  3987  077B  0800               	movf	0,w
  3988  077C  00DB               	movwf	??_printf+1
  3989  077D  0008               	return
  3990  077E                     PL30:	
  3991  077E  1283               	bcf	3,5	;RP0=0, select bank0
  3992  077F  085B               	movf	??_printf+1,w
  3993  0780  1803               	skipnc
  3994  0781  3E01               	addlw	1
  3995  0782  3EFF               	addlw	255
  3996  0783  1683               	bsf	3,5	;RP0=1, select bank1
  3997  0784  0008               	return
  3998  0785                     PL31:	
  3999  0785  0824               	movf	___fttol@f1,w
  4000  0786  00A8               	movwf	??___fttol
  4001  0787  0825               	movf	___fttol@f1+1,w
  4002  0788  00A9               	movwf	??___fttol+1
  4003  0789  0826               	movf	___fttol@f1+2,w
  4004  078A  00AA               	movwf	??___fttol+2
  4005  078B  0008               	return
  4006  078C                     PL32:	
  4007  078C  1683               	bsf	3,5	;RP0=1, select bank1
  4008  078D  1303               	bcf	3,6	;RP1=0, select bank1
  4009  078E  0008               	return
  4010                           
  4011                           	psect	text543
  4012  093C                     __ptext543:	
  4013 ;; =============== function _scale ends ============
  4014                           
  4015                           
  4016 ;; *************** function _fround *****************
  4017 ;; Defined at:
  4018 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;  prec            1    wreg     unsigned char 
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;  prec            1   54[BANK0 ] unsigned char 
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  3   45[BANK0 ] unsigned char 
  4025 ;; Registers used:
  4026 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4027 ;; Tracked objects:
  4028 ;;		On entry : 60/20
  4029 ;;		On exit  : 60/0
  4030 ;;		Unchanged: FFF9F/0
  4031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4032 ;;      Params:         0       3       0       0       0
  4033 ;;      Locals:         0       7       0       0       0
  4034 ;;      Temps:          0       0       0       0       0
  4035 ;;      Totals:         0      10       0       0       0
  4036 ;;Total ram usage:       10 bytes
  4037 ;; Hardware stack levels used:    1
  4038 ;; Hardware stack levels required when called:    3
  4039 ;; This function calls:
  4040 ;;		___lbmod
  4041 ;;		___bmul
  4042 ;;		___lbdiv
  4043 ;;		___ftmul
  4044 ;; This function is called by:
  4045 ;;		_printf
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048  093C                     _fround:	
  4049                           
  4050                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4051                           ;fround@prec stored from wreg
  4052  093C  1283               	bcf	3,5	;RP0=0, select bank0
  4053  093D  00D6               	movwf	fround@prec
  4054  093E  306E               	movlw	110
  4055  093F  0256               	subwf	fround@prec,w
  4056  0940  1C03               	skipc
  4057  0941  29C7               	goto	l6822
  4058  0942  3003               	movlw	3
  4059  0943  00FB               	movwf	?___bmul
  4060  0944  300A               	movlw	10
  4061  0945  00F7               	movwf	?___lbdiv
  4062  0946  3064               	movlw	100
  4063  0947  00F2               	movwf	?___lbmod
  4064  0948  0856               	movf	fround@prec,w
  4065  0949  225C  120A  158A   	fcall	___lbmod
  4066  094C  2241               	fcall	___lbdiv
  4067  094D  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4068  0952  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4069  0953  0084               	movwf	4
  4070  0954  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4071  0959  00B2               	movwf	?___ftmul
  4072  095A  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4073  095F  00B3               	movwf	?___ftmul+1
  4074  0960  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4075  0965  00B4               	movwf	?___ftmul+2
  4076  0966  3003               	movlw	3
  4077  0967  00FB               	movwf	?___bmul
  4078  0968  3064               	movlw	100
  4079  0969  00F7               	movwf	?___lbdiv
  4080  096A  0856               	movf	fround@prec,w
  4081  096B  2241               	fcall	___lbdiv
  4082  096C  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4083  0971  3E37               	addlw	low ((__npowers_-__stringbase+54))
  4084  0972  0084               	movwf	4
  4085  0973  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4086  0978  00B5               	movwf	?___ftmul+3
  4087  0979  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4088  097E  00B6               	movwf	?___ftmul+4
  4089  097F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4090  0984  00B7               	movwf	?___ftmul+5
  4091  0985  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4092  098A  2287  120A  158A   	fcall	PL29	;call to abstracted procedure
  4093  098D  3003               	movlw	3
  4094  098E  00FB               	movwf	?___bmul
  4095  098F  300A               	movlw	10
  4096  0990  00F2               	movwf	?___lbmod
  4097  0991  0856               	movf	fround@prec,w
  4098  0992  225C               	fcall	___lbmod
  4099  0993  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4100  0998  3E01               	addlw	low (__npowers_-__stringbase)
  4101  0999  0084               	movwf	4
  4102  099A  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4103  099F  00B2               	movwf	?___ftmul
  4104  09A0  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4105  09A5  00B3               	movwf	?___ftmul+1
  4106  09A6  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4107  09AB  227F               	fcall	PL22	;call to abstracted procedure
  4108  09AC  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4109  09B1  0832               	movf	?___ftmul,w
  4110  09B2  00D0               	movwf	_fround$4107
  4111  09B3  0833               	movf	?___ftmul+1,w
  4112  09B4  00D1               	movwf	_fround$4107+1
  4113  09B5  0834               	movf	?___ftmul+2,w
  4114  09B6  00D2               	movwf	_fround$4107+2
  4115  09B7  303F               	movlw	63
  4116  09B8  01B2               	clrf	?___ftmul
  4117  09B9  01B3               	clrf	?___ftmul+1
  4118  09BA  00B4               	movwf	?___ftmul+2
  4119  09BB  0850               	movf	_fround$4107,w
  4120  09BC  00B5               	movwf	?___ftmul+3
  4121  09BD  0851               	movf	_fround$4107+1,w
  4122  09BE  00B6               	movwf	?___ftmul+4
  4123  09BF  0852               	movf	_fround$4107+2,w
  4124  09C0  00B7               	movwf	?___ftmul+5
  4125  09C1  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4126  09C6  2A78               	ljmp	PL17	;call to abstracted procedure
  4127  09C7                     l6822:	
  4128  09C7  300B               	movlw	11
  4129  09C8  0256               	subwf	fround@prec,w
  4130  09C9  1C03               	skipc
  4131  09CA  2A1B               	goto	l6830
  4132  09CB  3003               	movlw	3
  4133  09CC  00FB               	movwf	?___bmul
  4134  09CD  300A               	movlw	10
  4135  09CE  00F2               	movwf	?___lbmod
  4136  09CF  0856               	movf	fround@prec,w
  4137  09D0  225C               	fcall	___lbmod
  4138  09D1  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4139  09D6  3E01               	addlw	low (__npowers_-__stringbase)
  4140  09D7  0084               	movwf	4
  4141  09D8  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4142  09DD  00B2               	movwf	?___ftmul
  4143  09DE  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4144  09E3  00B3               	movwf	?___ftmul+1
  4145  09E4  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4146  09E9  00B4               	movwf	?___ftmul+2
  4147  09EA  3003               	movlw	3
  4148  09EB  00FB               	movwf	?___bmul
  4149  09EC  300A               	movlw	10
  4150  09ED  00F7               	movwf	?___lbdiv
  4151  09EE  0856               	movf	fround@prec,w
  4152  09EF  2241               	fcall	___lbdiv
  4153  09F0  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4154  09F5  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4155  09F6  0084               	movwf	4
  4156  09F7  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4157  09FC  00B5               	movwf	?___ftmul+3
  4158  09FD  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4159  0A02  00B6               	movwf	?___ftmul+4
  4160  0A03  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4161  0A08  00B7               	movwf	?___ftmul+5
  4162  0A09  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4163  0A0E  2287  120A  158A   	fcall	PL29	;call to abstracted procedure
  4164  0A11  303F               	movlw	63
  4165  0A12  01B2               	clrf	?___ftmul
  4166  0A13  01B3               	clrf	?___ftmul+1
  4167  0A14  227F               	fcall	PL22	;call to abstracted procedure
  4168  0A15  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4169  0A1A  2A78               	ljmp	PL17	;call to abstracted procedure
  4170  0A1B                     l6830:	
  4171  0A1B  303F               	movlw	63
  4172  0A1C  01B2               	clrf	?___ftmul
  4173  0A1D  01B3               	clrf	?___ftmul+1
  4174  0A1E  00B4               	movwf	?___ftmul+2
  4175  0A1F  3003               	movlw	3
  4176  0A20  00FB               	movwf	?___bmul
  4177  0A21  0856               	movf	fround@prec,w
  4178  0A22  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4179  0A27  3E01               	addlw	low (__npowers_-__stringbase)
  4180  0A28  0084               	movwf	4
  4181  0A29  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4182  0A2E  00B5               	movwf	?___ftmul+3
  4183  0A2F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4184  0A34  00B6               	movwf	?___ftmul+4
  4185  0A35  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4186  0A3A  00B7               	movwf	?___ftmul+5
  4187  0A3B  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4188  0A40  2A78               	ljmp	PL17	;call to abstracted procedure
  4189  0A41                     __end_of_fround:	
  4190  0A41                     __ptext562:	
  4191 ;; =============== function ___lbmod ends ============
  4192                           
  4193                           
  4194 ;; *************** function ___lbdiv *****************
  4195 ;; Defined at:
  4196 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbdiv.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;  dividend        1    wreg     unsigned char 
  4199 ;;  divisor         1    7[COMMON] unsigned char 
  4200 ;; Auto vars:     Size  Location     Type
  4201 ;;  dividend        1    8[COMMON] unsigned char 
  4202 ;;  quotient        1   10[COMMON] unsigned char 
  4203 ;;  counter         1    9[COMMON] unsigned char 
  4204 ;; Return value:  Size  Location     Type
  4205 ;;                  1    wreg      unsigned char 
  4206 ;; Registers used:
  4207 ;;		wreg, status,2, status,0
  4208 ;; Tracked objects:
  4209 ;;		On entry : 60/0
  4210 ;;		On exit  : 60/0
  4211 ;;		Unchanged: FFF9F/0
  4212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4213 ;;      Params:         1       0       0       0       0
  4214 ;;      Locals:         3       0       0       0       0
  4215 ;;      Temps:          0       0       0       0       0
  4216 ;;      Totals:         4       0       0       0       0
  4217 ;;Total ram usage:        4 bytes
  4218 ;; Hardware stack levels used:    1
  4219 ;; Hardware stack levels required when called:    1
  4220 ;; This function calls:
  4221 ;;		Nothing
  4222 ;; This function is called by:
  4223 ;;		_fround
  4224 ;; This function uses a non-reentrant model
  4225 ;;
  4226  0A41                     ___lbdiv:	
  4227                           
  4228                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  4229                           ;___lbdiv@dividend stored from wreg
  4230  0A41  00F8               	movwf	___lbdiv@dividend
  4231  0A42  01FA               	clrf	___lbdiv@quotient
  4232  0A43  0877               	movf	___lbdiv@divisor,w
  4233  0A44  1903               	btfsc	3,2
  4234  0A45  2A5A               	goto	l6278
  4235  0A46  01F9               	clrf	___lbdiv@counter
  4236  0A47                     l6264:	
  4237  0A47  0AF9               	incf	___lbdiv@counter,f
  4238  0A48  1BF7               	btfsc	___lbdiv@divisor,7
  4239  0A49  2A4D               	goto	l3302
  4240  0A4A  1003               	clrc
  4241  0A4B  0DF7               	rlf	___lbdiv@divisor,f
  4242  0A4C  2A47               	goto	l6264
  4243  0A4D                     l3302:	
  4244  0A4D  1003               	clrc
  4245  0A4E  0DFA               	rlf	___lbdiv@quotient,f
  4246  0A4F  0877               	movf	___lbdiv@divisor,w
  4247  0A50  0278               	subwf	___lbdiv@dividend,w
  4248  0A51  1C03               	skipc
  4249  0A52  2A57               	goto	L18
  4250  0A53  0877               	movf	___lbdiv@divisor,w
  4251  0A54  02F8               	subwf	___lbdiv@dividend,f
  4252  0A55  147A               	bsf	___lbdiv@quotient,0
  4253  0A56  1003               	clrc
  4254  0A57                     L18:	
  4255  0A57  0CF7               	rrf	___lbdiv@divisor,f
  4256  0A58  0BF9               	decfsz	___lbdiv@counter,f
  4257  0A59  2A4D               	goto	l3302
  4258  0A5A                     l6278:	
  4259  0A5A  087A               	movf	___lbdiv@quotient,w
  4260  0A5B  0008               	return
  4261  0A5C                     __end_of___lbdiv:	
  4262  0A5C                     __ptext561:	
  4263 ;; =============== function ___ftpack ends ============
  4264                           
  4265                           
  4266 ;; *************** function ___lbmod *****************
  4267 ;; Defined at:
  4268 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbmod.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;  dividend        1    wreg     unsigned char 
  4271 ;;  divisor         1    2[COMMON] unsigned char 
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;  dividend        1    4[COMMON] unsigned char 
  4274 ;;  rem             1    6[COMMON] unsigned char 
  4275 ;;  counter         1    5[COMMON] unsigned char 
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  1    wreg      unsigned char 
  4278 ;; Registers used:
  4279 ;;		wreg, status,2, status,0
  4280 ;; Tracked objects:
  4281 ;;		On entry : 60/0
  4282 ;;		On exit  : 60/0
  4283 ;;		Unchanged: FFF9F/0
  4284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4285 ;;      Params:         1       0       0       0       0
  4286 ;;      Locals:         3       0       0       0       0
  4287 ;;      Temps:          1       0       0       0       0
  4288 ;;      Totals:         5       0       0       0       0
  4289 ;;Total ram usage:        5 bytes
  4290 ;; Hardware stack levels used:    1
  4291 ;; Hardware stack levels required when called:    1
  4292 ;; This function calls:
  4293 ;;		Nothing
  4294 ;; This function is called by:
  4295 ;;		_fround
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298  0A5C                     ___lbmod:	
  4299                           
  4300                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  4301                           ;___lbmod@dividend stored from wreg
  4302  0A5C  00F4               	movwf	___lbmod@dividend
  4303  0A5D  3008               	movlw	8
  4304  0A5E  00F5               	movwf	___lbmod@counter
  4305  0A5F  01F6               	clrf	___lbmod@rem
  4306  0A60                     l6286:	
  4307  0A60  0874               	movf	___lbmod@dividend,w
  4308  0A61  00F3               	movwf	??___lbmod
  4309  0A62  3007               	movlw	7
  4310  0A63  1003               	clrc
  4311  0A64                     L17:	
  4312  0A64  0CF3               	rrf	??___lbmod,f
  4313  0A65  3EFF               	addlw	-1
  4314  0A66  1003               	clrc
  4315  0A67  1D03               	skipz
  4316  0A68  2A64               	goto	L17
  4317  0A69  0D76               	rlf	___lbmod@rem,w
  4318  0A6A  0473               	iorwf	??___lbmod,w
  4319  0A6B  00F6               	movwf	___lbmod@rem
  4320  0A6C  1003               	clrc
  4321  0A6D  0DF4               	rlf	___lbmod@dividend,f
  4322  0A6E  0872               	movf	___lbmod@divisor,w
  4323  0A6F  0276               	subwf	___lbmod@rem,w
  4324  0A70  1C03               	skipc
  4325  0A71  2A74               	goto	l6294
  4326  0A72  0872               	movf	___lbmod@divisor,w
  4327  0A73  02F6               	subwf	___lbmod@rem,f
  4328  0A74                     l6294:	
  4329  0A74  0BF5               	decfsz	___lbmod@counter,f
  4330  0A75  2A60               	goto	l6286
  4331  0A76  0876               	movf	___lbmod@rem,w
  4332  0A77  0008               	return
  4333  0A78                     __end_of___lbmod:	
  4334  0A78                     PL17:	
  4335  0A78  0832               	movf	?___ftmul,w
  4336  0A79  00CD               	movwf	?_fround
  4337  0A7A  0833               	movf	?___ftmul+1,w
  4338  0A7B  00CE               	movwf	?_fround+1
  4339  0A7C  0834               	movf	?___ftmul+2,w
  4340  0A7D  00CF               	movwf	?_fround+2
  4341  0A7E  0008               	return
  4342  0A7F                     PL22:	
  4343  0A7F  00B4               	movwf	?___ftmul+2
  4344  0A80  0853               	movf	_fround$4106,w
  4345  0A81  00B5               	movwf	?___ftmul+3
  4346  0A82  0854               	movf	_fround$4106+1,w
  4347  0A83  00B6               	movwf	?___ftmul+4
  4348  0A84  0855               	movf	_fround$4106+2,w
  4349  0A85  00B7               	movwf	?___ftmul+5
  4350  0A86  0008               	return
  4351  0A87                     PL29:	
  4352  0A87  0832               	movf	?___ftmul,w
  4353  0A88  00D3               	movwf	_fround$4106
  4354  0A89  0833               	movf	?___ftmul+1,w
  4355  0A8A  00D4               	movwf	_fround$4106+1
  4356  0A8B  0834               	movf	?___ftmul+2,w
  4357  0A8C  00D5               	movwf	_fround$4106+2
  4358  0A8D  0008               	return
  4359                           
  4360                           	psect	text544
  4361  0A8E                     __ptext544:	
  4362 ;; =============== function _fround ends ============
  4363                           
  4364                           
  4365 ;; *************** function _lcd_gotoxy *****************
  4366 ;; Defined at:
  4367 ;;		line 162 in file "C:\Online Class\HK6\Practice_Micro\hc-sr04\lcd(16).c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;  col             1    wreg     unsigned char 
  4370 ;;  row             1    7[COMMON] unsigned char 
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;  col             1    8[COMMON] unsigned char 
  4373 ;;  address         1    9[COMMON] unsigned char 
  4374 ;; Return value:  Size  Location     Type
  4375 ;;		None               void
  4376 ;; Registers used:
  4377 ;;		wreg, status,2, status,0, pclath, cstack
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 60/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4383 ;;      Params:         1       0       0       0       0
  4384 ;;      Locals:         2       0       0       0       0
  4385 ;;      Temps:          0       0       0       0       0
  4386 ;;      Totals:         3       0       0       0       0
  4387 ;;Total ram usage:        3 bytes
  4388 ;; Hardware stack levels used:    1
  4389 ;; Hardware stack levels required when called:    2
  4390 ;; This function calls:
  4391 ;;		_lcd_put_byte
  4392 ;;		_lcd_busy
  4393 ;; This function is called by:
  4394 ;;		_main
  4395 ;;		_lcd_putc
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398  0A8E                     _lcd_gotoxy:	
  4399                           
  4400                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  4401                           ;lcd_gotoxy@col stored from wreg
  4402  0A8E  00F8               	movwf	lcd_gotoxy@col
  4403                           
  4404                           ;lcd(16).c: 163: unsigned char address;
  4405                           ;lcd(16).c: 165: if(row!=0)
  4406  0A8F  0877               	movf	lcd_gotoxy@row,w
  4407  0A90  1903               	btfsc	3,2
  4408  0A91  2A95               	goto	l6804
  4409                           
  4410                           ;lcd(16).c: 166: address=0x40;
  4411  0A92  3040               	movlw	64
  4412  0A93  00F9               	movwf	lcd_gotoxy@address
  4413  0A94  2A96               	goto	l6806
  4414  0A95                     l6804:	
  4415                           
  4416                           ;lcd(16).c: 167: else
  4417                           ;lcd(16).c: 168: address=0;
  4418  0A95  01F9               	clrf	lcd_gotoxy@address
  4419  0A96                     l6806:	
  4420                           
  4421                           ;lcd(16).c: 170: address += col;
  4422  0A96  0878               	movf	lcd_gotoxy@col,w
  4423  0A97  07F9               	addwf	lcd_gotoxy@address,f
  4424                           
  4425                           ;lcd(16).c: 171: lcd_put_byte(0,0x80|address);
  4426  0A98  0879               	movf	lcd_gotoxy@address,w
  4427  0A99  3880               	iorlw	128
  4428  0A9A  00F2               	movwf	?_lcd_put_byte
  4429  0A9B  3000               	movlw	0
  4430  0A9C  2390  120A  158A   	fcall	_lcd_put_byte
  4431  0A9F                     l6810:	
  4432                           ;lcd(16).c: 172: while(lcd_busy());
  4433                           
  4434  0A9F  2420  120A  158A   	fcall	_lcd_busy
  4435  0AA2  3800               	iorlw	0
  4436  0AA3  1903               	btfsc	3,2
  4437  0AA4  0008               	return
  4438  0AA5  2A9F               	goto	l6810
  4439  0AA6                     __end_of_lcd_gotoxy:	
  4440  0AA6                     __ptext540:	
  4441 ;; =============== function _putch ends ============
  4442                           
  4443                           
  4444 ;; *************** function _lcd_putc *****************
  4445 ;; Defined at:
  4446 ;;		line 143 in file "C:\Online Class\HK6\Practice_Micro\hc-sr04\lcd(16).c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;  c               1    wreg     unsigned char 
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;  c               1   10[COMMON] unsigned char 
  4451 ;; Return value:  Size  Location     Type
  4452 ;;		None               void
  4453 ;; Registers used:
  4454 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/20
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4460 ;;      Params:         0       0       0       0       0
  4461 ;;      Locals:         1       0       0       0       0
  4462 ;;      Temps:          0       0       0       0       0
  4463 ;;      Totals:         1       0       0       0       0
  4464 ;;Total ram usage:        1 bytes
  4465 ;; Hardware stack levels used:    1
  4466 ;; Hardware stack levels required when called:    3
  4467 ;; This function calls:
  4468 ;;		_lcd_put_byte
  4469 ;;		_lcd_busy
  4470 ;;		_lcd_gotoxy
  4471 ;;		_isprint
  4472 ;; This function is called by:
  4473 ;;		_putch
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476  0AA6                     _lcd_putc:	
  4477                           
  4478                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4479                           ;lcd_putc@c stored from wreg
  4480  0AA6  00FA               	movwf	lcd_putc@c
  4481                           
  4482                           ;lcd(16).c: 144: switch(c){
  4483  0AA7  2ACC               	goto	l6896
  4484  0AA8                     l6882:	
  4485  0AA8  3000               	movlw	0
  4486                           
  4487                           ;lcd(16).c: 146: lcd_put_byte(0, 1);
  4488  0AA9  01F2               	clrf	?_lcd_put_byte
  4489  0AAA  0AF2               	incf	?_lcd_put_byte,f
  4490  0AAB  2390  120A  158A   	fcall	_lcd_put_byte
  4491  0AAE                     l6884:	
  4492                           ;lcd(16).c: 147: while(lcd_busy());
  4493                           
  4494  0AAE  2420  120A  158A   	fcall	_lcd_busy
  4495  0AB1  3800               	iorlw	0
  4496  0AB2  1903               	btfsc	3,2
  4497  0AB3  0008               	return
  4498  0AB4  2AAE               	goto	l6884
  4499  0AB5                     l6886:	
  4500  0AB5  3000               	movlw	0
  4501                           
  4502                           ;lcd(16).c: 150: lcd_gotoxy(0, 1);
  4503  0AB6  01F7               	clrf	?_lcd_gotoxy
  4504  0AB7  0AF7               	incf	?_lcd_gotoxy,f
  4505  0AB8  2A8E               	ljmp	_lcd_gotoxy
  4506  0AB9                     l6888:	
  4507                           ;lcd(16).c: 151: break;
  4508                           
  4509                           
  4510                           ;lcd(16).c: 153: if(isprint(c)){
  4511  0AB9  087A               	movf	lcd_putc@c,w
  4512  0ABA  2447  120A  158A   	fcall	_isprint
  4513  0ABD  1C03               	btfss	3,0
  4514  0ABE  0008               	return
  4515                           
  4516                           ;lcd(16).c: 154: lcd_put_byte(1, c);
  4517  0ABF  087A               	movf	lcd_putc@c,w
  4518  0AC0  00F2               	movwf	?_lcd_put_byte
  4519  0AC1  3001               	movlw	1
  4520  0AC2  2390  120A  158A   	fcall	_lcd_put_byte
  4521  0AC5                     l6892:	
  4522                           ;lcd(16).c: 155: while(lcd_busy());
  4523                           
  4524  0AC5  2420  120A  158A   	fcall	_lcd_busy
  4525  0AC8  3800               	iorlw	0
  4526  0AC9  1903               	btfsc	3,2
  4527  0ACA  0008               	return
  4528  0ACB  2AC5               	goto	l6892
  4529  0ACC                     l6896:	
  4530  0ACC  087A               	movf	lcd_putc@c,w
  4531                           
  4532                           ; Switch size 1, requested type "space"
  4533                           ; Number of cases is 2, Range of values is 10 to 12
  4534                           ; switch strategies available:
  4535                           ; Name         Instructions Cycles
  4536                           ; simple_byte            7     4 (average)
  4537                           ; direct_byte           20    11 (fixed)
  4538                           ; jumptable            263     9 (fixed)
  4539                           ;	Chosen strategy is simple_byte
  4540  0ACD  3A0A               	xorlw	10	; case 10
  4541  0ACE  1903               	skipnz
  4542  0ACF  2AB5               	goto	l6886
  4543  0AD0  3A06               	xorlw	6	; case 12
  4544  0AD1  1903               	skipnz
  4545  0AD2  2AA8               	goto	l6882
  4546  0AD3  2AB9               	goto	l6888
  4547  0AD4  0008               	return
  4548  0AD5                     __end_of_lcd_putc:	
  4549  0AD5                     __ptext545:	
  4550 ;; =============== function _lcd_gotoxy ends ============
  4551                           
  4552                           
  4553 ;; *************** function _lcd_init *****************
  4554 ;; Defined at:
  4555 ;;		line 5 in file "C:\Online Class\HK6\Practice_Micro\hc-sr04\lcd(16).c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;		None
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;  i               1    0        unsigned char 
  4560 ;; Return value:  Size  Location     Type
  4561 ;;		None               void
  4562 ;; Registers used:
  4563 ;;		wreg, status,2, status,0, pclath, cstack
  4564 ;; Tracked objects:
  4565 ;;		On entry : 17F/0
  4566 ;;		On exit  : 60/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4569 ;;      Params:         0       0       0       0       0
  4570 ;;      Locals:         0       0       0       0       0
  4571 ;;      Temps:          3       0       0       0       0
  4572 ;;      Totals:         3       0       0       0       0
  4573 ;;Total ram usage:        3 bytes
  4574 ;; Hardware stack levels used:    1
  4575 ;; Hardware stack levels required when called:    2
  4576 ;; This function calls:
  4577 ;;		_lcd_put_byte
  4578 ;;		_lcd_busy
  4579 ;; This function is called by:
  4580 ;;		_main
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583  0AD5                     _lcd_init:	
  4584                           
  4585                           ;lcd(16).c: 6: unsigned char i;
  4586                           ;lcd(16).c: 7: TRISD3 = 0;
  4587                           
  4588                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4589  0AD5  1683               	bsf	3,5	;RP0=1, select bank1
  4590  0AD6  1188               	bcf	8,3
  4591                           
  4592                           ;lcd(16).c: 8: TRISD1 = 0;
  4593  0AD7  1088               	bcf	8,1
  4594                           
  4595                           ;lcd(16).c: 9: TRISD2 = 0;
  4596  0AD8  1108               	bcf	8,2
  4597                           
  4598                           ;lcd(16).c: 10: TRISD4 = 0;
  4599  0AD9  1208               	bcf	8,4
  4600                           
  4601                           ;lcd(16).c: 11: TRISD5 = 0;
  4602  0ADA  1288               	bcf	8,5
  4603                           
  4604                           ;lcd(16).c: 12: TRISD6 = 0;
  4605  0ADB  1308               	bcf	8,6
  4606                           
  4607                           ;lcd(16).c: 13: TRISD7 = 0;
  4608  0ADC  1388               	bcf	8,7
  4609                           
  4610                           ;lcd(16).c: 14: RD3 = 0;
  4611  0ADD  1283               	bcf	3,5	;RP0=0, select bank0
  4612  0ADE  3003               	movlw	3
  4613  0ADF  1188               	bcf	8,3
  4614                           
  4615                           ;lcd(16).c: 15: RD1 = 0;
  4616  0AE0  1088               	bcf	8,1
  4617                           
  4618                           ;lcd(16).c: 16: RD2 = 0;
  4619  0AE1  1108               	bcf	8,2
  4620                           
  4621                           ;lcd(16).c: 18: _delay((unsigned long)((100)*(20000000/4000.0)));
  4622  0AE2  00F9               	movwf	??_lcd_init+2
  4623  0AE3  308A               	movlw	138
  4624  0AE4  00F8               	movwf	??_lcd_init+1
  4625  0AE5  3056               	movlw	86
  4626  0AE6  00F7               	movwf	??_lcd_init
  4627  0AE7                     u3877:	
  4628  0AE7  0BF7               	decfsz	??_lcd_init,f
  4629  0AE8  2AE7               	goto	u3877
  4630  0AE9  0BF8               	decfsz	??_lcd_init+1,f
  4631  0AEA  2AE7               	goto	u3877
  4632  0AEB  0BF9               	decfsz	??_lcd_init+2,f
  4633  0AEC  2AE7               	goto	u3877
  4634  0AED  2AEE               	nop2
  4635                           
  4636                           ;lcd(16).c: 21: lcd_put_byte(0,0x30);
  4637  0AEE  3030               	movlw	48
  4638  0AEF  00F2               	movwf	?_lcd_put_byte
  4639  0AF0  3000               	movlw	0
  4640  0AF1  2390  120A  158A   	fcall	_lcd_put_byte
  4641                           
  4642                           ;lcd(16).c: 22: _delay((unsigned long)((50)*(20000000/4000.0)));
  4643  0AF4  3002               	movlw	2
  4644  0AF5  00F9               	movwf	??_lcd_init+2
  4645  0AF6  3045               	movlw	69
  4646  0AF7  00F8               	movwf	??_lcd_init+1
  4647  0AF8  30A9               	movlw	169
  4648  0AF9  00F7               	movwf	??_lcd_init
  4649  0AFA                     u3887:	
  4650  0AFA  0BF7               	decfsz	??_lcd_init,f
  4651  0AFB  2AFA               	goto	u3887
  4652  0AFC  0BF8               	decfsz	??_lcd_init+1,f
  4653  0AFD  2AFA               	goto	u3887
  4654  0AFE  0BF9               	decfsz	??_lcd_init+2,f
  4655  0AFF  2AFA               	goto	u3887
  4656  0B00  2B01               	nop2
  4657                           
  4658                           ;lcd(16).c: 23: lcd_put_byte(0,0x30);
  4659  0B01  3030               	movlw	48
  4660  0B02  00F2               	movwf	?_lcd_put_byte
  4661  0B03  3000               	movlw	0
  4662  0B04  2390  120A  158A   	fcall	_lcd_put_byte
  4663                           
  4664                           ;lcd(16).c: 24: _delay((unsigned long)((50)*(20000000/4000.0)));
  4665  0B07  3002               	movlw	2
  4666  0B08  00F9               	movwf	??_lcd_init+2
  4667  0B09  3045               	movlw	69
  4668  0B0A  00F8               	movwf	??_lcd_init+1
  4669  0B0B  30A9               	movlw	169
  4670  0B0C  00F7               	movwf	??_lcd_init
  4671  0B0D                     u3897:	
  4672  0B0D  0BF7               	decfsz	??_lcd_init,f
  4673  0B0E  2B0D               	goto	u3897
  4674  0B0F  0BF8               	decfsz	??_lcd_init+1,f
  4675  0B10  2B0D               	goto	u3897
  4676  0B11  0BF9               	decfsz	??_lcd_init+2,f
  4677  0B12  2B0D               	goto	u3897
  4678  0B13  2B14               	nop2
  4679                           
  4680                           ;lcd(16).c: 25: lcd_put_byte(0,0x32);
  4681  0B14  3032               	movlw	50
  4682  0B15  00F2               	movwf	?_lcd_put_byte
  4683  0B16  3000               	movlw	0
  4684  0B17  2390  120A  158A   	fcall	_lcd_put_byte
  4685                           
  4686                           ;lcd(16).c: 26: _delay((unsigned long)((100)*(20000000/4000.0)));
  4687  0B1A  3003               	movlw	3
  4688  0B1B  00F9               	movwf	??_lcd_init+2
  4689  0B1C  308A               	movlw	138
  4690  0B1D  00F8               	movwf	??_lcd_init+1
  4691  0B1E  3056               	movlw	86
  4692  0B1F  00F7               	movwf	??_lcd_init
  4693  0B20                     u3907:	
  4694  0B20  0BF7               	decfsz	??_lcd_init,f
  4695  0B21  2B20               	goto	u3907
  4696  0B22  0BF8               	decfsz	??_lcd_init+1,f
  4697  0B23  2B20               	goto	u3907
  4698  0B24  0BF9               	decfsz	??_lcd_init+2,f
  4699  0B25  2B20               	goto	u3907
  4700  0B26  2B27               	nop2
  4701                           
  4702                           ;lcd(16).c: 27: _delay((unsigned long)((100)*(20000000/4000.0)));
  4703  0B27  3003               	movlw	3
  4704  0B28  00F9               	movwf	??_lcd_init+2
  4705  0B29  308A               	movlw	138
  4706  0B2A  00F8               	movwf	??_lcd_init+1
  4707  0B2B  3056               	movlw	86
  4708  0B2C  00F7               	movwf	??_lcd_init
  4709  0B2D                     u3917:	
  4710  0B2D  0BF7               	decfsz	??_lcd_init,f
  4711  0B2E  2B2D               	goto	u3917
  4712  0B2F  0BF8               	decfsz	??_lcd_init+1,f
  4713  0B30  2B2D               	goto	u3917
  4714  0B31  0BF9               	decfsz	??_lcd_init+2,f
  4715  0B32  2B2D               	goto	u3917
  4716  0B33  2B34               	nop2
  4717                           
  4718                           ;lcd(16).c: 28: _delay((unsigned long)((100)*(20000000/4000.0)));
  4719  0B34  3003               	movlw	3
  4720  0B35  00F9               	movwf	??_lcd_init+2
  4721  0B36  308A               	movlw	138
  4722  0B37  00F8               	movwf	??_lcd_init+1
  4723  0B38  3056               	movlw	86
  4724  0B39  00F7               	movwf	??_lcd_init
  4725  0B3A                     u3927:	
  4726  0B3A  0BF7               	decfsz	??_lcd_init,f
  4727  0B3B  2B3A               	goto	u3927
  4728  0B3C  0BF8               	decfsz	??_lcd_init+1,f
  4729  0B3D  2B3A               	goto	u3927
  4730  0B3E  0BF9               	decfsz	??_lcd_init+2,f
  4731  0B3F  2B3A               	goto	u3927
  4732  0B40  2B41               	nop2
  4733  0B41                     l6774:	
  4734                           ;lcd(16).c: 30: while(lcd_busy());
  4735                           
  4736  0B41  2420  120A  158A   	fcall	_lcd_busy
  4737  0B44  3800               	iorlw	0
  4738  0B45  1D03               	skipz
  4739  0B46  2B41               	goto	l6774
  4740                           
  4741                           ;lcd(16).c: 31: lcd_put_byte(0,0b00101100 & 0b00111000);
  4742  0B47  3028               	movlw	40
  4743  0B48  00F2               	movwf	?_lcd_put_byte
  4744  0B49  3000               	movlw	0
  4745  0B4A  2390  120A  158A   	fcall	_lcd_put_byte
  4746  0B4D                     l6778:	
  4747                           ;lcd(16).c: 32: while(lcd_busy());
  4748                           
  4749  0B4D  2420  120A  158A   	fcall	_lcd_busy
  4750  0B50  3800               	iorlw	0
  4751  0B51  1D03               	skipz
  4752  0B52  2B4D               	goto	l6778
  4753                           
  4754                           ;lcd(16).c: 34: lcd_put_byte(0,0b00001011&0b00001101&0b00001110);
  4755  0B53  3008               	movlw	8
  4756  0B54  00F2               	movwf	?_lcd_put_byte
  4757  0B55  3000               	movlw	0
  4758  0B56  2390  120A  158A   	fcall	_lcd_put_byte
  4759  0B59                     l6782:	
  4760                           ;lcd(16).c: 35: while(lcd_busy());
  4761                           
  4762  0B59  2420  120A  158A   	fcall	_lcd_busy
  4763  0B5C  3800               	iorlw	0
  4764  0B5D  1D03               	skipz
  4765  0B5E  2B59               	goto	l6782
  4766                           
  4767                           ;lcd(16).c: 36: lcd_put_byte(0,0b00001111&0b00001101&0b00001110);
  4768  0B5F  300C               	movlw	12
  4769  0B60  00F2               	movwf	?_lcd_put_byte
  4770  0B61  3000               	movlw	0
  4771  0B62  2390  120A  158A   	fcall	_lcd_put_byte
  4772  0B65                     l6786:	
  4773                           ;lcd(16).c: 37: while(lcd_busy());
  4774                           
  4775  0B65  2420  120A  158A   	fcall	_lcd_busy
  4776  0B68  3800               	iorlw	0
  4777  0B69  1D03               	skipz
  4778  0B6A  2B65               	goto	l6786
  4779  0B6B  3000               	movlw	0
  4780                           
  4781                           ;lcd(16).c: 39: lcd_put_byte(0,0x01);
  4782  0B6C  01F2               	clrf	?_lcd_put_byte
  4783  0B6D  0AF2               	incf	?_lcd_put_byte,f
  4784  0B6E  2390  120A  158A   	fcall	_lcd_put_byte
  4785  0B71                     l6790:	
  4786                           ;lcd(16).c: 40: while(lcd_busy());
  4787                           
  4788  0B71  2420  120A  158A   	fcall	_lcd_busy
  4789  0B74  3800               	iorlw	0
  4790  0B75  1D03               	skipz
  4791  0B76  2B71               	goto	l6790
  4792                           
  4793                           ;lcd(16).c: 41: lcd_put_byte(0,0b00000100);
  4794  0B77  3004               	movlw	4
  4795  0B78  00F2               	movwf	?_lcd_put_byte
  4796  0B79  3000               	movlw	0
  4797  0B7A  2390  120A  158A   	fcall	_lcd_put_byte
  4798  0B7D                     l6794:	
  4799                           ;lcd(16).c: 42: while(lcd_busy());
  4800                           
  4801  0B7D  2420  120A  158A   	fcall	_lcd_busy
  4802  0B80  3800               	iorlw	0
  4803  0B81  1D03               	skipz
  4804  0B82  2B7D               	goto	l6794
  4805  0B83  3000               	movlw	0
  4806                           
  4807                           ;lcd(16).c: 43: lcd_put_byte(0,0x01);
  4808  0B84  01F2               	clrf	?_lcd_put_byte
  4809  0B85  0AF2               	incf	?_lcd_put_byte,f
  4810  0B86  2390  120A  158A   	fcall	_lcd_put_byte
  4811  0B89                     l6798:	
  4812                           ;lcd(16).c: 44: while(lcd_busy());
  4813                           
  4814  0B89  2420  120A  158A   	fcall	_lcd_busy
  4815  0B8C  3800               	iorlw	0
  4816  0B8D  1903               	btfsc	3,2
  4817  0B8E  0008               	return
  4818  0B8F  2B89               	goto	l6798
  4819  0B90                     __end_of_lcd_init:	
  4820  0B90                     __ptext552:	
  4821 ;; =============== function _lcd_busy ends ============
  4822                           
  4823                           
  4824 ;; *************** function _lcd_put_byte *****************
  4825 ;; Defined at:
  4826 ;;		line 106 in file "C:\Online Class\HK6\Practice_Micro\hc-sr04\lcd(16).c"
  4827 ;; Parameters:    Size  Location     Type
  4828 ;;  rs              1    wreg     unsigned char 
  4829 ;;  b               1    2[COMMON] unsigned char 
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;  rs              1    5[COMMON] unsigned char 
  4832 ;;  temp            1    6[COMMON] struct _BYTE_VAL
  4833 ;; Return value:  Size  Location     Type
  4834 ;;		None               void
  4835 ;; Registers used:
  4836 ;;		wreg, status,2, status,0
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/20
  4839 ;;		On exit  : 60/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4842 ;;      Params:         1       0       0       0       0
  4843 ;;      Locals:         2       0       0       0       0
  4844 ;;      Temps:          2       0       0       0       0
  4845 ;;      Totals:         5       0       0       0       0
  4846 ;;Total ram usage:        5 bytes
  4847 ;; Hardware stack levels used:    1
  4848 ;; Hardware stack levels required when called:    1
  4849 ;; This function calls:
  4850 ;;		Nothing
  4851 ;; This function is called by:
  4852 ;;		_lcd_init
  4853 ;;		_lcd_putc
  4854 ;;		_lcd_gotoxy
  4855 ;; This function uses a non-reentrant model
  4856 ;;
  4857  0B90                     _lcd_put_byte:	
  4858                           
  4859                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0]
  4860                           ;lcd_put_byte@rs stored from wreg
  4861  0B90  00F5               	movwf	lcd_put_byte@rs
  4862                           
  4863                           ;lcd(16).c: 107: BYTE_VAL temp;
  4864                           ;lcd(16).c: 109: TRISD4 = 0;
  4865  0B91  1683               	bsf	3,5	;RP0=1, select bank1
  4866  0B92  1303               	bcf	3,6	;RP1=0, select bank1
  4867  0B93  1208               	bcf	8,4
  4868                           
  4869                           ;lcd(16).c: 110: TRISD5 = 0;
  4870  0B94  1288               	bcf	8,5
  4871                           
  4872                           ;lcd(16).c: 111: TRISD6 = 0;
  4873  0B95  1308               	bcf	8,6
  4874                           
  4875                           ;lcd(16).c: 112: TRISD7 = 0;
  4876  0B96  1388               	bcf	8,7
  4877                           
  4878                           ;lcd(16).c: 114: RD1 = 0;
  4879  0B97  1283               	bcf	3,5	;RP0=0, select bank0
  4880  0B98  1088               	bcf	8,1
  4881                           
  4882                           ;lcd(16).c: 115: if(rs) RD1 = 1;
  4883  0B99  0875               	movf	lcd_put_byte@rs,w
  4884  0B9A  1D03               	skipz
  4885  0B9B  1488               	bsf	8,1
  4886                           
  4887                           ;lcd(16).c: 117: _delay((unsigned long)((20)*(20000000/4000000.0)));
  4888  0B9C  3021               	movlw	33
  4889  0B9D  00F3               	movwf	??_lcd_put_byte
  4890  0B9E                     u3977:	
  4891  0B9E  0BF3               	decfsz	??_lcd_put_byte,f
  4892  0B9F  2B9E               	goto	u3977
  4893  0BA0  245C               	call	PL33	;select bank 0
  4894                           
  4895                           ;lcd(16).c: 118: RD2 = 0;
  4896  0BA1  3021               	movlw	33
  4897  0BA2  1108               	bcf	8,2
  4898                           
  4899                           ;lcd(16).c: 119: _delay((unsigned long)((20)*(20000000/4000000.0)));
  4900  0BA3  00F3               	movwf	??_lcd_put_byte
  4901  0BA4                     u3987:	
  4902  0BA4  0BF3               	decfsz	??_lcd_put_byte,f
  4903  0BA5  2BA4               	goto	u3987
  4904  0BA6  245C               	call	PL33	;select bank 0
  4905                           
  4906                           ;lcd(16).c: 120: RD3 = 0;
  4907  0BA7  1188               	bcf	8,3
  4908                           
  4909                           ;lcd(16).c: 122: temp.Val = b;
  4910  0BA8  0872               	movf	lcd_put_byte@b,w
  4911  0BA9  00F6               	movwf	lcd_put_byte@temp
  4912                           
  4913                           ;lcd(16).c: 125: RD4 = temp.bits.b4;
  4914  0BAA  0E76               	swapf	lcd_put_byte@temp,w
  4915  0BAB  3901               	andlw	1
  4916  0BAC  00F3               	movwf	??_lcd_put_byte
  4917  0BAD  0C73               	rrf	??_lcd_put_byte,w
  4918  0BAE  1C03               	btfss	3,0
  4919  0BAF  2BB3               	goto	u2700
  4920  0BB0  245C               	call	PL33	;select bank 0
  4921  0BB1  1608               	bsf	8,4
  4922  0BB2  2BB5               	goto	l6534
  4923  0BB3                     u2700:	
  4924  0BB3  245C               	call	PL33	;select bank 0
  4925  0BB4  1208               	bcf	8,4
  4926  0BB5                     l6534:	
  4927                           
  4928                           ;lcd(16).c: 126: RD5 = temp.bits.b5;
  4929  0BB5  0E76               	swapf	lcd_put_byte@temp,w
  4930  0BB6  00F3               	movwf	??_lcd_put_byte
  4931  0BB7  0C73               	rrf	??_lcd_put_byte,w
  4932  0BB8  3901               	andlw	1
  4933  0BB9  00F4               	movwf	??_lcd_put_byte+1
  4934  0BBA  0C74               	rrf	??_lcd_put_byte+1,w
  4935  0BBB  1C03               	btfss	3,0
  4936  0BBC  2BC0               	goto	u2720
  4937  0BBD  245C               	call	PL33	;select bank 0
  4938  0BBE  1688               	bsf	8,5
  4939  0BBF  2BC2               	goto	l6536
  4940  0BC0                     u2720:	
  4941  0BC0  245C               	call	PL33	;select bank 0
  4942  0BC1  1288               	bcf	8,5
  4943  0BC2                     l6536:	
  4944                           
  4945                           ;lcd(16).c: 127: RD6 = temp.bits.b6;
  4946  0BC2  0E76               	swapf	lcd_put_byte@temp,w
  4947  0BC3  2455  120A  158A   	fcall	PL27	;call to abstracted procedure
  4948  0BC6  1C03               	btfss	3,0
  4949  0BC7  2BCB               	goto	u2740
  4950  0BC8  245C               	call	PL33	;select bank 0
  4951  0BC9  1708               	bsf	8,6
  4952  0BCA  2BCD               	goto	l6538
  4953  0BCB                     u2740:	
  4954  0BCB  245C               	call	PL33	;select bank 0
  4955  0BCC  1308               	bcf	8,6
  4956  0BCD                     l6538:	
  4957                           
  4958                           ;lcd(16).c: 128: RD7 = temp.bits.b7;
  4959  0BCD  0D76               	rlf	lcd_put_byte@temp,w
  4960  0BCE  0D76               	rlf	lcd_put_byte@temp,w
  4961  0BCF  3901               	andlw	1
  4962  0BD0  00F3               	movwf	??_lcd_put_byte
  4963  0BD1  0C73               	rrf	??_lcd_put_byte,w
  4964  0BD2  1C03               	btfss	3,0
  4965  0BD3  2BD7               	goto	u2760
  4966  0BD4  245C               	call	PL33	;select bank 0
  4967  0BD5  1788               	bsf	8,7
  4968  0BD6  2BD9               	goto	u2774
  4969  0BD7                     u2760:	
  4970  0BD7  245C               	call	PL33	;select bank 0
  4971  0BD8  1388               	bcf	8,7
  4972  0BD9                     u2774:	
  4973                           
  4974                           ;lcd(16).c: 129: _delay((unsigned long)((20)*(20000000/4000000.0)));
  4975  0BD9  3021               	movlw	33
  4976  0BDA  00F3               	movwf	??_lcd_put_byte
  4977  0BDB                     u3997:	
  4978  0BDB  0BF3               	decfsz	??_lcd_put_byte,f
  4979  0BDC  2BDB               	goto	u3997
  4980  0BDD  245C               	call	PL33	;select bank 0
  4981                           
  4982                           ;lcd(16).c: 130: RD3 = 1;
  4983  0BDE  3021               	movlw	33
  4984  0BDF  1588               	bsf	8,3
  4985                           
  4986                           ;lcd(16).c: 131: _delay((unsigned long)((20)*(20000000/4000000.0)));
  4987  0BE0  00F3               	movwf	??_lcd_put_byte
  4988  0BE1                     u4007:	
  4989  0BE1  0BF3               	decfsz	??_lcd_put_byte,f
  4990  0BE2  2BE1               	goto	u4007
  4991  0BE3  245C               	call	PL33	;select bank 0
  4992                           
  4993                           ;lcd(16).c: 132: RD3 = 0;
  4994  0BE4  1188               	bcf	8,3
  4995                           
  4996                           ;lcd(16).c: 134: RD4 = temp.bits.b0;
  4997  0BE5  0876               	movf	lcd_put_byte@temp,w
  4998  0BE6  3901               	andlw	1
  4999  0BE7  00F3               	movwf	??_lcd_put_byte
  5000  0BE8  0C73               	rrf	??_lcd_put_byte,w
  5001  0BE9  1C03               	btfss	3,0
  5002  0BEA  2BEE               	goto	u2780
  5003  0BEB  245C               	call	PL33	;select bank 0
  5004  0BEC  1608               	bsf	8,4
  5005  0BED  2BF0               	goto	l6546
  5006  0BEE                     u2780:	
  5007  0BEE  245C               	call	PL33	;select bank 0
  5008  0BEF  1208               	bcf	8,4
  5009  0BF0                     l6546:	
  5010                           
  5011                           ;lcd(16).c: 135: RD5 = temp.bits.b1;
  5012  0BF0  0C76               	rrf	lcd_put_byte@temp,w
  5013  0BF1  3901               	andlw	1
  5014  0BF2  00F3               	movwf	??_lcd_put_byte
  5015  0BF3  0C73               	rrf	??_lcd_put_byte,w
  5016  0BF4  1C03               	btfss	3,0
  5017  0BF5  2BF9               	goto	u2800
  5018  0BF6  245C               	call	PL33	;select bank 0
  5019  0BF7  1688               	bsf	8,5
  5020  0BF8  2BFB               	goto	l6548
  5021  0BF9                     u2800:	
  5022  0BF9  245C               	call	PL33	;select bank 0
  5023  0BFA  1288               	bcf	8,5
  5024  0BFB                     l6548:	
  5025                           
  5026                           ;lcd(16).c: 136: RD6 = temp.bits.b2;
  5027  0BFB  0C76               	rrf	lcd_put_byte@temp,w
  5028  0BFC  00F3               	movwf	??_lcd_put_byte
  5029  0BFD  0C73               	rrf	??_lcd_put_byte,w
  5030  0BFE  3901               	andlw	1
  5031  0BFF  00F4               	movwf	??_lcd_put_byte+1
  5032  0C00  0C74               	rrf	??_lcd_put_byte+1,w
  5033  0C01  1C03               	btfss	3,0
  5034  0C02  2C06               	goto	u2820
  5035  0C03  245C               	call	PL33	;select bank 0
  5036  0C04  1708               	bsf	8,6
  5037  0C05  2C08               	goto	l6550
  5038  0C06                     u2820:	
  5039  0C06  245C               	call	PL33	;select bank 0
  5040  0C07  1308               	bcf	8,6
  5041  0C08                     l6550:	
  5042                           
  5043                           ;lcd(16).c: 137: RD7 = temp.bits.b3;
  5044  0C08  0C76               	rrf	lcd_put_byte@temp,w
  5045  0C09  2455  120A  158A   	fcall	PL27	;call to abstracted procedure
  5046  0C0C  1C03               	btfss	3,0
  5047  0C0D  2C11               	goto	u2840
  5048  0C0E  245C               	call	PL33	;select bank 0
  5049  0C0F  1788               	bsf	8,7
  5050  0C10  2C13               	goto	u2854
  5051  0C11                     u2840:	
  5052  0C11  245C               	call	PL33	;select bank 0
  5053  0C12  1388               	bcf	8,7
  5054  0C13                     u2854:	
  5055                           
  5056                           ;lcd(16).c: 138: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5057  0C13  3021               	movlw	33
  5058  0C14  00F3               	movwf	??_lcd_put_byte
  5059  0C15                     u4017:	
  5060  0C15  0BF3               	decfsz	??_lcd_put_byte,f
  5061  0C16  2C15               	goto	u4017
  5062  0C17  245C               	call	PL33	;select bank 0
  5063                           
  5064                           ;lcd(16).c: 139: RD3 = 1;
  5065  0C18  3021               	movlw	33
  5066  0C19  1588               	bsf	8,3
  5067                           
  5068                           ;lcd(16).c: 140: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5069  0C1A  00F3               	movwf	??_lcd_put_byte
  5070  0C1B                     u4027:	
  5071  0C1B  0BF3               	decfsz	??_lcd_put_byte,f
  5072  0C1C  2C1B               	goto	u4027
  5073  0C1D  245C               	call	PL33	;select bank 0
  5074                           
  5075                           ;lcd(16).c: 141: RD3 = 0;
  5076  0C1E  1188               	bcf	8,3
  5077  0C1F  0008               	return
  5078  0C20                     __end_of_lcd_put_byte:	
  5079  0C20                     __ptext551:	
  5080 ;; =============== function ___ftadd ends ============
  5081                           
  5082                           
  5083 ;; *************** function _lcd_busy *****************
  5084 ;; Defined at:
  5085 ;;		line 47 in file "C:\Online Class\HK6\Practice_Micro\hc-sr04\lcd(16).c"
  5086 ;; Parameters:    Size  Location     Type
  5087 ;;		None
  5088 ;; Auto vars:     Size  Location     Type
  5089 ;;  busy            1    3[COMMON] unsigned char 
  5090 ;; Return value:  Size  Location     Type
  5091 ;;                  1    wreg      unsigned char 
  5092 ;; Registers used:
  5093 ;;		wreg
  5094 ;; Tracked objects:
  5095 ;;		On entry : 0/0
  5096 ;;		On exit  : 60/0
  5097 ;;		Unchanged: 0/0
  5098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5099 ;;      Params:         0       0       0       0       0
  5100 ;;      Locals:         1       0       0       0       0
  5101 ;;      Temps:          1       0       0       0       0
  5102 ;;      Totals:         2       0       0       0       0
  5103 ;;Total ram usage:        2 bytes
  5104 ;; Hardware stack levels used:    1
  5105 ;; Hardware stack levels required when called:    1
  5106 ;; This function calls:
  5107 ;;		Nothing
  5108 ;; This function is called by:
  5109 ;;		_lcd_init
  5110 ;;		_lcd_putc
  5111 ;;		_lcd_gotoxy
  5112 ;; This function uses a non-reentrant model
  5113 ;;
  5114  0C20                     _lcd_busy:	
  5115                           
  5116                           ;lcd(16).c: 48: unsigned char busy;
  5117                           ;lcd(16).c: 50: TRISD4 = 1;
  5118                           
  5119                           ; Regs used in _lcd_busy: [wreg]
  5120  0C20  1683               	bsf	3,5	;RP0=1, select bank1
  5121  0C21  1303               	bcf	3,6	;RP1=0, select bank1
  5122  0C22  1608               	bsf	8,4
  5123                           
  5124                           ;lcd(16).c: 51: TRISD5 = 1;
  5125  0C23  1688               	bsf	8,5
  5126                           
  5127                           ;lcd(16).c: 52: TRISD6 = 1;
  5128  0C24  1708               	bsf	8,6
  5129                           
  5130                           ;lcd(16).c: 53: TRISD7 = 1;
  5131  0C25  1788               	bsf	8,7
  5132                           
  5133                           ;lcd(16).c: 55: RD2 = 1;
  5134  0C26  1283               	bcf	3,5	;RP0=0, select bank0
  5135  0C27  3021               	movlw	33
  5136  0C28  1508               	bsf	8,2
  5137                           
  5138                           ;lcd(16).c: 56: RD1 = 0;
  5139  0C29  1088               	bcf	8,1
  5140                           
  5141                           ;lcd(16).c: 57: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5142  0C2A  00F2               	movwf	??_lcd_busy
  5143  0C2B                     u3937:	
  5144  0C2B  0BF2               	decfsz	??_lcd_busy,f
  5145  0C2C  2C2B               	goto	u3937
  5146  0C2D  245C               	call	PL33	;select bank 0
  5147                           
  5148                           ;lcd(16).c: 58: RD3 = 1;
  5149  0C2E  3021               	movlw	33
  5150  0C2F  1588               	bsf	8,3
  5151                           
  5152                           ;lcd(16).c: 59: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5153  0C30  00F2               	movwf	??_lcd_busy
  5154  0C31                     u3947:	
  5155  0C31  0BF2               	decfsz	??_lcd_busy,f
  5156  0C32  2C31               	goto	u3947
  5157                           
  5158                           ;lcd(16).c: 61: busy = RD7;
  5159  0C33  3000               	movlw	0
  5160  0C34  245C               	call	PL33	;select bank 0
  5161  0C35  1B88               	btfsc	8,7
  5162  0C36  3001               	movlw	1
  5163  0C37  00F3               	movwf	lcd_busy@busy
  5164  0C38  3021               	movlw	33
  5165                           
  5166                           ;lcd(16).c: 63: RD3 = 0;
  5167  0C39  1188               	bcf	8,3
  5168                           
  5169                           ;lcd(16).c: 64: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5170  0C3A  00F2               	movwf	??_lcd_busy
  5171  0C3B                     u3957:	
  5172  0C3B  0BF2               	decfsz	??_lcd_busy,f
  5173  0C3C  2C3B               	goto	u3957
  5174  0C3D  245C               	call	PL33	;select bank 0
  5175                           
  5176                           ;lcd(16).c: 65: RD3 = 1;
  5177  0C3E  3021               	movlw	33
  5178  0C3F  1588               	bsf	8,3
  5179                           
  5180                           ;lcd(16).c: 66: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5181  0C40  00F2               	movwf	??_lcd_busy
  5182  0C41                     u3967:	
  5183  0C41  0BF2               	decfsz	??_lcd_busy,f
  5184  0C42  2C41               	goto	u3967
  5185  0C43  245C               	call	PL33	;select bank 0
  5186                           
  5187                           ;lcd(16).c: 67: RD3 = 0;
  5188  0C44  1188               	bcf	8,3
  5189                           
  5190                           ;lcd(16).c: 70: return busy;
  5191  0C45  0873               	movf	lcd_busy@busy,w
  5192  0C46  0008               	return
  5193  0C47                     __end_of_lcd_busy:	
  5194  0C47                     __ptext568:	
  5195 ;; =============== function _isdigit ends ============
  5196                           
  5197                           
  5198 ;; *************** function _isprint *****************
  5199 ;; Defined at:
  5200 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isprint.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;  c               1    wreg     unsigned char 
  5203 ;; Auto vars:     Size  Location     Type
  5204 ;;  c               1    3[COMMON] unsigned char 
  5205 ;; Return value:  Size  Location     Type
  5206 ;;		None               void
  5207 ;; Registers used:
  5208 ;;		wreg, status,2, status,0
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/20
  5211 ;;		On exit  : 0/20
  5212 ;;		Unchanged: FFFFF/0
  5213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5214 ;;      Params:         0       0       0       0       0
  5215 ;;      Locals:         2       0       0       0       0
  5216 ;;      Temps:          0       0       0       0       0
  5217 ;;      Totals:         2       0       0       0       0
  5218 ;;Total ram usage:        2 bytes
  5219 ;; Hardware stack levels used:    1
  5220 ;; Hardware stack levels required when called:    1
  5221 ;; This function calls:
  5222 ;;		Nothing
  5223 ;; This function is called by:
  5224 ;;		_lcd_putc
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227  0C47                     _isprint:	
  5228                           
  5229                           ; Regs used in _isprint: [wreg+status,2+status,0]
  5230                           ;isprint@c stored from wreg
  5231  0C47  00F3               	movwf	isprint@c
  5232  0C48  307F               	movlw	127
  5233  0C49  01F2               	clrf	_isprint$3671
  5234  0C4A  0273               	subwf	isprint@c,w
  5235  0C4B  1803               	skipnc
  5236  0C4C  2C53               	goto	l6116
  5237  0C4D  3020               	movlw	32
  5238  0C4E  0273               	subwf	isprint@c,w
  5239  0C4F  1C03               	skipc
  5240  0C50  2C53               	goto	l6116
  5241  0C51  01F2               	clrf	_isprint$3671
  5242  0C52  0AF2               	incf	_isprint$3671,f
  5243  0C53                     l6116:	
  5244  0C53  0C72               	rrf	_isprint$3671,w
  5245  0C54  0008               	return
  5246  0C55                     __end_of_isprint:	
  5247  0C55                     PL27:	
  5248  0C55  00F3               	movwf	??_lcd_put_byte
  5249  0C56  0CF3               	rrf	??_lcd_put_byte,f
  5250  0C57  0C73               	rrf	??_lcd_put_byte,w
  5251  0C58  3901               	andlw	1
  5252  0C59  00F4               	movwf	??_lcd_put_byte+1
  5253  0C5A  0C74               	rrf	??_lcd_put_byte+1,w
  5254  0C5B  0008               	return
  5255  0C5C                     PL33:	
  5256  0C5C  1283               	bcf	3,5	;RP0=0, select bank0
  5257  0C5D  1303               	bcf	3,6	;RP1=0, select bank0
  5258  0C5E  0008               	return
  5259                           
  5260                           	psect	text547
  5261  0C5F                     __ptext547:	
  5262 ;; =============== function ___lltoft ends ============
  5263                           
  5264                           
  5265 ;; *************** function ___lwtoft *****************
  5266 ;; Defined at:
  5267 ;;		line 29 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwtoft.c"
  5268 ;; Parameters:    Size  Location     Type
  5269 ;;  c               2    0[BANK0 ] unsigned int 
  5270 ;; Auto vars:     Size  Location     Type
  5271 ;;		None
  5272 ;; Return value:  Size  Location     Type
  5273 ;;                  3    0[BANK0 ] float 
  5274 ;; Registers used:
  5275 ;;		wreg, status,2, status,0, pclath, cstack
  5276 ;; Tracked objects:
  5277 ;;		On entry : 60/0
  5278 ;;		On exit  : 60/0
  5279 ;;		Unchanged: FFF9F/0
  5280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5281 ;;      Params:         0       3       0       0       0
  5282 ;;      Locals:         0       0       0       0       0
  5283 ;;      Temps:          0       0       0       0       0
  5284 ;;      Totals:         0       3       0       0       0
  5285 ;;Total ram usage:        3 bytes
  5286 ;; Hardware stack levels used:    1
  5287 ;; Hardware stack levels required when called:    2
  5288 ;; This function calls:
  5289 ;;		___ftpack
  5290 ;; This function is called by:
  5291 ;;		_main
  5292 ;; This function uses a non-reentrant model
  5293 ;;
  5294  0C5F                     ___lwtoft:	
  5295                           
  5296                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  5297  0C5F  0820               	movf	___lwtoft@c,w
  5298  0C60  00F2               	movwf	?___ftpack
  5299  0C61  0821               	movf	___lwtoft@c+1,w
  5300  0C62  00F3               	movwf	?___ftpack+1
  5301  0C63  308E               	movlw	142
  5302  0C64  01F4               	clrf	?___ftpack+2
  5303  0C65  00F5               	movwf	?___ftpack+3
  5304  0C66  01F6               	clrf	?___ftpack+4
  5305  0C67  2769               	fcall	___ftpack
  5306  0C68  0872               	movf	?___ftpack,w
  5307  0C69  00A0               	movwf	?___lwtoft
  5308  0C6A  0873               	movf	?___ftpack+1,w
  5309  0C6B  00A1               	movwf	?___lwtoft+1
  5310  0C6C  0874               	movf	?___ftpack+2,w
  5311  0C6D  00A2               	movwf	?___lwtoft+2
  5312  0C6E  0008               	return
  5313  0C6F                     __end_of___lwtoft:	
  5314  0C6F                     __ptext549:	
  5315 ;; =============== function ___ftmul ends ============
  5316                           
  5317                           
  5318 ;; *************** function ___ftdiv *****************
  5319 ;; Defined at:
  5320 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  5321 ;; Parameters:    Size  Location     Type
  5322 ;;  f2              3    3[BANK0 ] float 
  5323 ;;  f1              3    6[BANK0 ] float 
  5324 ;; Auto vars:     Size  Location     Type
  5325 ;;  f3              3   13[BANK0 ] float 
  5326 ;;  sign            1   17[BANK0 ] unsigned char 
  5327 ;;  exp             1   16[BANK0 ] unsigned char 
  5328 ;;  cntr            1   12[BANK0 ] unsigned char 
  5329 ;; Return value:  Size  Location     Type
  5330 ;;                  3    3[BANK0 ] float 
  5331 ;; Registers used:
  5332 ;;		wreg, status,2, status,0, pclath, cstack
  5333 ;; Tracked objects:
  5334 ;;		On entry : 60/0
  5335 ;;		On exit  : 60/0
  5336 ;;		Unchanged: FFF9F/0
  5337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5338 ;;      Params:         0       6       0       0       0
  5339 ;;      Locals:         0       6       0       0       0
  5340 ;;      Temps:          0       3       0       0       0
  5341 ;;      Totals:         0      15       0       0       0
  5342 ;;Total ram usage:       15 bytes
  5343 ;; Hardware stack levels used:    1
  5344 ;; Hardware stack levels required when called:    2
  5345 ;; This function calls:
  5346 ;;		___ftpack
  5347 ;; This function is called by:
  5348 ;;		_main
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351  0C6F                     ___ftdiv:	
  5352                           
  5353                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  5354  0C6F  0826               	movf	___ftdiv@f1,w
  5355  0C70  00A9               	movwf	??___ftdiv
  5356  0C71  0827               	movf	___ftdiv@f1+1,w
  5357  0C72  00AA               	movwf	??___ftdiv+1
  5358  0C73  0828               	movf	___ftdiv@f1+2,w
  5359  0C74  00AB               	movwf	??___ftdiv+2
  5360  0C75  1003               	clrc
  5361  0C76  0D2A               	rlf	??___ftdiv+1,w
  5362  0C77  0D2B               	rlf	??___ftdiv+2,w
  5363  0C78  00B0               	movwf	___ftdiv@exp
  5364  0C79  08B0               	movf	___ftdiv@exp,f
  5365  0C7A  1D03               	skipz
  5366  0C7B  2C80               	goto	l6654
  5367  0C7C  01A3               	clrf	?___ftdiv
  5368  0C7D  01A4               	clrf	?___ftdiv+1
  5369  0C7E  01A5               	clrf	?___ftdiv+2
  5370  0C7F  0008               	return
  5371  0C80                     l6654:	
  5372  0C80  0823               	movf	___ftdiv@f2,w
  5373  0C81  00A9               	movwf	??___ftdiv
  5374  0C82  0824               	movf	___ftdiv@f2+1,w
  5375  0C83  00AA               	movwf	??___ftdiv+1
  5376  0C84  0825               	movf	___ftdiv@f2+2,w
  5377  0C85  00AB               	movwf	??___ftdiv+2
  5378  0C86  1003               	clrc
  5379  0C87  0D2A               	rlf	??___ftdiv+1,w
  5380  0C88  0D2B               	rlf	??___ftdiv+2,w
  5381  0C89  00B1               	movwf	___ftdiv@sign
  5382  0C8A  08B1               	movf	___ftdiv@sign,f
  5383  0C8B  1D03               	skipz
  5384  0C8C  2C91               	goto	l3362
  5385  0C8D  01A3               	clrf	?___ftdiv
  5386  0C8E  01A4               	clrf	?___ftdiv+1
  5387  0C8F  01A5               	clrf	?___ftdiv+2
  5388  0C90  0008               	return
  5389  0C91                     l3362:	
  5390  0C91  3089               	movlw	137
  5391  0C92  01AD               	clrf	___ftdiv@f3
  5392  0C93  01AE               	clrf	___ftdiv@f3+1
  5393  0C94  01AF               	clrf	___ftdiv@f3+2
  5394  0C95  0731               	addwf	___ftdiv@sign,w
  5395  0C96  00A9               	movwf	??___ftdiv
  5396  0C97  02B0               	subwf	___ftdiv@exp,f
  5397  0C98  0828               	movf	___ftdiv@f1+2,w
  5398  0C99  00B1               	movwf	___ftdiv@sign
  5399  0C9A  0825               	movf	___ftdiv@f2+2,w
  5400  0C9B  06B1               	xorwf	___ftdiv@sign,f
  5401  0C9C  3080               	movlw	128
  5402  0C9D  05B1               	andwf	___ftdiv@sign,f
  5403  0C9E  3018               	movlw	24
  5404  0C9F  17A7               	bsf	___ftdiv@f1+1,7
  5405  0CA0  01A8               	clrf	___ftdiv@f1+2
  5406  0CA1  17A4               	bsf	___ftdiv@f2+1,7
  5407  0CA2  01A5               	clrf	___ftdiv@f2+2
  5408  0CA3  00AC               	movwf	___ftdiv@cntr
  5409  0CA4                     l6678:	
  5410  0CA4  1003               	clrc
  5411  0CA5  0DAD               	rlf	___ftdiv@f3,f
  5412  0CA6  0DAE               	rlf	___ftdiv@f3+1,f
  5413  0CA7  0DAF               	rlf	___ftdiv@f3+2,f
  5414  0CA8  0825               	movf	___ftdiv@f2+2,w
  5415  0CA9  0228               	subwf	___ftdiv@f1+2,w
  5416  0CAA  1D03               	skipz
  5417  0CAB  2CB2               	goto	u3085
  5418  0CAC  0824               	movf	___ftdiv@f2+1,w
  5419  0CAD  0227               	subwf	___ftdiv@f1+1,w
  5420  0CAE  1D03               	skipz
  5421  0CAF  2CB2               	goto	u3085
  5422  0CB0  0823               	movf	___ftdiv@f2,w
  5423  0CB1  0226               	subwf	___ftdiv@f1,w
  5424  0CB2                     u3085:	
  5425  0CB2  1C03               	skipc
  5426  0CB3  2CC0               	goto	L6
  5427  0CB4  0823               	movf	___ftdiv@f2,w
  5428  0CB5  02A6               	subwf	___ftdiv@f1,f
  5429  0CB6  0824               	movf	___ftdiv@f2+1,w
  5430  0CB7  1C03               	skipc
  5431  0CB8  0F24               	incfsz	___ftdiv@f2+1,w
  5432  0CB9  02A7               	subwf	___ftdiv@f1+1,f
  5433  0CBA  0825               	movf	___ftdiv@f2+2,w
  5434  0CBB  1C03               	skipc
  5435  0CBC  0A25               	incf	___ftdiv@f2+2,w
  5436  0CBD  02A8               	subwf	___ftdiv@f1+2,f
  5437  0CBE  142D               	bsf	___ftdiv@f3,0
  5438  0CBF  1003               	clrc
  5439  0CC0                     L6:	
  5440  0CC0  0DA6               	rlf	___ftdiv@f1,f
  5441  0CC1  0DA7               	rlf	___ftdiv@f1+1,f
  5442  0CC2  0DA8               	rlf	___ftdiv@f1+2,f
  5443  0CC3  0BAC               	decfsz	___ftdiv@cntr,f
  5444  0CC4  2CA4               	goto	l6678
  5445  0CC5  082D               	movf	___ftdiv@f3,w
  5446  0CC6  00F2               	movwf	?___ftpack
  5447  0CC7  082E               	movf	___ftdiv@f3+1,w
  5448  0CC8  00F3               	movwf	?___ftpack+1
  5449  0CC9  082F               	movf	___ftdiv@f3+2,w
  5450  0CCA  00F4               	movwf	?___ftpack+2
  5451  0CCB  0830               	movf	___ftdiv@exp,w
  5452  0CCC  00F5               	movwf	?___ftpack+3
  5453  0CCD  0831               	movf	___ftdiv@sign,w
  5454  0CCE  00F6               	movwf	?___ftpack+4
  5455  0CCF  2769               	fcall	___ftpack
  5456  0CD0  0872               	movf	?___ftpack,w
  5457  0CD1  00A3               	movwf	?___ftdiv
  5458  0CD2  0873               	movf	?___ftpack+1,w
  5459  0CD3  00A4               	movwf	?___ftdiv+1
  5460  0CD4  0874               	movf	?___ftpack+2,w
  5461  0CD5  00A5               	movwf	?___ftdiv+2
  5462  0CD6  0008               	return
  5463  0CD7                     __end_of___ftdiv:	
  5464  0CD7                     __ptext542:	
  5465 ;; =============== function ___ftsub ends ============
  5466                           
  5467                           
  5468 ;; *************** function _scale *****************
  5469 ;; Defined at:
  5470 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;  scl             1    wreg     char 
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;  scl             1   43[BANK0 ] char 
  5475 ;; Return value:  Size  Location     Type
  5476 ;;                  3   33[BANK0 ] char 
  5477 ;; Registers used:
  5478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5479 ;; Tracked objects:
  5480 ;;		On entry : 60/20
  5481 ;;		On exit  : 60/0
  5482 ;;		Unchanged: FFF9F/0
  5483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5484 ;;      Params:         0       3       0       0       0
  5485 ;;      Locals:         0       4       0       0       0
  5486 ;;      Temps:          0       4       0       0       0
  5487 ;;      Totals:         0      11       0       0       0
  5488 ;;Total ram usage:       11 bytes
  5489 ;; Hardware stack levels used:    1
  5490 ;; Hardware stack levels required when called:    3
  5491 ;; This function calls:
  5492 ;;		___awmod
  5493 ;;		___awdiv
  5494 ;;		___ftmul
  5495 ;;		___bmul
  5496 ;; This function is called by:
  5497 ;;		_printf
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500  0CD7                     _scale:	
  5501                           
  5502                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5503                           ;scale@scl stored from wreg
  5504  0CD7  1283               	bcf	3,5	;RP0=0, select bank0
  5505  0CD8  00CB               	movwf	scale@scl
  5506  0CD9  1FCB               	btfss	scale@scl,7
  5507  0CDA  2DA3               	goto	l6856
  5508  0CDB  09CB               	comf	scale@scl,f
  5509  0CDC  0ACB               	incf	scale@scl,f
  5510  0CDD  084B               	movf	scale@scl,w
  5511  0CDE  3A80               	xorlw	128
  5512  0CDF  3E12               	addlw	-238
  5513  0CE0  1C03               	skipc
  5514  0CE1  2D47               	goto	l6846
  5515  0CE2  300A               	movlw	10
  5516  0CE3  27CB  120A  158A   	fcall	PL15	;call to abstracted procedure
  5517  0CE6  26AF  120A  158A   	fcall	___awmod
  5518  0CE9  0873               	movf	?___awmod+1,w
  5519  0CEA  00FB               	movwf	?___awdiv+3
  5520  0CEB  0872               	movf	?___awmod,w
  5521  0CEC  00FA               	movwf	?___awdiv+2
  5522  0CED  2669  120A  158A   	fcall	___awdiv
  5523  0CF0  27F0               	fcall	PL25	;call to abstracted procedure
  5524  0CF1  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5525  0CF2  0084               	movwf	4
  5526  0CF3  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5527  0CF8  00B2               	movwf	?___ftmul
  5528  0CF9  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5529  0CFE  00B3               	movwf	?___ftmul+1
  5530  0CFF  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5531  0D04  27F8  120A  158A   	fcall	PL26	;call to abstracted procedure
  5532  0D07  1BFA               	btfsc	?___awdiv+2,7
  5533  0D08  03FB               	decf	?___awdiv+3,f
  5534  0D09  2669  120A  158A   	fcall	___awdiv
  5535  0D0C  27AF               	fcall	PL9	;call to abstracted procedure
  5536  0D0D  3E37               	addlw	low ((__npowers_-__stringbase+54))
  5537  0D0E  0084               	movwf	4
  5538  0D0F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5539  0D14  00B5               	movwf	?___ftmul+3
  5540  0D15  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5541  0D1A  00B6               	movwf	?___ftmul+4
  5542  0D1B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5543  0D20  00B7               	movwf	?___ftmul+5
  5544  0D21  26EC  120A  158A   	fcall	___ftmul
  5545  0D24  27B7  120A  158A   	fcall	PL10	;call to abstracted procedure
  5546  0D27  1BF4               	btfsc	?___awmod+2,7
  5547  0D28  03F5               	decf	?___awmod+3,f
  5548  0D29  26AF  120A  158A   	fcall	___awmod
  5549  0D2C  27A7               	fcall	PL8	;call to abstracted procedure
  5550  0D2D  3E01               	addlw	low (__npowers_-__stringbase)
  5551  0D2E  0084               	movwf	4
  5552  0D2F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5553  0D34  00B2               	movwf	?___ftmul
  5554  0D35  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5555  0D3A  00B3               	movwf	?___ftmul+1
  5556  0D3B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5557  0D40  27E0  120A  158A   	fcall	PL23	;call to abstracted procedure
  5558  0D43  26EC  120A  158A   	fcall	___ftmul
  5559  0D46  2FC4               	ljmp	PL11	;call to abstracted procedure
  5560  0D47                     l6846:	
  5561  0D47  084B               	movf	scale@scl,w
  5562  0D48  3A80               	xorlw	128
  5563  0D49  3E75               	addlw	-139
  5564  0D4A  1C03               	skipc
  5565  0D4B  2D8C               	goto	l6852
  5566  0D4C  300A               	movlw	10
  5567  0D4D  00F2               	movwf	?___awmod
  5568  0D4E  01F3               	clrf	?___awmod+1
  5569  0D4F  084B               	movf	scale@scl,w
  5570  0D50  00F4               	movwf	?___awmod+2
  5571  0D51  01F5               	clrf	?___awmod+3
  5572  0D52  1BF4               	btfsc	?___awmod+2,7
  5573  0D53  03F5               	decf	?___awmod+3,f
  5574  0D54  26AF  120A  158A   	fcall	___awmod
  5575  0D57  27A7               	fcall	PL8	;call to abstracted procedure
  5576  0D58  3E01               	addlw	low (__npowers_-__stringbase)
  5577  0D59  0084               	movwf	4
  5578  0D5A  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5579  0D5F  00B2               	movwf	?___ftmul
  5580  0D60  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5581  0D65  00B3               	movwf	?___ftmul+1
  5582  0D66  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5583  0D6B  27E8  120A  158A   	fcall	PL24	;call to abstracted procedure
  5584  0D6E  1BFA               	btfsc	?___awdiv+2,7
  5585  0D6F  03FB               	decf	?___awdiv+3,f
  5586  0D70  2669  120A  158A   	fcall	___awdiv
  5587  0D73  27AF               	fcall	PL9	;call to abstracted procedure
  5588  0D74  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5589  0D75  0084               	movwf	4
  5590  0D76  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5591  0D7B  00B5               	movwf	?___ftmul+3
  5592  0D7C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5593  0D81  00B6               	movwf	?___ftmul+4
  5594  0D82  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5595  0D87  00B7               	movwf	?___ftmul+5
  5596  0D88  26EC  120A  158A   	fcall	___ftmul
  5597  0D8B  2FC4               	ljmp	PL11	;call to abstracted procedure
  5598  0D8C                     l6852:	
  5599  0D8C  3003               	movlw	3
  5600  0D8D  00FB               	movwf	?___bmul
  5601  0D8E  084B               	movf	scale@scl,w
  5602  0D8F  275B               	fcall	___bmul
  5603  0D90  3E01               	addlw	low (__npowers_-__stringbase)
  5604  0D91  0084               	movwf	4
  5605  0D92  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5606  0D97  00C1               	movwf	?_scale
  5607  0D98  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5608  0D9D  00C2               	movwf	?_scale+1
  5609  0D9E  160A  118A  2000   	fcall	stringdir
  5610  0DA1  00C3               	movwf	?_scale+2
  5611  0DA2  0008               	return
  5612  0DA3                     l6856:	
  5613  0DA3  084B               	movf	scale@scl,w
  5614  0DA4  3A80               	xorlw	128
  5615  0DA5  3E12               	addlw	-238
  5616  0DA6  1C03               	skipc
  5617  0DA7  2E0D               	goto	l6864
  5618  0DA8  300A               	movlw	10
  5619  0DA9  27CB  120A  158A   	fcall	PL15	;call to abstracted procedure
  5620  0DAC  26AF  120A  158A   	fcall	___awmod
  5621  0DAF  0873               	movf	?___awmod+1,w
  5622  0DB0  00FB               	movwf	?___awdiv+3
  5623  0DB1  0872               	movf	?___awmod,w
  5624  0DB2  00FA               	movwf	?___awdiv+2
  5625  0DB3  2669  120A  158A   	fcall	___awdiv
  5626  0DB6  27F0               	fcall	PL25	;call to abstracted procedure
  5627  0DB7  3E43               	addlw	low ((__powers_-__stringbase+27))
  5628  0DB8  0084               	movwf	4
  5629  0DB9  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5630  0DBE  00B2               	movwf	?___ftmul
  5631  0DBF  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5632  0DC4  00B3               	movwf	?___ftmul+1
  5633  0DC5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5634  0DCA  27F8  120A  158A   	fcall	PL26	;call to abstracted procedure
  5635  0DCD  1BFA               	btfsc	?___awdiv+2,7
  5636  0DCE  03FB               	decf	?___awdiv+3,f
  5637  0DCF  2669  120A  158A   	fcall	___awdiv
  5638  0DD2  27AF               	fcall	PL9	;call to abstracted procedure
  5639  0DD3  3E5E               	addlw	low ((__powers_-__stringbase+54))
  5640  0DD4  0084               	movwf	4
  5641  0DD5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5642  0DDA  00B5               	movwf	?___ftmul+3
  5643  0DDB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5644  0DE0  00B6               	movwf	?___ftmul+4
  5645  0DE1  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5646  0DE6  00B7               	movwf	?___ftmul+5
  5647  0DE7  26EC  120A  158A   	fcall	___ftmul
  5648  0DEA  27B7  120A  158A   	fcall	PL10	;call to abstracted procedure
  5649  0DED  1BF4               	btfsc	?___awmod+2,7
  5650  0DEE  03F5               	decf	?___awmod+3,f
  5651  0DEF  26AF  120A  158A   	fcall	___awmod
  5652  0DF2  27A7               	fcall	PL8	;call to abstracted procedure
  5653  0DF3  3E28               	addlw	low (__powers_-__stringbase)
  5654  0DF4  0084               	movwf	4
  5655  0DF5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5656  0DFA  00B2               	movwf	?___ftmul
  5657  0DFB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5658  0E00  00B3               	movwf	?___ftmul+1
  5659  0E01  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5660  0E06  27E0  120A  158A   	fcall	PL23	;call to abstracted procedure
  5661  0E09  26EC  120A  158A   	fcall	___ftmul
  5662  0E0C  2FC4               	ljmp	PL11	;call to abstracted procedure
  5663  0E0D                     l6864:	
  5664  0E0D  084B               	movf	scale@scl,w
  5665  0E0E  3A80               	xorlw	128
  5666  0E0F  3E75               	addlw	-139
  5667  0E10  1C03               	skipc
  5668  0E11  2E52               	goto	l6870
  5669  0E12  300A               	movlw	10
  5670  0E13  00F2               	movwf	?___awmod
  5671  0E14  01F3               	clrf	?___awmod+1
  5672  0E15  084B               	movf	scale@scl,w
  5673  0E16  00F4               	movwf	?___awmod+2
  5674  0E17  01F5               	clrf	?___awmod+3
  5675  0E18  1BF4               	btfsc	?___awmod+2,7
  5676  0E19  03F5               	decf	?___awmod+3,f
  5677  0E1A  26AF  120A  158A   	fcall	___awmod
  5678  0E1D  27A7               	fcall	PL8	;call to abstracted procedure
  5679  0E1E  3E28               	addlw	low (__powers_-__stringbase)
  5680  0E1F  0084               	movwf	4
  5681  0E20  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5682  0E25  00B2               	movwf	?___ftmul
  5683  0E26  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5684  0E2B  00B3               	movwf	?___ftmul+1
  5685  0E2C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5686  0E31  27E8  120A  158A   	fcall	PL24	;call to abstracted procedure
  5687  0E34  1BFA               	btfsc	?___awdiv+2,7
  5688  0E35  03FB               	decf	?___awdiv+3,f
  5689  0E36  2669  120A  158A   	fcall	___awdiv
  5690  0E39  27AF               	fcall	PL9	;call to abstracted procedure
  5691  0E3A  3E43               	addlw	low ((__powers_-__stringbase+27))
  5692  0E3B  0084               	movwf	4
  5693  0E3C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5694  0E41  00B5               	movwf	?___ftmul+3
  5695  0E42  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5696  0E47  00B6               	movwf	?___ftmul+4
  5697  0E48  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5698  0E4D  00B7               	movwf	?___ftmul+5
  5699  0E4E  26EC  120A  158A   	fcall	___ftmul
  5700  0E51  2FC4               	ljmp	PL11	;call to abstracted procedure
  5701  0E52                     l6870:	
  5702  0E52  3003               	movlw	3
  5703  0E53  00FB               	movwf	?___bmul
  5704  0E54  084B               	movf	scale@scl,w
  5705  0E55  275B               	fcall	___bmul
  5706  0E56  3E28               	addlw	low (__powers_-__stringbase)
  5707  0E57  0084               	movwf	4
  5708  0E58  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5709  0E5D  00C1               	movwf	?_scale
  5710  0E5E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5711  0E63  00C2               	movwf	?_scale+1
  5712  0E64  160A  118A  2000   	fcall	stringdir
  5713  0E67  00C3               	movwf	?_scale+2
  5714  0E68  0008               	return
  5715  0E69                     __end_of_scale:	
  5716  0E69                     __ptext558:	
  5717 ;; =============== function ___llmod ends ============
  5718                           
  5719                           
  5720 ;; *************** function ___awdiv *****************
  5721 ;; Defined at:
  5722 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  5723 ;; Parameters:    Size  Location     Type
  5724 ;;  divisor         2    8[COMMON] int 
  5725 ;;  dividend        2   10[COMMON] int 
  5726 ;; Auto vars:     Size  Location     Type
  5727 ;;  quotient        2    2[BANK0 ] int 
  5728 ;;  sign            1    1[BANK0 ] unsigned char 
  5729 ;;  counter         1    0[BANK0 ] unsigned char 
  5730 ;; Return value:  Size  Location     Type
  5731 ;;                  2    8[COMMON] int 
  5732 ;; Registers used:
  5733 ;;		wreg, status,2, status,0
  5734 ;; Tracked objects:
  5735 ;;		On entry : 40/20
  5736 ;;		On exit  : 60/0
  5737 ;;		Unchanged: FFF9F/0
  5738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5739 ;;      Params:         4       0       0       0       0
  5740 ;;      Locals:         0       4       0       0       0
  5741 ;;      Temps:          0       0       0       0       0
  5742 ;;      Totals:         4       4       0       0       0
  5743 ;;Total ram usage:        8 bytes
  5744 ;; Hardware stack levels used:    1
  5745 ;; Hardware stack levels required when called:    1
  5746 ;; This function calls:
  5747 ;;		Nothing
  5748 ;; This function is called by:
  5749 ;;		_scale
  5750 ;;		_printf
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753  0E69                     ___awdiv:	
  5754                           
  5755                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5756  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  5757  0E6A  01A1               	clrf	___awdiv@sign
  5758  0E6B  1FF9               	btfss	___awdiv@divisor+1,7
  5759  0E6C  2E74               	goto	l6374
  5760  0E6D  09F8               	comf	___awdiv@divisor,f
  5761  0E6E  09F9               	comf	___awdiv@divisor+1,f
  5762  0E6F  0AF8               	incf	___awdiv@divisor,f
  5763  0E70  1903               	skipnz
  5764  0E71  0AF9               	incf	___awdiv@divisor+1,f
  5765  0E72  01A1               	clrf	___awdiv@sign
  5766  0E73  0AA1               	incf	___awdiv@sign,f
  5767  0E74                     l6374:	
  5768  0E74  1FFB               	btfss	___awdiv@dividend+1,7
  5769  0E75  2E7D               	goto	l6380
  5770  0E76  09FA               	comf	___awdiv@dividend,f
  5771  0E77  09FB               	comf	___awdiv@dividend+1,f
  5772  0E78  0AFA               	incf	___awdiv@dividend,f
  5773  0E79  1903               	skipnz
  5774  0E7A  0AFB               	incf	___awdiv@dividend+1,f
  5775  0E7B  3001               	movlw	1
  5776  0E7C  06A1               	xorwf	___awdiv@sign,f
  5777  0E7D                     l6380:	
  5778  0E7D  01A2               	clrf	___awdiv@quotient
  5779  0E7E  01A3               	clrf	___awdiv@quotient+1
  5780  0E7F  0879               	movf	___awdiv@divisor+1,w
  5781  0E80  0478               	iorwf	___awdiv@divisor,w
  5782  0E81  1903               	skipnz
  5783  0E82  2EA2               	goto	l6402
  5784  0E83  01A0               	clrf	___awdiv@counter
  5785  0E84                     L15:	
  5786  0E84  0AA0               	incf	___awdiv@counter,f
  5787  0E85  1BF9               	btfsc	___awdiv@divisor+1,7
  5788  0E86  2E8B               	goto	l6390
  5789  0E87  1003               	clrc
  5790  0E88  0DF8               	rlf	___awdiv@divisor,f
  5791  0E89  0DF9               	rlf	___awdiv@divisor+1,f
  5792  0E8A  2E84               	goto	L15
  5793  0E8B                     l6390:	
  5794  0E8B  1003               	clrc
  5795  0E8C  0DA2               	rlf	___awdiv@quotient,f
  5796  0E8D  0DA3               	rlf	___awdiv@quotient+1,f
  5797  0E8E  0879               	movf	___awdiv@divisor+1,w
  5798  0E8F  027B               	subwf	___awdiv@dividend+1,w
  5799  0E90  1D03               	skipz
  5800  0E91  2E94               	goto	u2475
  5801  0E92  0878               	movf	___awdiv@divisor,w
  5802  0E93  027A               	subwf	___awdiv@dividend,w
  5803  0E94                     u2475:	
  5804  0E94  1C03               	skipc
  5805  0E95  2E9E               	goto	L16
  5806  0E96  0878               	movf	___awdiv@divisor,w
  5807  0E97  02FA               	subwf	___awdiv@dividend,f
  5808  0E98  0879               	movf	___awdiv@divisor+1,w
  5809  0E99  1C03               	skipc
  5810  0E9A  03FB               	decf	___awdiv@dividend+1,f
  5811  0E9B  02FB               	subwf	___awdiv@dividend+1,f
  5812  0E9C  1422               	bsf	___awdiv@quotient,0
  5813  0E9D  1003               	clrc
  5814  0E9E                     L16:	
  5815  0E9E  0CF9               	rrf	___awdiv@divisor+1,f
  5816  0E9F  0CF8               	rrf	___awdiv@divisor,f
  5817  0EA0  0BA0               	decfsz	___awdiv@counter,f
  5818  0EA1  2E8B               	goto	l6390
  5819  0EA2                     l6402:	
  5820  0EA2  0821               	movf	___awdiv@sign,w
  5821  0EA3  1903               	btfsc	3,2
  5822  0EA4  2EAA               	goto	l6406
  5823  0EA5  09A2               	comf	___awdiv@quotient,f
  5824  0EA6  09A3               	comf	___awdiv@quotient+1,f
  5825  0EA7  0AA2               	incf	___awdiv@quotient,f
  5826  0EA8  1903               	skipnz
  5827  0EA9  0AA3               	incf	___awdiv@quotient+1,f
  5828  0EAA                     l6406:	
  5829  0EAA  0823               	movf	___awdiv@quotient+1,w
  5830  0EAB  00F9               	movwf	?___awdiv+1
  5831  0EAC  0822               	movf	___awdiv@quotient,w
  5832  0EAD  00F8               	movwf	?___awdiv
  5833  0EAE  0008               	return
  5834  0EAF                     __end_of___awdiv:	
  5835  0EAF                     __ptext553:	
  5836 ;; =============== function _lcd_put_byte ends ============
  5837                           
  5838                           
  5839 ;; *************** function ___awmod *****************
  5840 ;; Defined at:
  5841 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  5842 ;; Parameters:    Size  Location     Type
  5843 ;;  divisor         2    2[COMMON] int 
  5844 ;;  dividend        2    4[COMMON] int 
  5845 ;; Auto vars:     Size  Location     Type
  5846 ;;  sign            1    7[COMMON] unsigned char 
  5847 ;;  counter         1    6[COMMON] unsigned char 
  5848 ;; Return value:  Size  Location     Type
  5849 ;;                  2    2[COMMON] int 
  5850 ;; Registers used:
  5851 ;;		wreg, status,2, status,0
  5852 ;; Tracked objects:
  5853 ;;		On entry : 60/0
  5854 ;;		On exit  : 60/0
  5855 ;;		Unchanged: FFF9F/0
  5856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5857 ;;      Params:         4       0       0       0       0
  5858 ;;      Locals:         2       0       0       0       0
  5859 ;;      Temps:          0       0       0       0       0
  5860 ;;      Totals:         6       0       0       0       0
  5861 ;;Total ram usage:        6 bytes
  5862 ;; Hardware stack levels used:    1
  5863 ;; Hardware stack levels required when called:    1
  5864 ;; This function calls:
  5865 ;;		Nothing
  5866 ;; This function is called by:
  5867 ;;		_scale
  5868 ;; This function uses a non-reentrant model
  5869 ;;
  5870  0EAF                     ___awmod:	
  5871                           
  5872                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5873  0EAF  01F7               	clrf	___awmod@sign
  5874  0EB0  1FF5               	btfss	___awmod@dividend+1,7
  5875  0EB1  2EB9               	goto	l6492
  5876  0EB2  09F4               	comf	___awmod@dividend,f
  5877  0EB3  09F5               	comf	___awmod@dividend+1,f
  5878  0EB4  0AF4               	incf	___awmod@dividend,f
  5879  0EB5  1903               	skipnz
  5880  0EB6  0AF5               	incf	___awmod@dividend+1,f
  5881  0EB7  01F7               	clrf	___awmod@sign
  5882  0EB8  0AF7               	incf	___awmod@sign,f
  5883  0EB9                     l6492:	
  5884  0EB9  1FF3               	btfss	___awmod@divisor+1,7
  5885  0EBA  2EC0               	goto	l6496
  5886  0EBB  09F2               	comf	___awmod@divisor,f
  5887  0EBC  09F3               	comf	___awmod@divisor+1,f
  5888  0EBD  0AF2               	incf	___awmod@divisor,f
  5889  0EBE  1903               	skipnz
  5890  0EBF  0AF3               	incf	___awmod@divisor+1,f
  5891  0EC0                     l6496:	
  5892  0EC0  0873               	movf	___awmod@divisor+1,w
  5893  0EC1  0472               	iorwf	___awmod@divisor,w
  5894  0EC2  1903               	skipnz
  5895  0EC3  2EDF               	goto	l6512
  5896  0EC4  01F6               	clrf	___awmod@counter
  5897  0EC5                     L8:	
  5898  0EC5  0AF6               	incf	___awmod@counter,f
  5899  0EC6  1BF3               	btfsc	___awmod@divisor+1,7
  5900  0EC7  2ECC               	goto	l6504
  5901  0EC8  1003               	clrc
  5902  0EC9  0DF2               	rlf	___awmod@divisor,f
  5903  0ECA  0DF3               	rlf	___awmod@divisor+1,f
  5904  0ECB  2EC5               	goto	L8
  5905  0ECC                     l6504:	
  5906  0ECC  0873               	movf	___awmod@divisor+1,w
  5907  0ECD  0275               	subwf	___awmod@dividend+1,w
  5908  0ECE  1D03               	skipz
  5909  0ECF  2ED2               	goto	u2665
  5910  0ED0  0872               	movf	___awmod@divisor,w
  5911  0ED1  0274               	subwf	___awmod@dividend,w
  5912  0ED2                     u2665:	
  5913  0ED2  1C03               	skipc
  5914  0ED3  2EDB               	goto	L9
  5915  0ED4  0872               	movf	___awmod@divisor,w
  5916  0ED5  02F4               	subwf	___awmod@dividend,f
  5917  0ED6  0873               	movf	___awmod@divisor+1,w
  5918  0ED7  1C03               	skipc
  5919  0ED8  03F5               	decf	___awmod@dividend+1,f
  5920  0ED9  02F5               	subwf	___awmod@dividend+1,f
  5921  0EDA  1003               	clrc
  5922  0EDB                     L9:	
  5923  0EDB  0CF3               	rrf	___awmod@divisor+1,f
  5924  0EDC  0CF2               	rrf	___awmod@divisor,f
  5925  0EDD  0BF6               	decfsz	___awmod@counter,f
  5926  0EDE  2ECC               	goto	l6504
  5927  0EDF                     l6512:	
  5928  0EDF  0877               	movf	___awmod@sign,w
  5929  0EE0  1903               	btfsc	3,2
  5930  0EE1  2EE7               	goto	l6516
  5931  0EE2  09F4               	comf	___awmod@dividend,f
  5932  0EE3  09F5               	comf	___awmod@dividend+1,f
  5933  0EE4  0AF4               	incf	___awmod@dividend,f
  5934  0EE5  1903               	skipnz
  5935  0EE6  0AF5               	incf	___awmod@dividend+1,f
  5936  0EE7                     l6516:	
  5937  0EE7  0875               	movf	___awmod@dividend+1,w
  5938  0EE8  00F3               	movwf	?___awmod+1
  5939  0EE9  0874               	movf	___awmod@dividend,w
  5940  0EEA  00F2               	movwf	?___awmod
  5941  0EEB  0008               	return
  5942  0EEC                     __end_of___awmod:	
  5943  0EEC                     __ptext548:	
  5944 ;; =============== function ___lwtoft ends ============
  5945                           
  5946                           
  5947 ;; *************** function ___ftmul *****************
  5948 ;; Defined at:
  5949 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  5950 ;; Parameters:    Size  Location     Type
  5951 ;;  f1              3   18[BANK0 ] float 
  5952 ;;  f2              3   21[BANK0 ] float 
  5953 ;; Auto vars:     Size  Location     Type
  5954 ;;  f3_as_produc    3   28[BANK0 ] unsigned um
  5955 ;;  sign            1   32[BANK0 ] unsigned char 
  5956 ;;  cntr            1   31[BANK0 ] unsigned char 
  5957 ;;  exp             1   27[BANK0 ] unsigned char 
  5958 ;; Return value:  Size  Location     Type
  5959 ;;                  3   18[BANK0 ] float 
  5960 ;; Registers used:
  5961 ;;		wreg, status,2, status,0, pclath, cstack
  5962 ;; Tracked objects:
  5963 ;;		On entry : 60/0
  5964 ;;		On exit  : 60/0
  5965 ;;		Unchanged: FFF9F/0
  5966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5967 ;;      Params:         0       6       0       0       0
  5968 ;;      Locals:         0       6       0       0       0
  5969 ;;      Temps:          0       3       0       0       0
  5970 ;;      Totals:         0      15       0       0       0
  5971 ;;Total ram usage:       15 bytes
  5972 ;; Hardware stack levels used:    1
  5973 ;; Hardware stack levels required when called:    2
  5974 ;; This function calls:
  5975 ;;		___ftpack
  5976 ;; This function is called by:
  5977 ;;		_main
  5978 ;;		_fround
  5979 ;;		_scale
  5980 ;;		_printf
  5981 ;; This function uses a non-reentrant model
  5982 ;;
  5983  0EEC                     ___ftmul:	
  5984                           
  5985                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5986  0EEC  0832               	movf	___ftmul@f1,w
  5987  0EED  00B8               	movwf	??___ftmul
  5988  0EEE  0833               	movf	___ftmul@f1+1,w
  5989  0EEF  00B9               	movwf	??___ftmul+1
  5990  0EF0  0834               	movf	___ftmul@f1+2,w
  5991  0EF1  00BA               	movwf	??___ftmul+2
  5992  0EF2  1003               	clrc
  5993  0EF3  0D39               	rlf	??___ftmul+1,w
  5994  0EF4  0D3A               	rlf	??___ftmul+2,w
  5995  0EF5  00BB               	movwf	___ftmul@exp
  5996  0EF6  08BB               	movf	___ftmul@exp,f
  5997  0EF7  1D03               	skipz
  5998  0EF8  2EFD               	goto	l6698
  5999  0EF9  01B2               	clrf	?___ftmul
  6000  0EFA  01B3               	clrf	?___ftmul+1
  6001  0EFB  01B4               	clrf	?___ftmul+2
  6002  0EFC  0008               	return
  6003  0EFD                     l6698:	
  6004  0EFD  0835               	movf	___ftmul@f2,w
  6005  0EFE  00B8               	movwf	??___ftmul
  6006  0EFF  0836               	movf	___ftmul@f2+1,w
  6007  0F00  00B9               	movwf	??___ftmul+1
  6008  0F01  0837               	movf	___ftmul@f2+2,w
  6009  0F02  00BA               	movwf	??___ftmul+2
  6010  0F03  1003               	clrc
  6011  0F04  0D39               	rlf	??___ftmul+1,w
  6012  0F05  0D3A               	rlf	??___ftmul+2,w
  6013  0F06  00C0               	movwf	___ftmul@sign
  6014  0F07  08C0               	movf	___ftmul@sign,f
  6015  0F08  1D03               	skipz
  6016  0F09  2F0E               	goto	l6704
  6017  0F0A  01B2               	clrf	?___ftmul
  6018  0F0B  01B3               	clrf	?___ftmul+1
  6019  0F0C  01B4               	clrf	?___ftmul+2
  6020  0F0D  0008               	return
  6021  0F0E                     l6704:	
  6022  0F0E  0840               	movf	___ftmul@sign,w
  6023  0F0F  3E7B               	addlw	123
  6024  0F10  07BB               	addwf	___ftmul@exp,f
  6025  0F11  0834               	movf	___ftmul@f1+2,w
  6026  0F12  00C0               	movwf	___ftmul@sign
  6027  0F13  0837               	movf	___ftmul@f2+2,w
  6028  0F14  06C0               	xorwf	___ftmul@sign,f
  6029  0F15  3080               	movlw	128
  6030  0F16  05C0               	andwf	___ftmul@sign,f
  6031  0F17  3007               	movlw	7
  6032  0F18  17B3               	bsf	___ftmul@f1+1,7
  6033  0F19  17B6               	bsf	___ftmul@f2+1,7
  6034  0F1A  01B7               	clrf	___ftmul@f2+2
  6035  0F1B  01BC               	clrf	___ftmul@f3_as_product
  6036  0F1C  01BD               	clrf	___ftmul@f3_as_product+1
  6037  0F1D  01BE               	clrf	___ftmul@f3_as_product+2
  6038  0F1E  00BF               	movwf	___ftmul@cntr
  6039  0F1F                     l6722:	
  6040  0F1F  1C32               	btfss	___ftmul@f1,0
  6041  0F20  2F29               	goto	l6726
  6042  0F21  0835               	movf	___ftmul@f2,w
  6043  0F22  27D6  120A  158A   	fcall	PL19	;call to abstracted procedure
  6044  0F25  1803               	skipnc
  6045  0F26  0A37               	incf	___ftmul@f2+2,w
  6046  0F27  1D03               	btfss	3,2
  6047  0F28  07BE               	addwf	___ftmul@f3_as_product+2,f
  6048  0F29                     l6726:	
  6049  0F29  1003               	clrc
  6050  0F2A  0CB4               	rrf	___ftmul@f1+2,f
  6051  0F2B  0CB3               	rrf	___ftmul@f1+1,f
  6052  0F2C  0CB2               	rrf	___ftmul@f1,f
  6053  0F2D  1003               	clrc
  6054  0F2E  0DB5               	rlf	___ftmul@f2,f
  6055  0F2F  0DB6               	rlf	___ftmul@f2+1,f
  6056  0F30  0DB7               	rlf	___ftmul@f2+2,f
  6057  0F31  0BBF               	decfsz	___ftmul@cntr,f
  6058  0F32  2F1F               	goto	l6722
  6059  0F33  3009               	movlw	9
  6060  0F34  00BF               	movwf	___ftmul@cntr
  6061  0F35                     l6734:	
  6062  0F35  1C32               	btfss	___ftmul@f1,0
  6063  0F36  2F3F               	goto	l6738
  6064  0F37  0835               	movf	___ftmul@f2,w
  6065  0F38  27D6  120A  158A   	fcall	PL19	;call to abstracted procedure
  6066  0F3B  1803               	skipnc
  6067  0F3C  0A37               	incf	___ftmul@f2+2,w
  6068  0F3D  1D03               	btfss	3,2
  6069  0F3E  07BE               	addwf	___ftmul@f3_as_product+2,f
  6070  0F3F                     l6738:	
  6071  0F3F  1003               	clrc
  6072  0F40  0CB4               	rrf	___ftmul@f1+2,f
  6073  0F41  0CB3               	rrf	___ftmul@f1+1,f
  6074  0F42  0CB2               	rrf	___ftmul@f1,f
  6075  0F43  1003               	clrc
  6076  0F44  0CBE               	rrf	___ftmul@f3_as_product+2,f
  6077  0F45  0CBD               	rrf	___ftmul@f3_as_product+1,f
  6078  0F46  0CBC               	rrf	___ftmul@f3_as_product,f
  6079  0F47  0BBF               	decfsz	___ftmul@cntr,f
  6080  0F48  2F35               	goto	l6734
  6081  0F49  083C               	movf	___ftmul@f3_as_product,w
  6082  0F4A  00F2               	movwf	?___ftpack
  6083  0F4B  083D               	movf	___ftmul@f3_as_product+1,w
  6084  0F4C  00F3               	movwf	?___ftpack+1
  6085  0F4D  083E               	movf	___ftmul@f3_as_product+2,w
  6086  0F4E  00F4               	movwf	?___ftpack+2
  6087  0F4F  083B               	movf	___ftmul@exp,w
  6088  0F50  00F5               	movwf	?___ftpack+3
  6089  0F51  0840               	movf	___ftmul@sign,w
  6090  0F52  00F6               	movwf	?___ftpack+4
  6091  0F53  2769               	fcall	___ftpack
  6092  0F54  0872               	movf	?___ftpack,w
  6093  0F55  00B2               	movwf	?___ftmul
  6094  0F56  0873               	movf	?___ftpack+1,w
  6095  0F57  00B3               	movwf	?___ftmul+1
  6096  0F58  0874               	movf	?___ftpack+2,w
  6097  0F59  00B4               	movwf	?___ftmul+2
  6098  0F5A  0008               	return
  6099  0F5B                     __end_of___ftmul:	
  6100  0F5B                     __ptext564:	
  6101 ;; =============== function ___wmul ends ============
  6102                           
  6103                           
  6104 ;; *************** function ___bmul *****************
  6105 ;; Defined at:
  6106 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  6107 ;; Parameters:    Size  Location     Type
  6108 ;;  multiplier      1    wreg     unsigned char 
  6109 ;;  multiplicand    1   11[COMMON] unsigned char 
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;  multiplier      1    1[BANK0 ] unsigned char 
  6112 ;;  product         1    0[BANK0 ] unsigned char 
  6113 ;; Return value:  Size  Location     Type
  6114 ;;                  1    wreg      unsigned char 
  6115 ;; Registers used:
  6116 ;;		wreg, status,2, status,0
  6117 ;; Tracked objects:
  6118 ;;		On entry : 60/0
  6119 ;;		On exit  : 60/0
  6120 ;;		Unchanged: FFF9F/0
  6121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6122 ;;      Params:         1       0       0       0       0
  6123 ;;      Locals:         0       2       0       0       0
  6124 ;;      Temps:          0       0       0       0       0
  6125 ;;      Totals:         1       2       0       0       0
  6126 ;;Total ram usage:        3 bytes
  6127 ;; Hardware stack levels used:    1
  6128 ;; Hardware stack levels required when called:    1
  6129 ;; This function calls:
  6130 ;;		Nothing
  6131 ;; This function is called by:
  6132 ;;		_fround
  6133 ;;		_scale
  6134 ;; This function uses a non-reentrant model
  6135 ;;
  6136  0F5B                     ___bmul:	
  6137                           
  6138                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6139                           ;___bmul@multiplier stored from wreg
  6140  0F5B  00A1               	movwf	___bmul@multiplier
  6141  0F5C  01A0               	clrf	___bmul@product
  6142  0F5D                     l6228:	
  6143  0F5D  087B               	movf	___bmul@multiplicand,w
  6144  0F5E  1821               	btfsc	___bmul@multiplier,0
  6145  0F5F  07A0               	addwf	___bmul@product,f
  6146  0F60  1003               	clrc
  6147  0F61  0DFB               	rlf	___bmul@multiplicand,f
  6148  0F62  1003               	clrc
  6149  0F63  0CA1               	rrf	___bmul@multiplier,f
  6150  0F64  08A1               	movf	___bmul@multiplier,f
  6151  0F65  1D03               	skipz
  6152  0F66  2F5D               	goto	l6228
  6153  0F67  0820               	movf	___bmul@product,w
  6154  0F68  0008               	return
  6155  0F69                     __end_of___bmul:	
  6156  0F69                     __ptext560:	
  6157 ;; =============== function ___fttol ends ============
  6158                           
  6159                           
  6160 ;; *************** function ___ftpack *****************
  6161 ;; Defined at:
  6162 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  6163 ;; Parameters:    Size  Location     Type
  6164 ;;  arg             3    2[COMMON] unsigned um
  6165 ;;  exp             1    5[COMMON] unsigned char 
  6166 ;;  sign            1    6[COMMON] unsigned char 
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;		None
  6169 ;; Return value:  Size  Location     Type
  6170 ;;                  3    2[COMMON] float 
  6171 ;; Registers used:
  6172 ;;		wreg, status,2, status,0
  6173 ;; Tracked objects:
  6174 ;;		On entry : 60/0
  6175 ;;		On exit  : 60/0
  6176 ;;		Unchanged: FFF9F/0
  6177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6178 ;;      Params:         5       0       0       0       0
  6179 ;;      Locals:         0       0       0       0       0
  6180 ;;      Temps:          3       0       0       0       0
  6181 ;;      Totals:         8       0       0       0       0
  6182 ;;Total ram usage:        8 bytes
  6183 ;; Hardware stack levels used:    1
  6184 ;; Hardware stack levels required when called:    1
  6185 ;; This function calls:
  6186 ;;		Nothing
  6187 ;; This function is called by:
  6188 ;;		___ftadd
  6189 ;;		___ftdiv
  6190 ;;		___ftmul
  6191 ;;		___lwtoft
  6192 ;;		___lltoft
  6193 ;; This function uses a non-reentrant model
  6194 ;;
  6195  0F69                     ___ftpack:	
  6196                           
  6197                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6198  0F69  0875               	movf	___ftpack@exp,w
  6199  0F6A  1903               	btfsc	3,2
  6200  0F6B  2F71               	goto	l6304
  6201  0F6C  0874               	movf	___ftpack@arg+2,w
  6202  0F6D  0473               	iorwf	___ftpack@arg+1,w
  6203  0F6E  0472               	iorwf	___ftpack@arg,w
  6204  0F6F  1D03               	skipz
  6205  0F70  2F7A               	goto	l6310
  6206  0F71                     l6304:	
  6207  0F71  01F2               	clrf	?___ftpack
  6208  0F72  01F3               	clrf	?___ftpack+1
  6209  0F73  01F4               	clrf	?___ftpack+2
  6210  0F74  0008               	return
  6211  0F75                     l6308:	
  6212  0F75  0AF5               	incf	___ftpack@exp,f
  6213  0F76  1003               	clrc
  6214  0F77  0CF4               	rrf	___ftpack@arg+2,f
  6215  0F78  0CF3               	rrf	___ftpack@arg+1,f
  6216  0F79  0CF2               	rrf	___ftpack@arg,f
  6217  0F7A                     l6310:	
  6218  0F7A  30FE               	movlw	254
  6219  0F7B  0574               	andwf	___ftpack@arg+2,w
  6220  0F7C  1903               	btfsc	3,2
  6221  0F7D  2F89               	goto	l6314
  6222  0F7E  2F75               	goto	l6308
  6223  0F7F                     l6312:	
  6224  0F7F  0AF5               	incf	___ftpack@exp,f
  6225  0F80  0AF2               	incf	___ftpack@arg,f
  6226  0F81  1903               	skipnz
  6227  0F82  0AF3               	incf	___ftpack@arg+1,f
  6228  0F83  1903               	skipnz
  6229  0F84  0AF4               	incf	___ftpack@arg+2,f
  6230  0F85  1003               	clrc
  6231  0F86  0CF4               	rrf	___ftpack@arg+2,f
  6232  0F87  0CF3               	rrf	___ftpack@arg+1,f
  6233  0F88  0CF2               	rrf	___ftpack@arg,f
  6234  0F89                     l6314:	
  6235  0F89  30FF               	movlw	255
  6236  0F8A  0574               	andwf	___ftpack@arg+2,w
  6237  0F8B  1903               	btfsc	3,2
  6238  0F8C  2F93               	goto	l6318
  6239  0F8D  2F7F               	goto	l6312
  6240  0F8E                     l6316:	
  6241  0F8E  03F5               	decf	___ftpack@exp,f
  6242  0F8F  1003               	clrc
  6243  0F90  0DF2               	rlf	___ftpack@arg,f
  6244  0F91  0DF3               	rlf	___ftpack@arg+1,f
  6245  0F92  0DF4               	rlf	___ftpack@arg+2,f
  6246  0F93                     l6318:	
  6247  0F93  1FF3               	btfss	___ftpack@arg+1,7
  6248  0F94  2F8E               	goto	l6316
  6249  0F95  1C75               	btfss	___ftpack@exp,0
  6250  0F96  13F3               	bcf	___ftpack@arg+1,7
  6251  0F97  1003               	clrc
  6252  0F98  0CF5               	rrf	___ftpack@exp,f
  6253  0F99  0875               	movf	___ftpack@exp,w
  6254  0F9A  00F9               	movwf	??___ftpack+2
  6255  0F9B  01F8               	clrf	??___ftpack+1
  6256  0F9C  01F7               	clrf	??___ftpack
  6257  0F9D  0877               	movf	??___ftpack,w
  6258  0F9E  04F2               	iorwf	___ftpack@arg,f
  6259  0F9F  0878               	movf	??___ftpack+1,w
  6260  0FA0  04F3               	iorwf	___ftpack@arg+1,f
  6261  0FA1  0879               	movf	??___ftpack+2,w
  6262  0FA2  04F4               	iorwf	___ftpack@arg+2,f
  6263  0FA3  0876               	movf	___ftpack@sign,w
  6264  0FA4  1D03               	skipz
  6265  0FA5  17F4               	bsf	___ftpack@arg+2,7
  6266  0FA6  0008               	return
  6267  0FA7                     __end_of___ftpack:	
  6268  0FA7                     PL8:	
  6269  0FA7  0872               	movf	?___awmod,w
  6270  0FA8  00C4               	movwf	??_scale
  6271  0FA9  0873               	movf	?___awmod+1,w
  6272  0FAA  00C5               	movwf	??_scale+1
  6273  0FAB  0844               	movf	??_scale,w
  6274  0FAC  0744               	addwf	??_scale,w
  6275  0FAD  0744               	addwf	??_scale,w
  6276  0FAE  0008               	return
  6277  0FAF                     PL9:	
  6278  0FAF  0878               	movf	?___awdiv,w
  6279  0FB0  00C6               	movwf	??_scale+2
  6280  0FB1  0879               	movf	?___awdiv+1,w
  6281  0FB2  00C7               	movwf	??_scale+3
  6282  0FB3  0846               	movf	??_scale+2,w
  6283  0FB4  0746               	addwf	??_scale+2,w
  6284  0FB5  0746               	addwf	??_scale+2,w
  6285  0FB6  0008               	return
  6286  0FB7                     PL10:	
  6287  0FB7  0832               	movf	?___ftmul,w
  6288  0FB8  00C8               	movwf	_scale$4108
  6289  0FB9  0833               	movf	?___ftmul+1,w
  6290  0FBA  00C9               	movwf	_scale$4108+1
  6291  0FBB  0834               	movf	?___ftmul+2,w
  6292  0FBC  00CA               	movwf	_scale$4108+2
  6293  0FBD  300A               	movlw	10
  6294  0FBE  00F2               	movwf	?___awmod
  6295  0FBF  01F3               	clrf	?___awmod+1
  6296  0FC0  084B               	movf	scale@scl,w
  6297  0FC1  00F4               	movwf	?___awmod+2
  6298  0FC2  01F5               	clrf	?___awmod+3
  6299  0FC3  0008               	return
  6300  0FC4                     PL11:	
  6301  0FC4  0832               	movf	?___ftmul,w
  6302  0FC5  00C1               	movwf	?_scale
  6303  0FC6  0833               	movf	?___ftmul+1,w
  6304  0FC7  00C2               	movwf	?_scale+1
  6305  0FC8  0834               	movf	?___ftmul+2,w
  6306  0FC9  00C3               	movwf	?_scale+2
  6307  0FCA  0008               	return
  6308  0FCB                     PL15:	
  6309  0FCB  00F8               	movwf	?___awdiv
  6310  0FCC  01F9               	clrf	?___awdiv+1
  6311  0FCD  084B               	movf	scale@scl,w
  6312  0FCE  00F4               	movwf	?___awmod+2
  6313  0FCF  01F5               	clrf	?___awmod+3
  6314  0FD0  1BF4               	btfsc	?___awmod+2,7
  6315  0FD1  03F5               	decf	?___awmod+3,f
  6316  0FD2  3064               	movlw	100
  6317  0FD3  00F2               	movwf	?___awmod
  6318  0FD4  01F3               	clrf	?___awmod+1
  6319  0FD5  0008               	return
  6320  0FD6                     PL19:	
  6321  0FD6  07BC               	addwf	___ftmul@f3_as_product,f
  6322  0FD7  0836               	movf	___ftmul@f2+1,w
  6323  0FD8  1103               	clrz
  6324  0FD9  1803               	skipnc
  6325  0FDA  0A36               	incf	___ftmul@f2+1,w
  6326  0FDB  1D03               	btfss	3,2
  6327  0FDC  07BD               	addwf	___ftmul@f3_as_product+1,f
  6328  0FDD  0837               	movf	___ftmul@f2+2,w
  6329  0FDE  1103               	clrz
  6330  0FDF  0008               	return
  6331  0FE0                     PL23:	
  6332  0FE0  00B4               	movwf	?___ftmul+2
  6333  0FE1  0848               	movf	_scale$4108,w
  6334  0FE2  00B5               	movwf	?___ftmul+3
  6335  0FE3  0849               	movf	_scale$4108+1,w
  6336  0FE4  00B6               	movwf	?___ftmul+4
  6337  0FE5  084A               	movf	_scale$4108+2,w
  6338  0FE6  00B7               	movwf	?___ftmul+5
  6339  0FE7  0008               	return
  6340  0FE8                     PL24:	
  6341  0FE8  00B4               	movwf	?___ftmul+2
  6342  0FE9  300A               	movlw	10
  6343  0FEA  00F8               	movwf	?___awdiv
  6344  0FEB  01F9               	clrf	?___awdiv+1
  6345  0FEC  084B               	movf	scale@scl,w
  6346  0FED  00FA               	movwf	?___awdiv+2
  6347  0FEE  01FB               	clrf	?___awdiv+3
  6348  0FEF  0008               	return
  6349  0FF0                     PL25:	
  6350  0FF0  0878               	movf	?___awdiv,w
  6351  0FF1  00C4               	movwf	??_scale
  6352  0FF2  0879               	movf	?___awdiv+1,w
  6353  0FF3  00C5               	movwf	??_scale+1
  6354  0FF4  0844               	movf	??_scale,w
  6355  0FF5  0744               	addwf	??_scale,w
  6356  0FF6  0744               	addwf	??_scale,w
  6357  0FF7  0008               	return
  6358  0FF8                     PL26:	
  6359  0FF8  00B4               	movwf	?___ftmul+2
  6360  0FF9  3064               	movlw	100
  6361  0FFA  00F8               	movwf	?___awdiv
  6362  0FFB  01F9               	clrf	?___awdiv+1
  6363  0FFC  084B               	movf	scale@scl,w
  6364  0FFD  00FA               	movwf	?___awdiv+2
  6365  0FFE  01FB               	clrf	?___awdiv+3
  6366  0FFF  0008               	return
  6367                           
  6368                           	psect	text550
  6369  173E                     __ptext550:	
  6370 ;; =============== function ___ftdiv ends ============
  6371                           
  6372                           
  6373 ;; *************** function ___ftadd *****************
  6374 ;; Defined at:
  6375 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  6376 ;; Parameters:    Size  Location     Type
  6377 ;;  f1              3   33[BANK0 ] float 
  6378 ;;  f2              3   36[BANK0 ] float 
  6379 ;; Auto vars:     Size  Location     Type
  6380 ;;  exp1            1   44[BANK0 ] unsigned char 
  6381 ;;  exp2            1   43[BANK0 ] unsigned char 
  6382 ;;  sign            1   42[BANK0 ] unsigned char 
  6383 ;; Return value:  Size  Location     Type
  6384 ;;                  3   33[BANK0 ] float 
  6385 ;; Registers used:
  6386 ;;		wreg, status,2, status,0, pclath, cstack
  6387 ;; Tracked objects:
  6388 ;;		On entry : 60/0
  6389 ;;		On exit  : 60/0
  6390 ;;		Unchanged: FFF9F/0
  6391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6392 ;;      Params:         0       6       0       0       0
  6393 ;;      Locals:         0       3       0       0       0
  6394 ;;      Temps:          0       3       0       0       0
  6395 ;;      Totals:         0      12       0       0       0
  6396 ;;Total ram usage:       12 bytes
  6397 ;; Hardware stack levels used:    1
  6398 ;; Hardware stack levels required when called:    2
  6399 ;; This function calls:
  6400 ;;		___ftpack
  6401 ;; This function is called by:
  6402 ;;		_printf
  6403 ;;		___ftsub
  6404 ;; This function uses a non-reentrant model
  6405 ;;
  6406  173E                     ___ftadd:	
  6407                           
  6408                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6409  173E  0841               	movf	___ftadd@f1,w
  6410  173F  00C7               	movwf	??___ftadd
  6411  1740  0842               	movf	___ftadd@f1+1,w
  6412  1741  00C8               	movwf	??___ftadd+1
  6413  1742  0843               	movf	___ftadd@f1+2,w
  6414  1743  00C9               	movwf	??___ftadd+2
  6415  1744  1003               	clrc
  6416  1745  0D48               	rlf	??___ftadd+1,w
  6417  1746  0D49               	rlf	??___ftadd+2,w
  6418  1747  00CC               	movwf	___ftadd@exp1
  6419  1748  0844               	movf	___ftadd@f2,w
  6420  1749  00C7               	movwf	??___ftadd
  6421  174A  0845               	movf	___ftadd@f2+1,w
  6422  174B  00C8               	movwf	??___ftadd+1
  6423  174C  0846               	movf	___ftadd@f2+2,w
  6424  174D  00C9               	movwf	??___ftadd+2
  6425  174E  1003               	clrc
  6426  174F  0D48               	rlf	??___ftadd+1,w
  6427  1750  0D49               	rlf	??___ftadd+2,w
  6428  1751  00CB               	movwf	___ftadd@exp2
  6429  1752  084C               	movf	___ftadd@exp1,w
  6430  1753  1903               	btfsc	3,2
  6431  1754  2F61               	goto	l6578
  6432  1755  084B               	movf	___ftadd@exp2,w
  6433  1756  024C               	subwf	___ftadd@exp1,w
  6434  1757  084B               	movf	___ftadd@exp2,w
  6435  1758  1803               	skipnc
  6436  1759  2F69               	goto	L7
  6437  175A  00C7               	movwf	??___ftadd
  6438  175B  084C               	movf	___ftadd@exp1,w
  6439  175C  02C7               	subwf	??___ftadd,f
  6440  175D  3019               	movlw	25
  6441  175E  0247               	subwf	??___ftadd,w
  6442  175F  1C03               	skipc
  6443  1760  2F68               	goto	l6582
  6444  1761                     l6578:	
  6445  1761  0844               	movf	___ftadd@f2,w
  6446  1762  00C1               	movwf	?___ftadd
  6447  1763  0845               	movf	___ftadd@f2+1,w
  6448  1764  00C2               	movwf	?___ftadd+1
  6449  1765  0846               	movf	___ftadd@f2+2,w
  6450  1766  00C3               	movwf	?___ftadd+2
  6451  1767  0008               	return
  6452  1768                     l6582:	
  6453  1768  084B               	movf	___ftadd@exp2,w
  6454  1769                     L7:	
  6455  1769  1903               	btfsc	3,2
  6456  176A  0008               	return
  6457  176B  084C               	movf	___ftadd@exp1,w
  6458  176C  024B               	subwf	___ftadd@exp2,w
  6459  176D  1803               	skipnc
  6460  176E  2F77               	goto	l6588
  6461  176F  084C               	movf	___ftadd@exp1,w
  6462  1770  00C7               	movwf	??___ftadd
  6463  1771  084B               	movf	___ftadd@exp2,w
  6464  1772  02C7               	subwf	??___ftadd,f
  6465  1773  3019               	movlw	25
  6466  1774  0247               	subwf	??___ftadd,w
  6467  1775  1803               	btfsc	3,0
  6468  1776  0008               	return
  6469  1777                     l6588:	
  6470  1777  3006               	movlw	6
  6471  1778  00CA               	movwf	___ftadd@sign
  6472  1779  1BC3               	btfsc	___ftadd@f1+2,7
  6473  177A  17CA               	bsf	___ftadd@sign,7
  6474  177B  1BC6               	btfsc	___ftadd@f2+2,7
  6475  177C  174A               	bsf	___ftadd@sign,6
  6476  177D  17C2               	bsf	___ftadd@f1+1,7
  6477  177E  01C3               	clrf	___ftadd@f1+2
  6478  177F  17C5               	bsf	___ftadd@f2+1,7
  6479  1780  01C6               	clrf	___ftadd@f2+2
  6480  1781  084B               	movf	___ftadd@exp2,w
  6481  1782  024C               	subwf	___ftadd@exp1,w
  6482  1783  1803               	skipnc
  6483  1784  2F9E               	goto	l6610
  6484  1785                     l6600:	
  6485  1785  1003               	clrc
  6486  1786  0DC4               	rlf	___ftadd@f2,f
  6487  1787  0DC5               	rlf	___ftadd@f2+1,f
  6488  1788  0DC6               	rlf	___ftadd@f2+2,f
  6489  1789  03CB               	decf	___ftadd@exp2,f
  6490  178A  084B               	movf	___ftadd@exp2,w
  6491  178B  064C               	xorwf	___ftadd@exp1,w
  6492  178C  1903               	skipnz
  6493  178D  2F99               	goto	l6608
  6494  178E  03CA               	decf	___ftadd@sign,f
  6495  178F  084A               	movf	___ftadd@sign,w
  6496  1790  3907               	andlw	7
  6497  1791  1903               	btfsc	3,2
  6498  1792  2F99               	goto	l6608
  6499  1793  2F85               	goto	l6600
  6500  1794                     l6606:	
  6501  1794  1003               	clrc
  6502  1795  0CC3               	rrf	___ftadd@f1+2,f
  6503  1796  0CC2               	rrf	___ftadd@f1+1,f
  6504  1797  0CC1               	rrf	___ftadd@f1,f
  6505  1798  0ACC               	incf	___ftadd@exp1,f
  6506  1799                     l6608:	
  6507  1799  084C               	movf	___ftadd@exp1,w
  6508  179A  064B               	xorwf	___ftadd@exp2,w
  6509  179B  1903               	btfsc	3,2
  6510  179C  2FBA               	goto	l3333
  6511  179D  2F94               	goto	l6606
  6512  179E                     l6610:	
  6513  179E  084C               	movf	___ftadd@exp1,w
  6514  179F  024B               	subwf	___ftadd@exp2,w
  6515  17A0  1803               	skipnc
  6516  17A1  2FBA               	goto	l3333
  6517  17A2                     l6612:	
  6518  17A2  1003               	clrc
  6519  17A3  0DC1               	rlf	___ftadd@f1,f
  6520  17A4  0DC2               	rlf	___ftadd@f1+1,f
  6521  17A5  0DC3               	rlf	___ftadd@f1+2,f
  6522  17A6  03CC               	decf	___ftadd@exp1,f
  6523  17A7  084B               	movf	___ftadd@exp2,w
  6524  17A8  064C               	xorwf	___ftadd@exp1,w
  6525  17A9  1903               	skipnz
  6526  17AA  2FB6               	goto	l6620
  6527  17AB  03CA               	decf	___ftadd@sign,f
  6528  17AC  084A               	movf	___ftadd@sign,w
  6529  17AD  3907               	andlw	7
  6530  17AE  1903               	btfsc	3,2
  6531  17AF  2FB6               	goto	l6620
  6532  17B0  2FA2               	goto	l6612
  6533  17B1                     l6618:	
  6534  17B1  1003               	clrc
  6535  17B2  0CC6               	rrf	___ftadd@f2+2,f
  6536  17B3  0CC5               	rrf	___ftadd@f2+1,f
  6537  17B4  0CC4               	rrf	___ftadd@f2,f
  6538  17B5  0ACB               	incf	___ftadd@exp2,f
  6539  17B6                     l6620:	
  6540  17B6  084C               	movf	___ftadd@exp1,w
  6541  17B7  064B               	xorwf	___ftadd@exp2,w
  6542  17B8  1D03               	skipz
  6543  17B9  2FB1               	goto	l6618
  6544  17BA                     l3333:	
  6545  17BA  1FCA               	btfss	___ftadd@sign,7
  6546  17BB  2FC5               	goto	l6626
  6547  17BC  30FF               	movlw	255
  6548  17BD  06C1               	xorwf	___ftadd@f1,f
  6549  17BE  06C2               	xorwf	___ftadd@f1+1,f
  6550  17BF  06C3               	xorwf	___ftadd@f1+2,f
  6551  17C0  0AC1               	incf	___ftadd@f1,f
  6552  17C1  1903               	skipnz
  6553  17C2  0AC2               	incf	___ftadd@f1+1,f
  6554  17C3  1903               	skipnz
  6555  17C4  0AC3               	incf	___ftadd@f1+2,f
  6556  17C5                     l6626:	
  6557  17C5  1F4A               	btfss	___ftadd@sign,6
  6558  17C6  2FD0               	goto	l6632
  6559  17C7  30FF               	movlw	255
  6560  17C8  06C4               	xorwf	___ftadd@f2,f
  6561  17C9  06C5               	xorwf	___ftadd@f2+1,f
  6562  17CA  06C6               	xorwf	___ftadd@f2+2,f
  6563  17CB  0AC4               	incf	___ftadd@f2,f
  6564  17CC  1903               	skipnz
  6565  17CD  0AC5               	incf	___ftadd@f2+1,f
  6566  17CE  1903               	skipnz
  6567  17CF  0AC6               	incf	___ftadd@f2+2,f
  6568  17D0                     l6632:	
  6569  17D0  01CA               	clrf	___ftadd@sign
  6570  17D1  0841               	movf	___ftadd@f1,w
  6571  17D2  07C4               	addwf	___ftadd@f2,f
  6572  17D3  0842               	movf	___ftadd@f1+1,w
  6573  17D4  1103               	clrz
  6574  17D5  1803               	skipnc
  6575  17D6  0A42               	incf	___ftadd@f1+1,w
  6576  17D7  1D03               	btfss	3,2
  6577  17D8  07C5               	addwf	___ftadd@f2+1,f
  6578  17D9  0843               	movf	___ftadd@f1+2,w
  6579  17DA  1103               	clrz
  6580  17DB  1803               	skipnc
  6581  17DC  0A43               	incf	___ftadd@f1+2,w
  6582  17DD  1D03               	btfss	3,2
  6583  17DE  07C6               	addwf	___ftadd@f2+2,f
  6584  17DF  1FC6               	btfss	___ftadd@f2+2,7
  6585  17E0  2FEC               	goto	l6644
  6586  17E1  30FF               	movlw	255
  6587  17E2  06C4               	xorwf	___ftadd@f2,f
  6588  17E3  06C5               	xorwf	___ftadd@f2+1,f
  6589  17E4  06C6               	xorwf	___ftadd@f2+2,f
  6590  17E5  0AC4               	incf	___ftadd@f2,f
  6591  17E6  1903               	skipnz
  6592  17E7  0AC5               	incf	___ftadd@f2+1,f
  6593  17E8  1903               	skipnz
  6594  17E9  0AC6               	incf	___ftadd@f2+2,f
  6595  17EA  01CA               	clrf	___ftadd@sign
  6596  17EB  0ACA               	incf	___ftadd@sign,f
  6597  17EC                     l6644:	
  6598  17EC  0844               	movf	___ftadd@f2,w
  6599  17ED  00F2               	movwf	?___ftpack
  6600  17EE  0845               	movf	___ftadd@f2+1,w
  6601  17EF  00F3               	movwf	?___ftpack+1
  6602  17F0  0846               	movf	___ftadd@f2+2,w
  6603  17F1  00F4               	movwf	?___ftpack+2
  6604  17F2  084C               	movf	___ftadd@exp1,w
  6605  17F3  00F5               	movwf	?___ftpack+3
  6606  17F4  084A               	movf	___ftadd@sign,w
  6607  17F5  00F6               	movwf	?___ftpack+4
  6608  17F6  120A  158A  2769   	fcall	___ftpack
  6609  17F9  0872               	movf	?___ftpack,w
  6610  17FA  00C1               	movwf	?___ftadd
  6611  17FB  0873               	movf	?___ftpack+1,w
  6612  17FC  00C2               	movwf	?___ftadd+1
  6613  17FD  0874               	movf	?___ftpack+2,w
  6614  17FE  00C3               	movwf	?___ftadd+2
  6615  17FF  0008               	return
  6616  1800                     __end_of___ftadd:	
  6617                           
  6618                           	psect	text565
  6619  0871                     __ptext565:	
  6620 ;; =============== function ___bmul ends ============
  6621                           
  6622                           
  6623 ;; *************** function __div_to_l_ *****************
  6624 ;; Defined at:
  6625 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fldivl.c"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;  f1              3    2[COMMON] unsigned char 
  6628 ;;  f2              3    5[COMMON] unsigned char 
  6629 ;; Auto vars:     Size  Location     Type
  6630 ;;  quot            4    8[BANK0 ] unsigned long 
  6631 ;;  exp1            1   13[BANK0 ] unsigned char 
  6632 ;;  cntr            1   12[BANK0 ] unsigned char 
  6633 ;; Return value:  Size  Location     Type
  6634 ;;                  4    2[COMMON] unsigned long 
  6635 ;; Registers used:
  6636 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6637 ;; Tracked objects:
  6638 ;;		On entry : 0/0
  6639 ;;		On exit  : 60/0
  6640 ;;		Unchanged: FFF9F/0
  6641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6642 ;;      Params:         6       0       0       0       0
  6643 ;;      Locals:         0       6       0       0       0
  6644 ;;      Temps:          0       8       0       0       0
  6645 ;;      Totals:         6      14       0       0       0
  6646 ;;Total ram usage:       20 bytes
  6647 ;; Hardware stack levels used:    1
  6648 ;; Hardware stack levels required when called:    1
  6649 ;; This function calls:
  6650 ;;		Nothing
  6651 ;; This function is called by:
  6652 ;;		_printf
  6653 ;; This function uses a non-reentrant model
  6654 ;;
  6655  0871                     __div_to_l_:	
  6656                           
  6657                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  6658  0871  3072               	movlw	low __div_to_l_@f1
  6659  0872  0084               	movwf	4
  6660  0873  0800               	movf	0,w
  6661  0874  1283               	bcf	3,5	;RP0=0, select bank0
  6662  0875  1303               	bcf	3,6	;RP1=0, select bank0
  6663  0876  00A0               	movwf	??__div_to_l_
  6664  0877  0A84               	incf	4,f
  6665  0878  0800               	movf	0,w
  6666  0879  00A1               	movwf	??__div_to_l_+1
  6667  087A  0A84               	incf	4,f
  6668  087B  0800               	movf	0,w
  6669  087C  00A2               	movwf	??__div_to_l_+2
  6670  087D  0A84               	incf	4,f
  6671  087E  0800               	movf	0,w
  6672  087F  00A3               	movwf	??__div_to_l_+3
  6673  0880  1003               	clrc
  6674  0881  0D22               	rlf	??__div_to_l_+2,w
  6675  0882  0D23               	rlf	??__div_to_l_+3,w
  6676  0883  00AD               	movwf	__div_to_l_@exp1
  6677  0884  08AD               	movf	__div_to_l_@exp1,f
  6678  0885  1D03               	skipz
  6679  0886  288C               	goto	l6184
  6680  0887                     l6182:	
  6681  0887  01F2               	clrf	?__div_to_l_
  6682  0888  01F3               	clrf	?__div_to_l_+1
  6683  0889  01F4               	clrf	?__div_to_l_+2
  6684  088A  01F5               	clrf	?__div_to_l_+3
  6685  088B  0008               	return
  6686  088C                     l6184:	
  6687  088C  3075               	movlw	low __div_to_l_@f2
  6688  088D  212F  120A  158A   	fcall	PL3	;call to abstracted procedure
  6689  0890  1003               	clrc
  6690  0891  0D22               	rlf	??__div_to_l_+2,w
  6691  0892  0D23               	rlf	??__div_to_l_+3,w
  6692  0893  00AC               	movwf	__div_to_l_@cntr
  6693  0894  08AC               	movf	__div_to_l_@cntr,f
  6694  0895  1903               	btfsc	3,2
  6695  0896  2887               	goto	l6182
  6696  0897  3072               	movlw	low __div_to_l_@f1
  6697  0898  0084               	movwf	4
  6698  0899  3080               	movlw	128
  6699  089A  0A84               	incf	4,f
  6700  089B  0A84               	incf	4,f
  6701  089C  0480               	iorwf	0,f
  6702  089D  3072               	movlw	low __div_to_l_@f1
  6703  089E  0A84               	incf	4,f
  6704  089F  0084               	movwf	4
  6705  08A0  3075               	movlw	low __div_to_l_@f2
  6706  08A1  0A84               	incf	4,f
  6707  08A2  0A84               	incf	4,f
  6708  08A3  0A84               	incf	4,f
  6709  08A4  0180               	clrf	0
  6710  08A5  0084               	movwf	4
  6711  08A6  3080               	movlw	128
  6712  08A7  0A84               	incf	4,f
  6713  08A8  0A84               	incf	4,f
  6714  08A9  0480               	iorwf	0,f
  6715  08AA  3075               	movlw	low __div_to_l_@f2
  6716  08AB  0A84               	incf	4,f
  6717  08AC  0084               	movwf	4
  6718  08AD  307F               	movlw	127
  6719  08AE  0A84               	incf	4,f
  6720  08AF  0A84               	incf	4,f
  6721  08B0  0A84               	incf	4,f
  6722  08B1  0180               	clrf	0
  6723  08B2  01A8               	clrf	__div_to_l_@quot
  6724  08B3  01A9               	clrf	__div_to_l_@quot+1
  6725  08B4  01AA               	clrf	__div_to_l_@quot+2
  6726  08B5  01AB               	clrf	__div_to_l_@quot+3
  6727  08B6  02AD               	subwf	__div_to_l_@exp1,f
  6728  08B7  30A0               	movlw	160
  6729  08B8  072C               	addwf	__div_to_l_@cntr,w
  6730  08B9  00A0               	movwf	??__div_to_l_
  6731  08BA  02AD               	subwf	__div_to_l_@exp1,f
  6732  08BB  3020               	movlw	32
  6733  08BC  00AC               	movwf	__div_to_l_@cntr
  6734  08BD                     l6198:	
  6735  08BD  3075               	movlw	low __div_to_l_@f2
  6736  08BE  1003               	clrc
  6737  08BF  0DA8               	rlf	__div_to_l_@quot,f
  6738  08C0  0DA9               	rlf	__div_to_l_@quot+1,f
  6739  08C1  0DAA               	rlf	__div_to_l_@quot+2,f
  6740  08C2  0DAB               	rlf	__div_to_l_@quot+3,f
  6741  08C3  212F  120A  158A   	fcall	PL3	;call to abstracted procedure
  6742  08C6  3072               	movlw	low __div_to_l_@f1
  6743  08C7  0084               	movwf	4
  6744  08C8  0800               	movf	0,w
  6745  08C9  00A4               	movwf	??__div_to_l_+4
  6746  08CA  0A84               	incf	4,f
  6747  08CB  0800               	movf	0,w
  6748  08CC  00A5               	movwf	??__div_to_l_+5
  6749  08CD  0A84               	incf	4,f
  6750  08CE  0800               	movf	0,w
  6751  08CF  00A6               	movwf	??__div_to_l_+6
  6752  08D0  0A84               	incf	4,f
  6753  08D1  0800               	movf	0,w
  6754  08D2  00A7               	movwf	??__div_to_l_+7
  6755  08D3  0823               	movf	??__div_to_l_+3,w
  6756  08D4  0227               	subwf	??__div_to_l_+7,w
  6757  08D5  1D03               	skipz
  6758  08D6  28E1               	goto	u2105
  6759  08D7  0822               	movf	??__div_to_l_+2,w
  6760  08D8  0226               	subwf	??__div_to_l_+6,w
  6761  08D9  1D03               	skipz
  6762  08DA  28E1               	goto	u2105
  6763  08DB  0821               	movf	??__div_to_l_+1,w
  6764  08DC  0225               	subwf	??__div_to_l_+5,w
  6765  08DD  1D03               	skipz
  6766  08DE  28E1               	goto	u2105
  6767  08DF  0820               	movf	??__div_to_l_,w
  6768  08E0  0224               	subwf	??__div_to_l_+4,w
  6769  08E1                     u2105:	
  6770  08E1  1C03               	skipc
  6771  08E2  28FD               	goto	l3562
  6772  08E3  3075               	movlw	low __div_to_l_@f2
  6773  08E4  212F  120A  158A   	fcall	PL3	;call to abstracted procedure
  6774  08E7  3072               	movlw	low __div_to_l_@f1
  6775  08E8  0084               	movwf	4
  6776  08E9  0820               	movf	??__div_to_l_,w
  6777  08EA  0280               	subwf	0,f
  6778  08EB  0A84               	incf	4,f
  6779  08EC  0821               	movf	??__div_to_l_+1,w
  6780  08ED  1C03               	skipc
  6781  08EE  0F21               	incfsz	??__div_to_l_+1,w
  6782  08EF  0280               	subwf	0,f
  6783  08F0  0A84               	incf	4,f
  6784  08F1  0822               	movf	??__div_to_l_+2,w
  6785  08F2  1C03               	skipc
  6786  08F3  0F22               	incfsz	??__div_to_l_+2,w
  6787  08F4  0280               	subwf	0,f
  6788  08F5  0A84               	incf	4,f
  6789  08F6  0823               	movf	??__div_to_l_+3,w
  6790  08F7  1C03               	skipc
  6791  08F8  0A23               	incf	??__div_to_l_+3,w
  6792  08F9  0280               	subwf	0,f
  6793  08FA  3003               	movlw	3
  6794  08FB  0284               	subwf	4,f
  6795  08FC  1428               	bsf	__div_to_l_@quot,0
  6796  08FD                     l3562:	
  6797  08FD  3072               	movlw	low __div_to_l_@f1
  6798  08FE  0084               	movwf	4
  6799  08FF  1003               	clrc
  6800  0900  0D80               	rlf	0,f
  6801  0901  0A84               	incf	4,f
  6802  0902  0D80               	rlf	0,f
  6803  0903  0A84               	incf	4,f
  6804  0904  0D80               	rlf	0,f
  6805  0905  0A84               	incf	4,f
  6806  0906  0D80               	rlf	0,f
  6807  0907  0BAC               	decfsz	__div_to_l_@cntr,f
  6808  0908  28BD               	goto	l6198
  6809  0909  1FAD               	btfss	__div_to_l_@exp1,7
  6810  090A  2918               	goto	l6216
  6811  090B  082D               	movf	__div_to_l_@exp1,w
  6812  090C  3A80               	xorlw	128
  6813  090D  3E9F               	addlw	159
  6814  090E  1C03               	btfss	3,0
  6815  090F  2887               	goto	l6182
  6816  0910                     l6212:	
  6817  0910  1003               	clrc
  6818  0911  0CAB               	rrf	__div_to_l_@quot+3,f
  6819  0912  0CAA               	rrf	__div_to_l_@quot+2,f
  6820  0913  0CA9               	rrf	__div_to_l_@quot+1,f
  6821  0914  0CA8               	rrf	__div_to_l_@quot,f
  6822  0915  0FAD               	incfsz	__div_to_l_@exp1,f
  6823  0916  2910               	goto	l6212
  6824  0917  2926               	goto	l6222
  6825  0918                     l6216:	
  6826  0918  3020               	movlw	32
  6827  0919  022D               	subwf	__div_to_l_@exp1,w
  6828  091A  1803               	btfsc	3,0
  6829  091B  2887               	goto	l6182
  6830  091C                     l3570:	
  6831  091C  08AD               	movf	__div_to_l_@exp1,f
  6832  091D  1903               	btfsc	3,2
  6833  091E  2926               	goto	l6222
  6834  091F  1003               	clrc
  6835  0920  0DA8               	rlf	__div_to_l_@quot,f
  6836  0921  0DA9               	rlf	__div_to_l_@quot+1,f
  6837  0922  0DAA               	rlf	__div_to_l_@quot+2,f
  6838  0923  0DAB               	rlf	__div_to_l_@quot+3,f
  6839  0924  03AD               	decf	__div_to_l_@exp1,f
  6840  0925  291C               	goto	l3570
  6841  0926                     l6222:	
  6842  0926  082B               	movf	__div_to_l_@quot+3,w
  6843  0927  00F5               	movwf	?__div_to_l_+3
  6844  0928  082A               	movf	__div_to_l_@quot+2,w
  6845  0929  00F4               	movwf	?__div_to_l_+2
  6846  092A  0829               	movf	__div_to_l_@quot+1,w
  6847  092B  00F3               	movwf	?__div_to_l_+1
  6848  092C  0828               	movf	__div_to_l_@quot,w
  6849  092D  00F2               	movwf	?__div_to_l_
  6850  092E  0008               	return
  6851  092F                     __end_of__div_to_l_:	
  6852  092F                     PL3:	
  6853  092F  0084               	movwf	4
  6854  0930  0800               	movf	0,w
  6855  0931  00A0               	movwf	??__div_to_l_
  6856  0932  0A84               	incf	4,f
  6857  0933  0800               	movf	0,w
  6858  0934  00A1               	movwf	??__div_to_l_+1
  6859  0935  0A84               	incf	4,f
  6860  0936  0800               	movf	0,w
  6861  0937  00A2               	movwf	??__div_to_l_+2
  6862  0938  0A84               	incf	4,f
  6863  0939  0800               	movf	0,w
  6864  093A  00A3               	movwf	??__div_to_l_+3
  6865  093B  0008               	return
  6866                           
  6867                           	psect	text569
  6868  078F                     __ptext569:	
  6869 ;; =============== function _isprint ends ============
  6870                           
  6871                           
  6872 ;; *************** function _ngat *****************
  6873 ;; Defined at:
  6874 ;;		line 80 in file "C:\Online Class\HK6\Practice_Micro\hc-sr04\hcsr04.c"
  6875 ;; Parameters:    Size  Location     Type
  6876 ;;		None
  6877 ;; Auto vars:     Size  Location     Type
  6878 ;;		None
  6879 ;; Return value:  Size  Location     Type
  6880 ;;		None               void
  6881 ;; Registers used:
  6882 ;;		wreg
  6883 ;; Tracked objects:
  6884 ;;		On entry : 0/0
  6885 ;;		On exit  : 60/0
  6886 ;;		Unchanged: FFF9F/0
  6887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6888 ;;      Params:         0       0       0       0       0
  6889 ;;      Locals:         0       0       0       0       0
  6890 ;;      Temps:          2       0       0       0       0
  6891 ;;      Totals:         2       0       0       0       0
  6892 ;;Total ram usage:        2 bytes
  6893 ;; Hardware stack levels used:    1
  6894 ;; This function calls:
  6895 ;;		Nothing
  6896 ;; This function is called by:
  6897 ;;		Interrupt level 1
  6898 ;; This function uses a non-reentrant model
  6899 ;;
  6900  078F                     _ngat:	
  6901                           
  6902                           ;hcsr04.c: 81: if(CCP1IF)
  6903  078F  1283               	bcf	3,5	;RP0=0, select bank0
  6904  0790  1303               	bcf	3,6	;RP1=0, select bank0
  6905  0791  1D0C               	btfss	12,2
  6906  0792  2F98               	goto	i1l6102
  6907                           
  6908                           ;hcsr04.c: 82: {
  6909                           ;hcsr04.c: 83: CCP1IF=0;
  6910  0793  110C               	bcf	12,2
  6911                           
  6912                           ;hcsr04.c: 84: canhlen = CCPR1;
  6913  0794  0816               	movf	22,w	;volatile
  6914  0795  00E8               	movwf	_canhlen+1
  6915  0796  0815               	movf	21,w	;volatile
  6916  0797  00E7               	movwf	_canhlen
  6917  0798                     i1l6102:	
  6918                           
  6919                           ;hcsr04.c: 86: }
  6920                           ;hcsr04.c: 88: if(CCP2IF)
  6921  0798  1C0D               	btfss	13,0
  6922  0799  2F9F               	goto	i1l1051
  6923                           
  6924                           ;hcsr04.c: 89: {
  6925                           ;hcsr04.c: 90: CCP2IF=0;
  6926  079A  100D               	bcf	13,0
  6927                           
  6928                           ;hcsr04.c: 91: canhxuong=CCPR2;
  6929  079B  081C               	movf	28,w	;volatile
  6930  079C  00EA               	movwf	_canhxuong+1
  6931  079D  081B               	movf	27,w	;volatile
  6932  079E  00E9               	movwf	_canhxuong
  6933  079F                     i1l1051:	
  6934  079F  0871               	movf	??_ngat+1,w
  6935  07A0  008A               	movwf	10
  6936  07A1  0E70               	swapf	??_ngat^(0+-128),w
  6937  07A2  0083               	movwf	3
  6938  07A3  0EFE               	swapf	126,f
  6939  07A4  0E7E               	swapf	126,w
  6940  07A5  0009               	retfie
  6941  07A6                     __end_of_ngat:	
  6942                           
  6943                           	psect	intentry
  6944  0004                     __pintentry:	
  6945                           ; Regs used in _ngat: [wreg]
  6946                           
  6947  0004                     interrupt_function:	
  6948  007E                     saved_w	set	btemp
  6949  0004  00FE               	movwf	btemp
  6950  0005  0E03               	swapf	3,w
  6951  0006  00F0               	movwf	??_ngat
  6952  0007  080A               	movf	10,w
  6953  0008  00F1               	movwf	??_ngat+1
  6954  0009  120A  118A  2F8F   	ljmp	_ngat
  6955                           
  6956                           	psect	text570
  6957  0000                     __ptext570:	
  6958 ;; =============== function _ngat ends ============
  6959                           
  6960  007E                     btemp	set	126	;btemp
  6961  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu May 05 10:10:43 2022

                    pc 0002         ___bmul@product 0020           ___awdiv@sign 0021                     fsr 0004  
  ___wmul@multiplicand 0074           ___ftadd@exp1 004C           ___ftadd@exp2 004B          ?_lcd_put_byte 0072  
         ___ftadd@sign 004A                    _GIE 005F                    _RA0 0028                    _RD1 0041  
                  _RD2 0042                    _RD3 0043                    _RD4 0044                    _RD5 0045  
                  _RD6 0046                    _RD7 0047                    _dem 006B                    _dis 0064  
                  fsr0 0004                    indf 0000           ___awmod@sign 0077           ___ftdiv@cntr 002C  
         ___ftdiv@sign 0031                   l2110 0000                   l1054 0000                   l2121 0000  
                 l2113 0000                   l2201 0093                   l2144 0000                   l2241 0349  
                 l3302 0A4D                   l3311 0000                   l3305 0000                   l3333 17BA  
                 l2269 0508                   l3254 0000                   l3422 0000                   l3520 0000  
                 l3432 0000                   l3512 0000                   l3362 0C91                   l3259 0000  
                 l3275 0000                   l3451 0000                   l3355 0000                   l3436 0000  
                 l3269 0000                   l6110 0000                   l3527 06A7                   l6120 0000  
                 l6200 0000                   l6122 0000                   l3570 091C                   l3562 08FD  
                 l3490 0000                   l7002 01DD                   l3563 0000                   l6116 0C53  
                 l6108 0000                   l6140 0000                   l6132 0000                   l6212 0910  
                 l6204 0000                   l6300 0000                   l7100 0404                   l7020 0000  
                 l7012 0000                   l3389 05D8                   l6150 0672                   l6142 0000  
                 l6134 0650                   l6222 0926                   l6214 0000                   l6206 0000  
                 l6310 0F7A                   l6302 0000                   l7022 025F                   l7014 0000  
                 l7006 01EE                   l3495 0000                   l6128 0583                   l6160 0000  
                 l6152 0000                   l6144 0000                   l6136 0655                   l6216 0918  
                 l6312 0F7F                   l6304 0F71                   l6400 0000                   l7112 044C  
                 l7016 0000                   l7200 0000                   l6170 06A3                   l6146 0000  
                 l6234 0000                   l6226 0000                   l6250 0000                   l6242 0000  
                 l6322 0000                   l6314 0F89                   l6330 05A8                   l6402 0EA2  
                 l6410 0000                   l7130 048E                   l7122 0471                   l7106 0000  
                 l7050 02C2                   l7042 02BE                   l7034 0000                   l7018 021E  
                 l7210 16B3                   l7202 0000                   l6156 0000                   l6148 0000  
                 l6180 0000                   l6236 0000                   l6228 0F5D                   l6252 0000  
                 l6244 0587                   l6260 0000                   l6324 0000                   l6316 0F8E  
                 l6308 0F75                   l6340 0000                   l6332 05AD                   l6404 0000  
                 l7140 0000                   l7116 0464                   l7108 0438                   l7052 02D7  
                 l7044 02D1                   l7036 0295                   l7028 0261                   l7220 0000  
                 l7212 0000                   l7204 0000                   l6166 069B                   l6190 0000  
                 l6182 0887                   l6262 0000                   l6326 0000                   l6318 0F93  
                 l6350 0000                   l6342 0000                   l6334 0000                   l6406 0EAA  
                 l6430 0000                   l6510 0000                   l7142 04BE                   l7134 04AA  
                 l7070 0332                   l7062 0000                   l7038 0000                   l7150 0013  
                 l7230 0000                   l7222 0000                   l7214 0000                   l7206 0000  
                 l6176 06B1                   l6168 0000                   l6192 0000                   l6184 088C  
                 l6248 058F                   l6272 0000                   l6264 0A47                   l6360 0000  
                 l6352 05D4                   l6336 0000                   l6328 0000                   l6424 0000  
                 l6504 0ECC                   l6512 0EDF                   l6520 0000                   l6600 1785  
                 l7136 04AD                   l7128 048B                   l7080 0000                   l7072 0000  
                 l7064 030E                   l7056 02DE                   l7232 0000                   l7224 0000  
                 l7216 0000                   l7208 0000                   l7160 0000                   l7152 0000  
                 l6194 0000                   l6258 0000                   l6290 0000                   l6282 0000  
                 l6362 05F0                   l6338 0000                   l6418 051D                   l6426 0542  
                 l6450 0000                   l6442 055A                   l6514 0000                   l6530 0000  
                 l6522 0000                   l6602 0000                   l6610 179E                   l7138 04B1  
                 l7082 03D6                   l7074 036B                   l7066 0323                   l7058 030A  
                 l7226 0000                   l7218 0000                   l7170 0000                   l7162 0000  
                 l7154 0000                   l6196 0000                   l6276 0000                   l6268 0000  
                 l6284 0000                   l6348 05CC                   l6380 0E7D                   l6372 0000  
                 l6460 0000                   l6516 0EE7                   l6540 0000                   l6532 0000  
                 l6524 0000                   l6620 17B6                   l6612 17A2                   l7148 04C6  
                 l7084 03E4                   l7228 0000                   l7180 0000                   l7172 0000  
                 l7164 0000                   l7156 0000                   l6198 08BD                   l6278 0A5A  
                 l6294 0A74                   l6286 0A60                   l6358 05E2                   l6390 0E8B  
                 l6382 0000                   l6374 0E74                   l6366 0000                   l6446 0569  
                 l6438 0000                   l6470 0000                   l6550 0C08                   l6542 0000  
                 l6534 0BB5                   l6630 0000                   l6614 0000                   l6606 1794  
                 l6710 0000                   l7094 0402                   l7086 0000                   l7190 0000  
                 l7182 0000                   l7174 0000                   l7166 0000                   l7158 0000  
                 l6296 0000                   l6288 0000                   l6392 0000                   l6368 0000  
                 l6448 0000                   l6480 0639                   l6552 0000                   l6544 0000  
                 l6536 0BC2                   l6528 0000                   l6560 0000                   l6640 0000  
                 l6632 17D0                   l6624 0000                   l6608 1799                   l6720 0000  
                 l6712 0000                   l6704 0F0E                   l6800 0000                   l7088 0000  
                 l7192 0000                   l7184 0000                   l7176 0000                   l7168 0000  
                 l6378 0000                   l6474 0000                   l6458 0000                   l6490 0000  
                 l6554 0000                   l6546 0BF0                   l6538 0BCD                   l6562 0000  
                 l6642 0000                   l6634 0000                   l6626 17C5                   l6618 17B1  
                 l6570 0000                   l6730 0000                   l6722 0F1F                   l6714 0000  
                 l6706 0000                   l6810 0A9F                   l6802 0000                   l7194 0000  
                 l7186 0000                   l7178 0000                   l6396 0000                   l6468 060E  
                 l6492 0EB9                   l6484 0000                   l6548 0BFB                   l6564 0000  
                 l6556 0000                   l6644 17EC                   l6636 0000                   l6572 0000  
                 l6660 0000                   l6740 0000                   l6732 0000                   l6716 0000  
                 l6708 0000                   l6804 0A95                   l6812 0000                   l6900 0000  
                 l7196 0000                   l7188 0000                   l6478 0000                   l6486 0000  
                 l6566 0000                   l6558 0000                   l6590 0000                   l6582 1768  
                 l6574 0000                   l6670 0000                   l6662 0000                   l6654 0C80  
                 l6742 0000                   l6734 0F35                   l6726 0F29                   l6718 0000  
                 l6806 0A96                   l6830 0A1B                   l6822 09C7                   l7198 0000  
                 l6496 0EC0                   l6584 0000                   l6672 0000                   l6664 0000  
                 l6648 0000                   l6744 0000                   l6728 0000                   l6752 0000  
                 l6808 0000                   l6816 0000                   l6912 003A                   l6578 1761  
                 l6682 0000                   l6674 0000                   l6666 0000                   l6738 0F3F  
                 l6770 0000                   l6762 0000                   l6826 0000                   l6834 0000  
                 l6930 006A                   l6922 0000                   l6914 0000                   l6906 0028  
                 l6596 0000                   l6588 1777                   l6676 0000                   l6668 0000  
                 l6692 0000                   l6748 0000                   l6756 06C4                   l6772 0000  
                 l6764 0000                   l6852 0D8C                   l6940 0098                   l6924 0000  
                 l6932 008F                   l6916 0000                   l6908 0000                   l6598 0000  
                 l6686 0000                   l6678 0CA4                   l6758 06CF                   l6790 0B71  
                 l6782 0B59                   l6774 0B41                   l6766 0000                   l6870 0E52  
                 l6846 0D47                   l6838 0000                   l6950 0000                   l6942 00AB  
                 l6934 0000                   l6918 005C                   l6688 0000                   l6768 0000  
                 l6864 0E0D                   l6856 0DA3                   l6880 0000                   l6960 0000  
                 l6952 0000                   l6936 0095                   l6928 0000                   l6698 0EFD  
                 l6794 0B7D                   l6786 0B65                   l6778 0B4D                   l6874 0000  
                 l6882 0AA8                   l6970 0000                   l6876 0000                   l6892 0AC5  
                 l6884 0AAE                   l6980 0000                   l6972 0000                   l6964 0000  
                 l6956 0000                   l6948 00BB                   l6798 0B89                   l6886 0AB5  
                 l6982 0000                   l6974 0000                   l6966 0000                   l6990 017E  
                 l6958 00E7                   l6888 0AB9                   l6896 0ACC                   l6968 0000  
                 l6898 0000                   l6994 01B2                   l6986 016E                   l6978 0135  
                 STR_1 107C                   STR_2 108C                   u2015 0681                   u2105 08E1  
                 u4007 0BE1                   u2360 0000                   u4017 0C15                   u4027 0C1B  
                 u2700 0BB3                   u2365 05B1                   u2525 052B                   u2605 0621  
                 u3085 0CB2                   u2800 0BF9                   u2720 0BC0                   u2475 0E94  
                 u3515 0187                   u2820 0C06                   u2740 0BCB                   u3525 01BC  
                 u3470 0000                   u3615 02CB                   u2840 0C11                   u2760 0BD7  
                 u2665 0ED2                   u3715 0431                   u3555 01DB                   u3475 00FA  
                 _PEIE 005E                   u2780 0BEE                   u3645 0317                   u2854 0C13  
                 u2774 0BD9                   u3735 0446                   u3655 032D                   u3575 028E  
                 u3745 045C                   u3907 0B20                   u3917 0B2D                   u3927 0B3A  
                 u3937 0C2B                   u3785 0481                   u3857 16B7                   u3947 0C31  
                 u3795 049C                   u3867 16C1                   u3957 0C3B                   u3877 0AE7  
                 u3967 0C41                   u3887 0AFA                   u3977 0B9E                   u3897 0B0D  
                 u3987 0BA4                   u3997 0BDB                   _main 1687                   _ngat 078F  
         ___ftpack@arg 0072           ___ftpack@exp 0075           lcd_busy@busy 0073                   btemp 007E  
                 start 000C      ___bmul@multiplier 0021           ___ftmul@cntr 003F           ___ftmul@sign 0040  
         ___fttol@exp1 0030           ___fttol@lval 002C         ??_lcd_put_byte 0073                  ?_main 0070  
                ?_ngat 0070        __end_of___awdiv 0EAF        __end_of___lbdiv 0A5C        __end_of___ftadd 1800  
                _CCPR1 0015                  _CCPR2 001B        __end_of___awmod 0EEC        __end_of___lbmod 0A78  
      __end_of___ftdiv 0CD7        __end_of___ftneg 06C2                  _ANSEL 0188        __end_of___lldiv 0642  
      __end_of___ftmul 0F5B        ___awdiv@divisor 0078        __end_of___llmod 054B        __end_of___ftsub 06FA  
      __end_of___fttol 05F9        ___awdiv@counter 0020                  _TMR1H 000F                  _TMR1L 000E  
         ___lltoft@exp 007A                  _scale 0CD7        __end_of_isdigit 0585          ___ftpack@sign 0076  
                _putch 0509        __end_of_isprint 0C55                  pclath 000A                  status 0003  
                wtemp0 007E        ___lbdiv@divisor 0077        ___lbdiv@counter 0079           __end_of_main 173E  
         __end_of_ngat 07A6          lcd_gotoxy@col 0078          lcd_gotoxy@row 0077                 ??_main 005F  
        ___fttol@sign1 002B                 ??_ngat 0070   __size_of__tdiv_to_l_ 0078                 _CCP1M0 00B8  
               _CCP1M1 00B9                 _CCP1M2 00BA                 _CCP1M3 00BB                 _CCP2M0 00E8  
               _CCP2M1 00E9                 _CCP2M2 00EA                 _CCP2M3 00EB                 _CCP1IE 0462  
               _CCP1IF 0062                 _CCP2IE 0468                 _CCP2IF 0068       ___llmod@dividend 0029  
               ?_scale 0041                 _CCPR1H 0016                 _CCPR2H 001C                 _CCPR1L 0015  
               _CCPR2L 001B       ___awdiv@dividend 007A                 ?_putch 0070       __end_of___ftpack 0FA7  
               _ANSELH 0189       __end_of___lltoft 06E2                 i1l1051 079F                 i1l6100 0000  
               i1l6102 0798                 i1l6106 0000                 _T1SYNC 0082                 i1l6096 0000  
     __end_of___lwtoft 0C6F                 _TMR1GE 0086                 _TMR1CS 0081                 _TMR1ON 0080  
               _TRISA0 0428                 _TRISD1 0441                 _TRISD2 0442                 _TRISD3 0443  
               _TRISD4 0444                 _TRISD5 0445                 _TRISD6 0446                 _TRISD7 0447  
     __end_of_lcd_busy 0C47       __end_of_lcd_init 0B90       __end_of_lcd_putc 0AD5                 ___bmul 0F5B  
               ___ftge 054B                 ___wmul 0585              ??___awdiv 007C              ??___lbdiv 0078  
            ??___ftadd 0047              ??___awmod 0076              ??___lbmod 0073              ??___ftdiv 0029  
            ??___ftneg 0075              ??___lldiv 007A              ??___ftmul 0038              ??___llmod 007A  
            ??___ftsub 007C              ??___fttol 0028                 _fround 093C       ___awdiv@quotient 0022  
      ___awmod@divisor 0072        ___awmod@counter 0076                 _printf 000F          lcd_put_byte@b 0072  
___ftmul@f3_as_product 003C              ??_isdigit 0072                 saved_w 007E              ??_isprint 0072  
               putch@c 007B       ___lbdiv@dividend 0078        ___lbmod@divisor 0072        ___lbmod@counter 0075  
 __end_of_lcd_put_byte 0C20             ___ftadd@f1 0041             ___ftadd@f2 0044             ___ftge@ff1 0072  
           ___ftge@ff2 0075             ___ftdiv@f1 0026             ___ftdiv@f2 0023             ___ftdiv@f3 002D  
           ___ftneg@f1 0072    ___bmul@multiplicand 007B             ___ftmul@f1 0032             ___ftmul@f2 0035  
           ___ftsub@f1 0050             ___ftsub@f2 004D             ___fttol@f1 0024         __pcstackCOMMON 0070  
           ___lltoft@c 0020          __end_of_scale 0E69          __end_of_putch 050D       ___lbdiv@quotient 007A  
           ___lwtoft@c 0020             __div_to_l_ 0871      lcd_gotoxy@address 0079        __div_to_l_@exp1 002D  
      __div_to_l_@cntr 002C                ??_scale 0044        __div_to_l_@quot 0028                ??_putch 007B  
           __pbssBANK0 0064          __div_to_l_@f1 0072          __div_to_l_@f2 0075             __pmaintext 1687  
              ?___bmul 007B                ?___ftge 0072                ?___wmul 0072             __pintentry 0004  
              ?_fround 004D              ?___ftpack 0072                ?_printf 0057              ?___lltoft 0020  
              _T1CKPS0 0084                _T1CKPS1 0085              ?___lwtoft 0020             _lcd_gotoxy 0A8E  
            ?_lcd_busy 0070              ?_lcd_init 0070              ?_lcd_putc 0070             _scale$4108 0048  
      __size_of___bmul 000E        __size_of___ftge 002C                ___awdiv 0E69                ___lbdiv 0A41  
              ___ftadd 173E                ___awmod 0EAF                ___lbmod 0A5C                ___ftdiv 0C6F  
              ___ftneg 06BA                ___lldiv 05F9        __size_of___wmul 0019                ___ftmul 0EEC  
              ___llmod 050D                ___ftsub 06E2                ___fttol 059E                _canhlen 0067  
           ??___ftpack 0077        __size_of_fround 0105             ??___lltoft 007A        __size_of_printf 04FA  
           ??___lwtoft 007A            ?__div_to_l_ 0072                _dpowers 1054                _isdigit 0577  
     ___awmod@dividend 0074                _isprint 0C47  __size_of_lcd_put_byte 0090             ??_lcd_busy 0072  
           ??_lcd_init 0077             ??_lcd_putc 007A   end_of_initialization 07AF         lcd_put_byte@rs 0075  
      ___lldiv@divisor 0072        ___lldiv@counter 0024                printf@c 00B8                printf@f 00AA  
       __tdiv_to_l_@f1 0072         __tdiv_to_l_@f2 0075          ??__tdiv_to_l_ 0078           _lcd_put_byte 0B90  
     ___lbmod@dividend 0074            ?_lcd_gotoxy 0077            ___lbmod@rem 0076            printf@integ 00A5  
          ___ftdiv@exp 0030            printf@width 00AF    __size_of__div_to_l_ 00BE            ___ftmul@exp 003B  
       __end_of___bmul 0F69         __end_of___ftge 0577         __end_of___wmul 059E         __end_of_fround 0A41  
       __end_of_printf 0509    start_initialization 07A6    __end_of__tdiv_to_l_ 06BA        ___llmod@divisor 0025  
      ___llmod@counter 007A               ??___bmul 007C               ??___ftge 0078    __size_of_lcd_gotoxy 0018  
             ??___wmul 0076               ??_fround 007C               ??_printf 005A             fround@prec 0056  
    __size_of___ftpack 003E      __size_of___lltoft 0020      __size_of___lwtoft 0010          __pcstackBANK0 0020  
        __pcstackBANK1 00A0           _isdigit$3668 0072      __size_of_lcd_busy 0027      __size_of_lcd_init 00BB  
    __size_of_lcd_putc 002F              _canhxuong 0069              _main$4105 0061               ?___awdiv 0078  
             ?___lbdiv 0077               ?___ftadd 0041               ?___awmod 0072              __ptext540 0AA6  
            __ptext541 06E2              __ptext550 173E              __ptext542 0CD7              __ptext551 0C20  
            __ptext543 093C              __ptext560 0F69              __ptext552 0B90              __ptext544 0A8E  
            __ptext561 0A5C              __ptext553 0EAF              __ptext545 0AD5              __ptext570 0000  
            __ptext562 0A41              __ptext554 05F9              __ptext546 06C2              __ptext538 000F  
            __ptext563 0585              __ptext555 054B              __ptext547 0C5F              __ptext539 0509  
             ?___lbmod 0072              __ptext564 0F5B              __ptext556 06BA              __ptext548 0EEC  
            __ptext565 0871              __ptext557 050D              __ptext549 0C6F              __ptext566 0642  
            __ptext558 0E69              __ptext567 0577              __ptext559 059E              __ptext568 0C47  
            __ptext569 078F               ?___ftdiv 0023               ?___ftneg 0072               ?___lldiv 0072  
             ?___ftmul 0032               ?___llmod 0025               ?___ftsub 004D              __npowers_ 1006  
             ?___fttol 0024              __pstrings 1000            __tdiv_to_l_ 0642           ??__div_to_l_ 0020  
             ?_isdigit 0070               ?_isprint 0070         __size_of_scale 0192         __size_of_putch 0004  
    interrupt_function 0004         ___wmul@product 0076     __end_of__div_to_l_ 092F            __stringbase 1005  
    ___wmul@multiplier 0072             printf@_val 00AB             printf@flag 00A8             printf@fval 00B3  
           printf@prec 00B6              lcd_putc@c 007A           ??_lcd_gotoxy 0078       lcd_put_byte@temp 0076  
         _isprint$3671 0072     __end_of_lcd_gotoxy 0AA6       __size_of___awdiv 0046       __size_of___lbdiv 001B  
     __size_of___ftadd 00C2       __size_of___awmod 003D       __size_of___lbmod 001C       __size_of___ftdiv 0068  
     __size_of___ftneg 0008       __size_of___lldiv 0049       __size_of___ftmul 006F       __size_of___llmod 003E  
     __size_of___ftsub 0018       __size_of___fttol 005B               ___ftpack 0F69            _fround$4106 0053  
          _fround$4107 0050               ___lltoft 06C2               ___lwtoft 0C5F       __size_of_isdigit 000E  
     __size_of_isprint 000E               __powers_ 102D               _lcd_busy 0C20               _lcd_init 0AD5  
             _lcd_putc 0AA6          __size_of_main 00B7          __size_of_ngat 0017              printf@exp 00B1  
             isdigit@c 0073               scale@scl 004B               intlevel1 0000       __tdiv_to_l_@exp1 0025  
     __tdiv_to_l_@cntr 0024       __tdiv_to_l_@quot 0020       ___lldiv@dividend 0076               isprint@c 0073  
            stringcode 1000               printf@ap 00A4           ?__tdiv_to_l_ 0072            _printf$3160 00A0  
     ___lldiv@quotient 0020               stringdir 1000               stringtab 1000  
