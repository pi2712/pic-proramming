

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Thu Apr 14 10:12:54 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,delta=2
    12                           	psect	text535,local,class=CODE,delta=2
    13                           	psect	text540,local,class=CODE,delta=2
    14                           	psect	text541,local,class=CODE,delta=2
    15                           	psect	text544,local,class=CODE,delta=2
    16                           	psect	text562,local,class=CODE,delta=2
    17                           	psect	text566,local,class=CODE,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text569,local,class=CODE,delta=2
    20                           	psect	pa_nodes,global,class=CODE,delta=2
    21                           	dabs	1,0x7E,2
    22  000A                     	;#
    23                           
    24                           	psect	config
    25  2007  E3E2               	dw	58338	;#
    26                           
    27                           	psect	strings
    28  1000                     __pstrings:	
    29  1000                     stringtab:	
    30                           ;	global	stringdir,stringtab,__stringbase
    31                           
    32  1000                     stringcode:	
    33                           ;	String table - string pointers are 1 byte each
    34                           
    35  1000                     stringdir:	
    36  1000  3010               	movlw	high stringdir
    37  1001  008A               	movwf	10
    38  1002  0804               	movf	4,w
    39  1003  0A84               	incf	4,f
    40  1004  0782               	addwf	2,f
    41  1005                     __stringbase:	
    42  1005  3400               	retlw	0
    43  1006                     __npowers_:	
    44  1006  3400               	retlw	0
    45  1007  3480               	retlw	128
    46  1008  343F               	retlw	63
    47  1009  34CD               	retlw	205
    48  100A  34CC               	retlw	204
    49  100B  343D               	retlw	61
    50  100C  34D7               	retlw	215
    51  100D  3423               	retlw	35
    52  100E  343C               	retlw	60
    53  100F  3412               	retlw	18
    54  1010  3483               	retlw	131
    55  1011  343A               	retlw	58
    56  1012  34B7               	retlw	183
    57  1013  34D1               	retlw	209
    58  1014  3438               	retlw	56
    59  1015  34C6               	retlw	198
    60  1016  3427               	retlw	39
    61  1017  3437               	retlw	55
    62  1018  3438               	retlw	56
    63  1019  3486               	retlw	134
    64  101A  3435               	retlw	53
    65  101B  34C0               	retlw	192
    66  101C  34D6               	retlw	214
    67  101D  3433               	retlw	51
    68  101E  34CC               	retlw	204
    69  101F  342B               	retlw	43
    70  1020  3432               	retlw	50
    71  1021  3470               	retlw	112
    72  1022  3489               	retlw	137
    73  1023  3430               	retlw	48
    74  1024  34E7               	retlw	231
    75  1025  34DB               	retlw	219
    76  1026  342E               	retlw	46
    77  1027  34E5               	retlw	229
    78  1028  343C               	retlw	60
    79  1029  341E               	retlw	30
    80  102A  3442               	retlw	66
    81  102B  34A2               	retlw	162
    82  102C  340D               	retlw	13
    83  102D                     __powers_:	
    84  102D  3400               	retlw	0
    85  102E  3480               	retlw	128
    86  102F  343F               	retlw	63
    87  1030  3400               	retlw	0
    88  1031  3420               	retlw	32
    89  1032  3441               	retlw	65
    90  1033  3400               	retlw	0
    91  1034  34C8               	retlw	200
    92  1035  3442               	retlw	66
    93  1036  3400               	retlw	0
    94  1037  347A               	retlw	122
    95  1038  3444               	retlw	68
    96  1039  3440               	retlw	64
    97  103A  341C               	retlw	28
    98  103B  3446               	retlw	70
    99  103C  3450               	retlw	80
   100  103D  34C3               	retlw	195
   101  103E  3447               	retlw	71
   102  103F  3424               	retlw	36
   103  1040  3474               	retlw	116
   104  1041  3449               	retlw	73
   105  1042  3497               	retlw	151
   106  1043  3418               	retlw	24
   107  1044  344B               	retlw	75
   108  1045  34BC               	retlw	188
   109  1046  34BE               	retlw	190
   110  1047  344C               	retlw	76
   111  1048  346B               	retlw	107
   112  1049  346E               	retlw	110
   113  104A  344E               	retlw	78
   114  104B  3403               	retlw	3
   115  104C  3415               	retlw	21
   116  104D  3450               	retlw	80
   117  104E  3479               	retlw	121
   118  104F  34AD               	retlw	173
   119  1050  3460               	retlw	96
   120  1051  34F3               	retlw	243
   121  1052  3449               	retlw	73
   122  1053  3471               	retlw	113
   123  1054                     _dpowers:	
   124  1054  3401               	retlw	1
   125  1055  3400               	retlw	0
   126  1056  3400               	retlw	0
   127  1057  3400               	retlw	0
   128  1058  340A               	retlw	10
   129  1059  3400               	retlw	0
   130  105A  3400               	retlw	0
   131  105B  3400               	retlw	0
   132  105C  3464               	retlw	100
   133  105D  3400               	retlw	0
   134  105E  3400               	retlw	0
   135  105F  3400               	retlw	0
   136  1060  34E8               	retlw	232
   137  1061  3403               	retlw	3
   138  1062  3400               	retlw	0
   139  1063  3400               	retlw	0
   140  1064  3410               	retlw	16
   141  1065  3427               	retlw	39
   142  1066  3400               	retlw	0
   143  1067  3400               	retlw	0
   144  1068  34A0               	retlw	160
   145  1069  3486               	retlw	134
   146  106A  3401               	retlw	1
   147  106B  3400               	retlw	0
   148  106C  3440               	retlw	64
   149  106D  3442               	retlw	66
   150  106E  340F               	retlw	15
   151  106F  3400               	retlw	0
   152  1070  3480               	retlw	128
   153  1071  3496               	retlw	150
   154  1072  3498               	retlw	152
   155  1073  3400               	retlw	0
   156  1074  3400               	retlw	0
   157  1075  34E1               	retlw	225
   158  1076  34F5               	retlw	245
   159  1077  3405               	retlw	5
   160  1078  3400               	retlw	0
   161  1079  34CA               	retlw	202
   162  107A  349A               	retlw	154
   163  107B  343B               	retlw	59
   164  0001                     _TMR0	set	1
   165  005F                     _GIE	set	95
   166  0041                     _RD1	set	65
   167  0042                     _RD2	set	66
   168  0043                     _RD3	set	67
   169  0044                     _RD4	set	68
   170  0045                     _RD5	set	69
   171  0046                     _RD6	set	70
   172  0047                     _RD7	set	71
   173  005D                     _T0IE	set	93
   174  005A                     _T0IF	set	90
   175  0088                     _TRISD	set	136
   176  040B                     _PSA	set	1035
   177  040D                     _T0CS	set	1037
   178  040C                     _T0SE	set	1036
   179  042C                     _TRISA4	set	1068
   180  0441                     _TRISD1	set	1089
   181  0442                     _TRISD2	set	1090
   182  0443                     _TRISD3	set	1091
   183  0444                     _TRISD4	set	1092
   184  0445                     _TRISD5	set	1093
   185  0446                     _TRISD6	set	1094
   186  0447                     _TRISD7	set	1095
   187  0188                     _ANSEL	set	392
   188  0189                     _ANSELH	set	393
   189  107C                     STR_2:	
   190  107C  3472               	retlw	114	;'r'
   191  107D  3470               	retlw	112	;'p'
   192  107E  346D               	retlw	109	;'m'
   193  107F  343A               	retlw	58	;':'
   194  1080  3420               	retlw	32	;' '
   195  1081  3425               	retlw	37	;'%'
   196  1082  3433               	retlw	51	;'3'
   197  1083  342E               	retlw	46	;'.'
   198  1084  3431               	retlw	49	;'1'
   199  1085  3466               	retlw	102	;'f'
   200  1086  3400               	retlw	0
   201  1087                     STR_1:	
   202  1087  3470               	retlw	112	;'p'
   203  1088  3470               	retlw	112	;'p'
   204  1089  3473               	retlw	115	;'s'
   205  108A  343A               	retlw	58	;':'
   206  108B  3425               	retlw	37	;'%'
   207  108C  3433               	retlw	51	;'3'
   208  108D  342E               	retlw	46	;'.'
   209  108E  3430               	retlw	48	;'0'
   210  108F  3466               	retlw	102	;'f'
   211  1090  3400               	retlw	0
   212                           
   213                           	psect	cinit
   214  07B6                     start_initialization:	
   215                           
   216                           ; Clear objects allocated to BANK1
   217  07B6  1683               	bsf	3,5	;RP0=1, select bank1
   218  07B7  01C4               	clrf	__pbssBANK1& (0+127)
   219  07B8  01C5               	clrf	(__pbssBANK1+1)& (0+127)
   220  07B9  01C6               	clrf	(__pbssBANK1+2)& (0+127)
   221  07BA  01C7               	clrf	(__pbssBANK1+3)& (0+127)
   222  07BB  01C8               	clrf	(__pbssBANK1+4)& (0+127)
   223  07BC  01C9               	clrf	(__pbssBANK1+5)& (0+127)
   224  07BD  01CA               	clrf	(__pbssBANK1+6)& (0+127)
   225  07BE  01CB               	clrf	(__pbssBANK1+7)& (0+127)
   226  07BF  01CC               	clrf	(__pbssBANK1+8)& (0+127)
   227  07C0  01CD               	clrf	(__pbssBANK1+9)& (0+127)
   228  07C1  01CE               	clrf	(__pbssBANK1+10)& (0+127)
   229  07C2  01CF               	clrf	(__pbssBANK1+11)& (0+127)
   230  07C3  01D0               	clrf	(__pbssBANK1+12)& (0+127)
   231  07C4  01D1               	clrf	(__pbssBANK1+13)& (0+127)
   232  07C5  01D2               	clrf	(__pbssBANK1+14)& (0+127)
   233  07C6                     end_of_initialization:	
   234                           ;End of C runtime variable initialization code
   235                           
   236  07C6  0183               	clrf	3
   237  07C7  160A  118A  2EE1   	ljmp	_main	;jump to C main() function
   238                           
   239                           	psect	bssBANK1
   240  00C4                     __pbssBANK1:	
   241  00C4                     _dem:	
   242  00C4                     	ds	3
   243  00C7                     _kq:	
   244  00C7                     	ds	3
   245  00CA                     _rpm:	
   246  00CA                     	ds	3
   247  00CD                     _sum:	
   248  00CD                     	ds	3
   249  00D0                     _tam:	
   250  00D0                     	ds	3
   251                           
   252                           	psect	cstackBANK1
   253  00A0                     __pcstackBANK1:	
   254  00A0                     ?_printf:	
   255                           
   256                           ; 2 bytes @ 0x0
   257  00A0                     	ds	3
   258  00A3                     ??_printf:	
   259                           
   260                           ; 0 bytes @ 0x3
   261  00A3                     	ds	5
   262  00A8                     _printf$3161:	
   263                           
   264                           ; 4 bytes @ 0x8
   265  00A8                     	ds	4
   266  00AC                     printf@ap:	
   267                           
   268                           ; 1 bytes @ 0xC
   269  00AC                     	ds	1
   270  00AD                     printf@integ:	
   271                           
   272                           ; 3 bytes @ 0xD
   273  00AD                     	ds	3
   274  00B0                     printf@_val:	
   275                           
   276                           ; 4 bytes @ 0x10
   277  00B0                     	ds	4
   278  00B4                     printf@flag:	
   279                           
   280                           ; 2 bytes @ 0x14
   281  00B4                     	ds	2
   282  00B6                     printf@f:	
   283                           
   284                           ; 1 bytes @ 0x16
   285  00B6                     	ds	1
   286  00B7                     printf@width:	
   287                           
   288                           ; 2 bytes @ 0x17
   289  00B7                     	ds	2
   290  00B9                     printf@exp:	
   291                           
   292                           ; 2 bytes @ 0x19
   293  00B9                     	ds	2
   294  00BB                     printf@fval:	
   295                           
   296                           ; 3 bytes @ 0x1B
   297  00BB                     	ds	3
   298  00BE                     printf@prec:	
   299                           
   300                           ; 2 bytes @ 0x1E
   301  00BE                     	ds	2
   302  00C0                     printf@c:	
   303                           
   304                           ; 1 bytes @ 0x20
   305  00C0                     	ds	1
   306  00C1                     ??_main:	
   307                           
   308                           ; 0 bytes @ 0x21
   309  00C1                     	ds	3
   310                           
   311                           	psect	cstackCOMMON
   312  0070                     __pcstackCOMMON:	
   313  0070                     ?_lcd_init:	
   314  0070                     ?_lcd_putc:	
   315                           ; 0 bytes @ 0x0
   316                           
   317  0070                     ?_isprint:	
   318                           ; 0 bytes @ 0x0
   319                           
   320  0070                     ?_isdigit:	
   321                           ; 1 bit 
   322                           
   323  0070                     ?_putch:	
   324                           ; 1 bit 
   325                           
   326  0070                     ?_ngat:	
   327                           ; 0 bytes @ 0x0
   328                           
   329  0070                     ?_lcd_busy:	
   330                           ; 0 bytes @ 0x0
   331                           
   332  0070                     ?_main:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?i1___ftpack:	
   336                           ; 2 bytes @ 0x0
   337                           
   338  0070                     i1___ftpack@arg:	
   339                           ; 3 bytes @ 0x0
   340                           
   341                           
   342                           ; 3 bytes @ 0x0
   343  0070                     	ds	3
   344  0073                     i1___ftpack@exp:	
   345                           
   346                           ; 1 bytes @ 0x3
   347  0073                     	ds	1
   348  0074                     i1___ftpack@sign:	
   349                           
   350                           ; 1 bytes @ 0x4
   351  0074                     	ds	1
   352  0075                     ??i1___ftpack:	
   353                           
   354                           ; 0 bytes @ 0x5
   355  0075                     	ds	3
   356  0078                     ?i1___ftadd:	
   357  0078                     i1___ftadd@f1:	
   358                           ; 3 bytes @ 0x8
   359                           
   360                           
   361                           ; 3 bytes @ 0x8
   362  0078                     	ds	3
   363  007B                     i1___ftadd@f2:	
   364                           
   365                           ; 3 bytes @ 0xB
   366  007B                     	ds	3
   367                           
   368                           	psect	cstackBANK0
   369  0020                     __pcstackBANK0:	
   370  0020                     ??i1___ftadd:	
   371                           
   372                           ; 0 bytes @ 0x0
   373  0020                     	ds	3
   374  0023                     i1___ftadd@sign:	
   375                           
   376                           ; 1 bytes @ 0x3
   377  0023                     	ds	1
   378  0024                     i1___ftadd@exp2:	
   379                           
   380                           ; 1 bytes @ 0x4
   381  0024                     	ds	1
   382  0025                     i1___ftadd@exp1:	
   383                           
   384                           ; 1 bytes @ 0x5
   385  0025                     	ds	1
   386  0026                     ??_ngat:	
   387                           
   388                           ; 0 bytes @ 0x6
   389  0026                     	ds	2
   390  0028                     ?_lcd_put_byte:	
   391  0028                     ??_lcd_busy:	
   392                           ; 0 bytes @ 0x8
   393                           
   394  0028                     ??_isprint:	
   395                           ; 0 bytes @ 0x8
   396                           
   397  0028                     ??_isdigit:	
   398                           ; 0 bytes @ 0x8
   399                           
   400  0028                     ?___ftge:	
   401                           ; 0 bytes @ 0x8
   402                           
   403  0028                     ?___lbmod:	
   404                           ; 1 bit 
   405                           
   406  0028                     ?___wmul:	
   407                           ; 1 bytes @ 0x8
   408                           
   409  0028                     ?___awmod:	
   410                           ; 2 bytes @ 0x8
   411                           
   412  0028                     ?___ftpack:	
   413                           ; 2 bytes @ 0x8
   414                           
   415  0028                     ?___ftneg:	
   416                           ; 3 bytes @ 0x8
   417                           
   418  0028                     ?__tdiv_to_l_:	
   419                           ; 3 bytes @ 0x8
   420                           
   421  0028                     ?__div_to_l_:	
   422                           ; 4 bytes @ 0x8
   423                           
   424  0028                     ?___lldiv:	
   425                           ; 4 bytes @ 0x8
   426                           
   427  0028                     lcd_put_byte@b:	
   428                           ; 4 bytes @ 0x8
   429                           
   430  0028                     _isdigit$3669:	
   431                           ; 1 bytes @ 0x8
   432                           
   433  0028                     _isprint$3672:	
   434                           ; 1 bytes @ 0x8
   435                           
   436  0028                     ___lbmod@divisor:	
   437                           ; 1 bytes @ 0x8
   438                           
   439  0028                     ___wmul@multiplier:	
   440                           ; 1 bytes @ 0x8
   441                           
   442  0028                     ___awmod@divisor:	
   443                           ; 2 bytes @ 0x8
   444                           
   445  0028                     ___ftneg@f1:	
   446                           ; 2 bytes @ 0x8
   447                           
   448  0028                     ___ftge@ff1:	
   449                           ; 3 bytes @ 0x8
   450                           
   451  0028                     __tdiv_to_l_@f1:	
   452                           ; 3 bytes @ 0x8
   453                           
   454  0028                     __div_to_l_@f1:	
   455                           ; 3 bytes @ 0x8
   456                           
   457  0028                     ___ftpack@arg:	
   458                           ; 3 bytes @ 0x8
   459                           
   460  0028                     ___lldiv@divisor:	
   461                           ; 3 bytes @ 0x8
   462                           
   463                           
   464                           ; 4 bytes @ 0x8
   465  0028                     	ds	1
   466  0029                     ??_lcd_put_byte:	
   467  0029                     ??___lbmod:	
   468                           ; 0 bytes @ 0x9
   469                           
   470  0029                     lcd_busy@busy:	
   471                           ; 0 bytes @ 0x9
   472                           
   473  0029                     isdigit@c:	
   474                           ; 1 bytes @ 0x9
   475                           
   476  0029                     isprint@c:	
   477                           ; 1 bytes @ 0x9
   478                           
   479                           
   480                           ; 1 bytes @ 0x9
   481  0029                     	ds	1
   482  002A                     ___lbmod@dividend:	
   483  002A                     ___wmul@multiplicand:	
   484                           ; 1 bytes @ 0xA
   485                           
   486  002A                     ___awmod@dividend:	
   487                           ; 2 bytes @ 0xA
   488                           
   489                           
   490                           ; 2 bytes @ 0xA
   491  002A                     	ds	1
   492  002B                     ??___ftneg:	
   493  002B                     lcd_put_byte@rs:	
   494                           ; 0 bytes @ 0xB
   495                           
   496  002B                     ___lbmod@counter:	
   497                           ; 1 bytes @ 0xB
   498                           
   499  002B                     ___ftpack@exp:	
   500                           ; 1 bytes @ 0xB
   501                           
   502  002B                     ___ftge@ff2:	
   503                           ; 1 bytes @ 0xB
   504                           
   505  002B                     __tdiv_to_l_@f2:	
   506                           ; 3 bytes @ 0xB
   507                           
   508  002B                     __div_to_l_@f2:	
   509                           ; 3 bytes @ 0xB
   510                           
   511                           
   512                           ; 3 bytes @ 0xB
   513  002B                     	ds	1
   514  002C                     ??___wmul:	
   515  002C                     ??___awmod:	
   516                           ; 0 bytes @ 0xC
   517                           
   518  002C                     lcd_put_byte@temp:	
   519                           ; 0 bytes @ 0xC
   520                           
   521  002C                     ___lbmod@rem:	
   522                           ; 1 bytes @ 0xC
   523                           
   524  002C                     ___awmod@counter:	
   525                           ; 1 bytes @ 0xC
   526                           
   527  002C                     ___ftpack@sign:	
   528                           ; 1 bytes @ 0xC
   529                           
   530  002C                     ___wmul@product:	
   531                           ; 1 bytes @ 0xC
   532                           
   533  002C                     ___lldiv@dividend:	
   534                           ; 2 bytes @ 0xC
   535                           
   536                           
   537                           ; 4 bytes @ 0xC
   538  002C                     	ds	1
   539  002D                     ??_lcd_init:	
   540  002D                     ?_lcd_gotoxy:	
   541                           ; 0 bytes @ 0xD
   542                           
   543  002D                     ??___ftpack:	
   544                           ; 0 bytes @ 0xD
   545                           
   546  002D                     ?___lbdiv:	
   547                           ; 0 bytes @ 0xD
   548                           
   549  002D                     lcd_gotoxy@row:	
   550                           ; 1 bytes @ 0xD
   551                           
   552  002D                     ___lbdiv@divisor:	
   553                           ; 1 bytes @ 0xD
   554                           
   555  002D                     ___awmod@sign:	
   556                           ; 1 bytes @ 0xD
   557                           
   558                           
   559                           ; 1 bytes @ 0xD
   560  002D                     	ds	1
   561  002E                     ??_lcd_gotoxy:	
   562  002E                     ??__tdiv_to_l_:	
   563                           ; 0 bytes @ 0xE
   564                           
   565  002E                     ??__div_to_l_:	
   566                           ; 0 bytes @ 0xE
   567                           
   568  002E                     ??___lbdiv:	
   569                           ; 0 bytes @ 0xE
   570                           
   571  002E                     ??___ftge:	
   572                           ; 0 bytes @ 0xE
   573                           
   574  002E                     ?___awdiv:	
   575                           ; 0 bytes @ 0xE
   576                           
   577  002E                     lcd_gotoxy@col:	
   578                           ; 2 bytes @ 0xE
   579                           
   580  002E                     ___lbdiv@dividend:	
   581                           ; 1 bytes @ 0xE
   582                           
   583  002E                     ___awdiv@divisor:	
   584                           ; 1 bytes @ 0xE
   585                           
   586                           
   587                           ; 2 bytes @ 0xE
   588  002E                     	ds	1
   589  002F                     lcd_gotoxy@address:	
   590  002F                     ___lbdiv@counter:	
   591                           ; 1 bytes @ 0xF
   592                           
   593                           
   594                           ; 1 bytes @ 0xF
   595  002F                     	ds	1
   596  0030                     ??_lcd_putc:	
   597  0030                     ??___lldiv:	
   598                           ; 0 bytes @ 0x10
   599                           
   600  0030                     ?___lbtoft:	
   601                           ; 0 bytes @ 0x10
   602                           
   603  0030                     ?___lltoft:	
   604                           ; 3 bytes @ 0x10
   605                           
   606  0030                     lcd_putc@c:	
   607                           ; 3 bytes @ 0x10
   608                           
   609  0030                     ___lbdiv@quotient:	
   610                           ; 1 bytes @ 0x10
   611                           
   612  0030                     ___awdiv@dividend:	
   613                           ; 1 bytes @ 0x10
   614                           
   615  0030                     ___lldiv@quotient:	
   616                           ; 2 bytes @ 0x10
   617                           
   618  0030                     ___lltoft@c:	
   619                           ; 4 bytes @ 0x10
   620                           
   621                           
   622                           ; 4 bytes @ 0x10
   623  0030                     	ds	1
   624  0031                     ??_putch:	
   625  0031                     ?___bmul:	
   626                           ; 0 bytes @ 0x11
   627                           
   628  0031                     putch@ki_tu:	
   629                           ; 1 bytes @ 0x11
   630                           
   631  0031                     ___bmul@multiplicand:	
   632                           ; 1 bytes @ 0x11
   633                           
   634  0031                     __tdiv_to_l_@quot:	
   635                           ; 1 bytes @ 0x11
   636                           
   637                           
   638                           ; 4 bytes @ 0x11
   639  0031                     	ds	1
   640  0032                     ??___bmul:	
   641  0032                     ??___awdiv:	
   642                           ; 0 bytes @ 0x12
   643                           
   644  0032                     ___bmul@product:	
   645                           ; 0 bytes @ 0x12
   646                           
   647  0032                     ___awdiv@counter:	
   648                           ; 1 bytes @ 0x12
   649                           
   650                           
   651                           ; 1 bytes @ 0x12
   652  0032                     	ds	1
   653  0033                     ??___lbtoft:	
   654  0033                     ___bmul@multiplier:	
   655                           ; 0 bytes @ 0x13
   656                           
   657  0033                     ___lbtoft@c:	
   658                           ; 1 bytes @ 0x13
   659                           
   660  0033                     ___awdiv@sign:	
   661                           ; 1 bytes @ 0x13
   662                           
   663                           
   664                           ; 1 bytes @ 0x13
   665  0033                     	ds	1
   666  0034                     ??___lltoft:	
   667  0034                     ___lldiv@counter:	
   668                           ; 0 bytes @ 0x14
   669                           
   670  0034                     ___lltoft@exp:	
   671                           ; 1 bytes @ 0x14
   672                           
   673  0034                     ___awdiv@quotient:	
   674                           ; 1 bytes @ 0x14
   675                           
   676                           
   677                           ; 2 bytes @ 0x14
   678  0034                     	ds	1
   679  0035                     ?___llmod:	
   680  0035                     __tdiv_to_l_@cntr:	
   681                           ; 4 bytes @ 0x15
   682                           
   683  0035                     ___llmod@divisor:	
   684                           ; 1 bytes @ 0x15
   685                           
   686                           
   687                           ; 4 bytes @ 0x15
   688  0035                     	ds	1
   689  0036                     ?___fttol:	
   690  0036                     __tdiv_to_l_@exp1:	
   691                           ; 4 bytes @ 0x16
   692                           
   693  0036                     ___fttol@f1:	
   694                           ; 1 bytes @ 0x16
   695                           
   696  0036                     __div_to_l_@quot:	
   697                           ; 3 bytes @ 0x16
   698                           
   699                           
   700                           ; 4 bytes @ 0x16
   701  0036                     	ds	3
   702  0039                     ___llmod@dividend:	
   703                           
   704                           ; 4 bytes @ 0x19
   705  0039                     	ds	1
   706  003A                     ??___fttol:	
   707  003A                     __div_to_l_@cntr:	
   708                           ; 0 bytes @ 0x1A
   709                           
   710                           
   711                           ; 1 bytes @ 0x1A
   712  003A                     	ds	1
   713  003B                     __div_to_l_@exp1:	
   714                           
   715                           ; 1 bytes @ 0x1B
   716  003B                     	ds	2
   717  003D                     ??___llmod:	
   718  003D                     ___fttol@sign1:	
   719                           ; 0 bytes @ 0x1D
   720                           
   721  003D                     ___llmod@counter:	
   722                           ; 1 bytes @ 0x1D
   723                           
   724                           
   725                           ; 1 bytes @ 0x1D
   726  003D                     	ds	1
   727  003E                     ___fttol@lval:	
   728                           
   729                           ; 4 bytes @ 0x1E
   730  003E                     	ds	4
   731  0042                     ___fttol@exp1:	
   732                           
   733                           ; 1 bytes @ 0x22
   734  0042                     	ds	1
   735  0043                     ?___ftmul:	
   736  0043                     ___ftmul@f1:	
   737                           ; 3 bytes @ 0x23
   738                           
   739                           
   740                           ; 3 bytes @ 0x23
   741  0043                     	ds	3
   742  0046                     ___ftmul@f2:	
   743                           
   744                           ; 3 bytes @ 0x26
   745  0046                     	ds	3
   746  0049                     ??___ftmul:	
   747                           
   748                           ; 0 bytes @ 0x29
   749  0049                     	ds	3
   750  004C                     ___ftmul@exp:	
   751                           
   752                           ; 1 bytes @ 0x2C
   753  004C                     	ds	1
   754  004D                     ___ftmul@f3_as_product:	
   755                           
   756                           ; 3 bytes @ 0x2D
   757  004D                     	ds	3
   758  0050                     ___ftmul@cntr:	
   759                           
   760                           ; 1 bytes @ 0x30
   761  0050                     	ds	1
   762  0051                     ___ftmul@sign:	
   763                           
   764                           ; 1 bytes @ 0x31
   765  0051                     	ds	1
   766  0052                     ?_scale:	
   767  0052                     ?___ftadd:	
   768                           ; 3 bytes @ 0x32
   769                           
   770  0052                     ?___ftdiv:	
   771                           ; 3 bytes @ 0x32
   772                           
   773  0052                     ___ftadd@f1:	
   774                           ; 3 bytes @ 0x32
   775                           
   776  0052                     ___ftdiv@f2:	
   777                           ; 3 bytes @ 0x32
   778                           
   779                           
   780                           ; 3 bytes @ 0x32
   781  0052                     	ds	3
   782  0055                     ??_scale:	
   783  0055                     ___ftadd@f2:	
   784                           ; 0 bytes @ 0x35
   785                           
   786  0055                     ___ftdiv@f1:	
   787                           ; 3 bytes @ 0x35
   788                           
   789                           
   790                           ; 3 bytes @ 0x35
   791  0055                     	ds	3
   792  0058                     ??___ftadd:	
   793  0058                     ??___ftdiv:	
   794                           ; 0 bytes @ 0x38
   795                           
   796                           
   797                           ; 0 bytes @ 0x38
   798  0058                     	ds	1
   799  0059                     _scale$4112:	
   800                           
   801                           ; 3 bytes @ 0x39
   802  0059                     	ds	2
   803  005B                     ___ftadd@sign:	
   804  005B                     ___ftdiv@cntr:	
   805                           ; 1 bytes @ 0x3B
   806                           
   807                           
   808                           ; 1 bytes @ 0x3B
   809  005B                     	ds	1
   810  005C                     scale@scl:	
   811  005C                     ___ftadd@exp2:	
   812                           ; 1 bytes @ 0x3C
   813                           
   814  005C                     ___ftdiv@f3:	
   815                           ; 1 bytes @ 0x3C
   816                           
   817                           
   818                           ; 3 bytes @ 0x3C
   819  005C                     	ds	1
   820  005D                     ___ftadd@exp1:	
   821                           
   822                           ; 1 bytes @ 0x3D
   823  005D                     	ds	1
   824  005E                     ?_fround:	
   825  005E                     ?___ftsub:	
   826                           ; 3 bytes @ 0x3E
   827                           
   828  005E                     ___ftsub@f2:	
   829                           ; 3 bytes @ 0x3E
   830                           
   831                           
   832                           ; 3 bytes @ 0x3E
   833  005E                     	ds	1
   834  005F                     ___ftdiv@exp:	
   835                           
   836                           ; 1 bytes @ 0x3F
   837  005F                     	ds	1
   838  0060                     ___ftdiv@sign:	
   839                           
   840                           ; 1 bytes @ 0x40
   841  0060                     	ds	1
   842  0061                     ??_fround:	
   843  0061                     ___ftsub@f1:	
   844                           ; 0 bytes @ 0x41
   845                           
   846  0061                     _fround$4111:	
   847                           ; 3 bytes @ 0x41
   848                           
   849                           
   850                           ; 3 bytes @ 0x41
   851  0061                     	ds	3
   852  0064                     ??___ftsub:	
   853  0064                     _fround$4110:	
   854                           ; 0 bytes @ 0x44
   855                           
   856                           
   857                           ; 3 bytes @ 0x44
   858  0064                     	ds	3
   859  0067                     fround@prec:	
   860                           
   861                           ; 1 bytes @ 0x47
   862  0067                     	ds	1
   863                           
   864                           	psect	maintext
   865  16E1                     __pmaintext:	
   866 ;;Data sizes: Strings 21, constant 118, data 0, bss 15, persistent 0 stack 0
   867 ;;Auto spaces:   Size  Autos    Used
   868 ;; COMMON          14     14      14
   869 ;; BANK0           80     72      72
   870 ;; BANK1           80     36      51
   871 ;; BANK3           96      0       0
   872 ;; BANK2           96      0       0
   873 ;;
   874 ;; Pointer list with targets:
   875 ;; ?i1___ftpack	float  size(1) Largest target is 0
   876 ;;
   877 ;; ?i1___ftadd	float  size(1) Largest target is 0
   878 ;;
   879 ;; ?___lbtoft	float  size(1) Largest target is 0
   880 ;;
   881 ;; ?___ftpack	float  size(1) Largest target is 0
   882 ;;
   883 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   884 ;;
   885 ;; ?___llmod	unsigned long  size(1) Largest target is 0
   886 ;;
   887 ;; ?___lltoft	float  size(1) Largest target is 0
   888 ;;
   889 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
   890 ;;
   891 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
   892 ;;
   893 ;; ?___fttol	long  size(1) Largest target is 0
   894 ;;
   895 ;; ?___ftneg	float  size(1) Largest target is 0
   896 ;;
   897 ;; ?___awmod	int  size(1) Largest target is 40
   898 ;;		 -> dpowers(CODE[40]), 
   899 ;;
   900 ;; ?___awdiv	int  size(1) Largest target is 0
   901 ;;
   902 ;; ?_scale	int  size(1) Largest target is 0
   903 ;;
   904 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   905 ;;
   906 ;; ?_fround	unsigned int  size(1) Largest target is 0
   907 ;;
   908 ;; ?___ftdiv	float  size(1) Largest target is 0
   909 ;;
   910 ;; ?___ftsub	float  size(1) Largest target is 0
   911 ;;
   912 ;; ?___ftmul	float  size(1) Largest target is 0
   913 ;;
   914 ;; ?___ftadd	float  size(1) Largest target is 0
   915 ;;
   916 ;; printf@f	PTR const unsigned char  size(1) Largest target is 11
   917 ;;		 -> STR_2(CODE[11]), STR_1(CODE[10]), 
   918 ;;
   919 ;; ?_printf	int  size(1) Largest target is 0
   920 ;;
   921 ;; printf@ap	PTR void [1] size(1) Largest target is 2
   922 ;;		 -> ?_printf(BANK1[2]), 
   923 ;;
   924 ;; S3150$_cp	PTR const unsigned char  size(1) Largest target is 0
   925 ;;
   926 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   927 ;;
   928 ;;
   929 ;; Critical Paths under _main in COMMON
   930 ;;
   931 ;;   None.
   932 ;;
   933 ;; Critical Paths under _ngat in COMMON
   934 ;;
   935 ;;   _ngat->i1___ftadd
   936 ;;   i1___ftadd->i1___ftpack
   937 ;;
   938 ;; Critical Paths under _main in BANK0
   939 ;;
   940 ;;   _printf->_fround
   941 ;;   _putch->_lcd_putc
   942 ;;   _lcd_putc->_lcd_gotoxy
   943 ;;   ___ftsub->___ftadd
   944 ;;   _scale->___ftmul
   945 ;;   _fround->___ftadd
   946 ;;   _lcd_gotoxy->_lcd_put_byte
   947 ;;   _lcd_init->_lcd_put_byte
   948 ;;   ___lltoft->___ftpack
   949 ;;   ___lbtoft->___ftpack
   950 ;;   ___ftmul->___fttol
   951 ;;   ___ftdiv->___ftmul
   952 ;;   ___ftadd->___ftmul
   953 ;;   ___llmod->___lldiv
   954 ;;   ___awdiv->___awmod
   955 ;;   ___fttol->___awdiv
   956 ;;   ___lbdiv->___lbmod
   957 ;;   ___bmul->___lbdiv
   958 ;;
   959 ;; Critical Paths under _ngat in BANK0
   960 ;;
   961 ;;   _ngat->i1___ftadd
   962 ;;
   963 ;; Critical Paths under _main in BANK1
   964 ;;
   965 ;;   _main->_printf
   966 ;;
   967 ;; Critical Paths under _ngat in BANK1
   968 ;;
   969 ;;   None.
   970 ;;
   971 ;; Critical Paths under _main in BANK3
   972 ;;
   973 ;;   None.
   974 ;;
   975 ;; Critical Paths under _ngat in BANK3
   976 ;;
   977 ;;   None.
   978 ;;
   979 ;; Critical Paths under _main in BANK2
   980 ;;
   981 ;;   None.
   982 ;;
   983 ;; Critical Paths under _ngat in BANK2
   984 ;;
   985 ;;   None.
   986 ;;
   987 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   988 ;;
   989 ;;
   990 ;;Call Graph Tables:
   991 ;;
   992 ;; ---------------------------------------------------------------------------------
   993 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   994 ;; ---------------------------------------------------------------------------------
   995 ;; (0) _main                                                 3     3      0   14558
   996 ;;                                             33 BANK1      3     3      0
   997 ;;                           _lcd_init
   998 ;;                           ___lbtoft
   999 ;;                            ___ftmul
  1000 ;;                            ___ftadd
  1001 ;;                            ___ftsub
  1002 ;;                            ___ftdiv
  1003 ;;                         _lcd_gotoxy
  1004 ;;                             _printf
  1005 ;; ---------------------------------------------------------------------------------
  1006 ;; (1) _printf                                              37    34      3   10603
  1007 ;;                                              0 BANK1     33    30      3
  1008 ;;                              _putch
  1009 ;;                            _isdigit
  1010 ;;                             ___wmul
  1011 ;;                             ___ftge
  1012 ;;                            ___ftneg
  1013 ;;                            ___awdiv
  1014 ;;                              _scale
  1015 ;;                            ___ftmul
  1016 ;;                             _fround
  1017 ;;                            ___ftadd
  1018 ;;                            ___fttol
  1019 ;;                         __div_to_l_
  1020 ;;                        __tdiv_to_l_
  1021 ;;                           ___lltoft
  1022 ;;                            ___ftsub
  1023 ;;                            ___lldiv
  1024 ;;                            ___llmod
  1025 ;; ---------------------------------------------------------------------------------
  1026 ;; (2) _putch                                                1     1      0     713
  1027 ;;                                             17 BANK0      1     1      0
  1028 ;;                           _lcd_putc
  1029 ;; ---------------------------------------------------------------------------------
  1030 ;; (3) _lcd_putc                                             1     1      0     691
  1031 ;;                                             16 BANK0      1     1      0
  1032 ;;                       _lcd_put_byte
  1033 ;;                           _lcd_busy
  1034 ;;                         _lcd_gotoxy
  1035 ;;                            _isprint
  1036 ;; ---------------------------------------------------------------------------------
  1037 ;; (2) ___ftsub                                              6     0      6    1094
  1038 ;;                                             62 BANK0      6     0      6
  1039 ;;                            ___ftadd
  1040 ;;                           ___lltoft (ARG)
  1041 ;; ---------------------------------------------------------------------------------
  1042 ;; (2) _scale                                               14    11      3    1688
  1043 ;;                                             50 BANK0     11     8      3
  1044 ;;                            ___awmod
  1045 ;;                            ___awdiv
  1046 ;;                            ___ftmul
  1047 ;;                             ___bmul
  1048 ;;                            ___fttol (ARG)
  1049 ;; ---------------------------------------------------------------------------------
  1050 ;; (2) _fround                                              13    10      3    1215
  1051 ;;                                             62 BANK0     10     7      3
  1052 ;;                            ___lbmod
  1053 ;;                             ___bmul
  1054 ;;                            ___lbdiv
  1055 ;;                            ___ftmul
  1056 ;;                            ___ftadd (ARG)
  1057 ;; ---------------------------------------------------------------------------------
  1058 ;; (4) _lcd_gotoxy                                           3     2      1     313
  1059 ;;                                             13 BANK0      3     2      1
  1060 ;;                       _lcd_put_byte
  1061 ;;                           _lcd_busy
  1062 ;; ---------------------------------------------------------------------------------
  1063 ;; (1) _lcd_init                                             4     4      0     244
  1064 ;;                                             13 BANK0      3     3      0
  1065 ;;                       _lcd_put_byte
  1066 ;;                           _lcd_busy
  1067 ;; ---------------------------------------------------------------------------------
  1068 ;; (2) ___lltoft                                             5     1      4     278
  1069 ;;                                             16 BANK0      5     1      4
  1070 ;;                           ___ftpack
  1071 ;; ---------------------------------------------------------------------------------
  1072 ;; (1) ___lbtoft                                             4     1      3     231
  1073 ;;                                             16 BANK0      4     1      3
  1074 ;;                           ___ftpack
  1075 ;; ---------------------------------------------------------------------------------
  1076 ;; (3) ___ftmul                                             15     9      6     535
  1077 ;;                                             35 BANK0     15     9      6
  1078 ;;                           ___ftpack
  1079 ;;                            ___fttol (ARG)
  1080 ;;                            ___awdiv (ARG)
  1081 ;;                            ___awmod (ARG)
  1082 ;;                             ___bmul (ARG)
  1083 ;;                            ___lbdiv (ARG)
  1084 ;;                            ___lbmod (ARG)
  1085 ;; ---------------------------------------------------------------------------------
  1086 ;; (1) ___ftdiv                                             15     9      6     489
  1087 ;;                                             50 BANK0     15     9      6
  1088 ;;                           ___ftpack
  1089 ;;                            ___ftmul (ARG)
  1090 ;; ---------------------------------------------------------------------------------
  1091 ;; (3) ___ftadd                                             12     6      6    1049
  1092 ;;                                             50 BANK0     12     6      6
  1093 ;;                           ___ftpack
  1094 ;;                           ___lbtoft (ARG)
  1095 ;;                            ___ftmul (ARG)
  1096 ;;                            ___lbmod (ARG)
  1097 ;;                             ___bmul (ARG)
  1098 ;;                            ___lbdiv (ARG)
  1099 ;; ---------------------------------------------------------------------------------
  1100 ;; (5) _lcd_busy                                             2     2      0      23
  1101 ;;                                              8 BANK0      2     2      0
  1102 ;; ---------------------------------------------------------------------------------
  1103 ;; (5) _lcd_put_byte                                         5     4      1     221
  1104 ;;                                              8 BANK0      5     4      1
  1105 ;; ---------------------------------------------------------------------------------
  1106 ;; (3) ___awmod                                              6     2      4     296
  1107 ;;                                              8 BANK0      6     2      4
  1108 ;; ---------------------------------------------------------------------------------
  1109 ;; (2) ___lldiv                                             13     5      8     162
  1110 ;;                                              8 BANK0     13     5      8
  1111 ;; ---------------------------------------------------------------------------------
  1112 ;; (2) ___ftge                                               6     0      6     136
  1113 ;;                                              8 BANK0      6     0      6
  1114 ;; ---------------------------------------------------------------------------------
  1115 ;; (2) ___ftneg                                              3     0      3      45
  1116 ;;                                              8 BANK0      3     0      3
  1117 ;; ---------------------------------------------------------------------------------
  1118 ;; (2) ___llmod                                              9     1      8     159
  1119 ;;                                             21 BANK0      9     1      8
  1120 ;;                            ___lldiv (ARG)
  1121 ;; ---------------------------------------------------------------------------------
  1122 ;; (3) ___awdiv                                              8     4      4     300
  1123 ;;                                             14 BANK0      8     4      4
  1124 ;;                            ___awmod (ARG)
  1125 ;; ---------------------------------------------------------------------------------
  1126 ;; (2) ___fttol                                             13     9      4     252
  1127 ;;                                             22 BANK0     13     9      4
  1128 ;;                           ___ftpack (ARG)
  1129 ;;                            ___awmod (ARG)
  1130 ;;                            ___awdiv (ARG)
  1131 ;;                             ___bmul (ARG)
  1132 ;; ---------------------------------------------------------------------------------
  1133 ;; (4) ___ftpack                                             8     3      5     209
  1134 ;;                                              8 BANK0      8     3      5
  1135 ;; ---------------------------------------------------------------------------------
  1136 ;; (3) ___lbmod                                              5     4      1     159
  1137 ;;                                              8 BANK0      5     4      1
  1138 ;; ---------------------------------------------------------------------------------
  1139 ;; (3) ___lbdiv                                              4     3      1     162
  1140 ;;                                             13 BANK0      4     3      1
  1141 ;;                            ___lbmod (ARG)
  1142 ;; ---------------------------------------------------------------------------------
  1143 ;; (2) ___wmul                                               6     2      4      92
  1144 ;;                                              8 BANK0      6     2      4
  1145 ;; ---------------------------------------------------------------------------------
  1146 ;; (3) ___bmul                                               3     2      1      68
  1147 ;;                                             17 BANK0      3     2      1
  1148 ;;                            ___lbmod (ARG)
  1149 ;;                            ___lbdiv (ARG)
  1150 ;; ---------------------------------------------------------------------------------
  1151 ;; (2) __div_to_l_                                          20    14      6     446
  1152 ;;                                              8 BANK0     20    14      6
  1153 ;; ---------------------------------------------------------------------------------
  1154 ;; (2) __tdiv_to_l_                                         15     9      6     303
  1155 ;;                                              8 BANK0     15     9      6
  1156 ;; ---------------------------------------------------------------------------------
  1157 ;; (2) _isdigit                                              2     2      0      68
  1158 ;;                                              8 BANK0      2     2      0
  1159 ;; ---------------------------------------------------------------------------------
  1160 ;; (4) _isprint                                              2     2      0      68
  1161 ;;                                              8 BANK0      2     2      0
  1162 ;; ---------------------------------------------------------------------------------
  1163 ;; Estimated maximum stack depth 5
  1164 ;; ---------------------------------------------------------------------------------
  1165 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1166 ;; ---------------------------------------------------------------------------------
  1167 ;; (6) _ngat                                                 2     2      0    3432
  1168 ;;                                              6 BANK0      2     2      0
  1169 ;;                          i1___ftadd
  1170 ;; ---------------------------------------------------------------------------------
  1171 ;; (7) i1___ftadd                                           12     6      6    3432
  1172 ;;                                              8 COMMON     6     0      6
  1173 ;;                                              0 BANK0      6     6      0
  1174 ;;                         i1___ftpack
  1175 ;; ---------------------------------------------------------------------------------
  1176 ;; (8) i1___ftpack                                           8     3      5     679
  1177 ;;                                              0 COMMON     8     3      5
  1178 ;; ---------------------------------------------------------------------------------
  1179 ;; Estimated maximum stack depth 8
  1180 ;; ---------------------------------------------------------------------------------
  1181 ;; Call Graph Graphs:
  1182 ;; _main (ROOT)
  1183 ;;   _lcd_init
  1184 ;;     _lcd_put_byte
  1185 ;;     _lcd_busy
  1186 ;;   ___lbtoft
  1187 ;;     ___ftpack
  1188 ;;   ___ftmul
  1189 ;;     ___ftpack
  1190 ;;     ___fttol (ARG)
  1191 ;;       ___ftpack (ARG)
  1192 ;;       ___awmod (ARG)
  1193 ;;       ___awdiv (ARG)
  1194 ;;         ___awmod (ARG)
  1195 ;;       ___bmul (ARG)
  1196 ;;         ___lbmod (ARG)
  1197 ;;         ___lbdiv (ARG)
  1198 ;;           ___lbmod (ARG)
  1199 ;;     ___awdiv (ARG)
  1200 ;;       ___awmod (ARG)
  1201 ;;     ___awmod (ARG)
  1202 ;;     ___bmul (ARG)
  1203 ;;       ___lbmod (ARG)
  1204 ;;       ___lbdiv (ARG)
  1205 ;;         ___lbmod (ARG)
  1206 ;;     ___lbdiv (ARG)
  1207 ;;       ___lbmod (ARG)
  1208 ;;     ___lbmod (ARG)
  1209 ;;   ___ftadd
  1210 ;;     ___ftpack
  1211 ;;     ___lbtoft (ARG)
  1212 ;;       ___ftpack
  1213 ;;     ___ftmul (ARG)
  1214 ;;       ___ftpack
  1215 ;;       ___fttol (ARG)
  1216 ;;         ___ftpack (ARG)
  1217 ;;         ___awmod (ARG)
  1218 ;;         ___awdiv (ARG)
  1219 ;;           ___awmod (ARG)
  1220 ;;         ___bmul (ARG)
  1221 ;;           ___lbmod (ARG)
  1222 ;;           ___lbdiv (ARG)
  1223 ;;             ___lbmod (ARG)
  1224 ;;       ___awdiv (ARG)
  1225 ;;         ___awmod (ARG)
  1226 ;;       ___awmod (ARG)
  1227 ;;       ___bmul (ARG)
  1228 ;;         ___lbmod (ARG)
  1229 ;;         ___lbdiv (ARG)
  1230 ;;           ___lbmod (ARG)
  1231 ;;       ___lbdiv (ARG)
  1232 ;;         ___lbmod (ARG)
  1233 ;;       ___lbmod (ARG)
  1234 ;;     ___lbmod (ARG)
  1235 ;;     ___bmul (ARG)
  1236 ;;       ___lbmod (ARG)
  1237 ;;       ___lbdiv (ARG)
  1238 ;;         ___lbmod (ARG)
  1239 ;;     ___lbdiv (ARG)
  1240 ;;       ___lbmod (ARG)
  1241 ;;   ___ftsub
  1242 ;;     ___ftadd
  1243 ;;       ___ftpack
  1244 ;;       ___lbtoft (ARG)
  1245 ;;         ___ftpack
  1246 ;;       ___ftmul (ARG)
  1247 ;;         ___ftpack
  1248 ;;         ___fttol (ARG)
  1249 ;;           ___ftpack (ARG)
  1250 ;;           ___awmod (ARG)
  1251 ;;           ___awdiv (ARG)
  1252 ;;             ___awmod (ARG)
  1253 ;;           ___bmul (ARG)
  1254 ;;             ___lbmod (ARG)
  1255 ;;             ___lbdiv (ARG)
  1256 ;;               ___lbmod (ARG)
  1257 ;;         ___awdiv (ARG)
  1258 ;;           ___awmod (ARG)
  1259 ;;         ___awmod (ARG)
  1260 ;;         ___bmul (ARG)
  1261 ;;           ___lbmod (ARG)
  1262 ;;           ___lbdiv (ARG)
  1263 ;;             ___lbmod (ARG)
  1264 ;;         ___lbdiv (ARG)
  1265 ;;           ___lbmod (ARG)
  1266 ;;         ___lbmod (ARG)
  1267 ;;       ___lbmod (ARG)
  1268 ;;       ___bmul (ARG)
  1269 ;;         ___lbmod (ARG)
  1270 ;;         ___lbdiv (ARG)
  1271 ;;           ___lbmod (ARG)
  1272 ;;       ___lbdiv (ARG)
  1273 ;;         ___lbmod (ARG)
  1274 ;;     ___lltoft (ARG)
  1275 ;;       ___ftpack
  1276 ;;   ___ftdiv
  1277 ;;     ___ftpack
  1278 ;;     ___ftmul (ARG)
  1279 ;;       ___ftpack
  1280 ;;       ___fttol (ARG)
  1281 ;;         ___ftpack (ARG)
  1282 ;;         ___awmod (ARG)
  1283 ;;         ___awdiv (ARG)
  1284 ;;           ___awmod (ARG)
  1285 ;;         ___bmul (ARG)
  1286 ;;           ___lbmod (ARG)
  1287 ;;           ___lbdiv (ARG)
  1288 ;;             ___lbmod (ARG)
  1289 ;;       ___awdiv (ARG)
  1290 ;;         ___awmod (ARG)
  1291 ;;       ___awmod (ARG)
  1292 ;;       ___bmul (ARG)
  1293 ;;         ___lbmod (ARG)
  1294 ;;         ___lbdiv (ARG)
  1295 ;;           ___lbmod (ARG)
  1296 ;;       ___lbdiv (ARG)
  1297 ;;         ___lbmod (ARG)
  1298 ;;       ___lbmod (ARG)
  1299 ;;   _lcd_gotoxy
  1300 ;;     _lcd_put_byte
  1301 ;;     _lcd_busy
  1302 ;;   _printf
  1303 ;;     _putch
  1304 ;;       _lcd_putc
  1305 ;;         _lcd_put_byte
  1306 ;;         _lcd_busy
  1307 ;;         _lcd_gotoxy
  1308 ;;           _lcd_put_byte
  1309 ;;           _lcd_busy
  1310 ;;         _isprint
  1311 ;;     _isdigit
  1312 ;;     ___wmul
  1313 ;;     ___ftge
  1314 ;;     ___ftneg
  1315 ;;     ___awdiv
  1316 ;;       ___awmod (ARG)
  1317 ;;     _scale
  1318 ;;       ___awmod
  1319 ;;       ___awdiv
  1320 ;;         ___awmod (ARG)
  1321 ;;       ___ftmul
  1322 ;;         ___ftpack
  1323 ;;         ___fttol (ARG)
  1324 ;;           ___ftpack (ARG)
  1325 ;;           ___awmod (ARG)
  1326 ;;           ___awdiv (ARG)
  1327 ;;             ___awmod (ARG)
  1328 ;;           ___bmul (ARG)
  1329 ;;             ___lbmod (ARG)
  1330 ;;             ___lbdiv (ARG)
  1331 ;;               ___lbmod (ARG)
  1332 ;;         ___awdiv (ARG)
  1333 ;;           ___awmod (ARG)
  1334 ;;         ___awmod (ARG)
  1335 ;;         ___bmul (ARG)
  1336 ;;           ___lbmod (ARG)
  1337 ;;           ___lbdiv (ARG)
  1338 ;;             ___lbmod (ARG)
  1339 ;;         ___lbdiv (ARG)
  1340 ;;           ___lbmod (ARG)
  1341 ;;         ___lbmod (ARG)
  1342 ;;       ___bmul
  1343 ;;         ___lbmod (ARG)
  1344 ;;         ___lbdiv (ARG)
  1345 ;;           ___lbmod (ARG)
  1346 ;;       ___fttol (ARG)
  1347 ;;         ___ftpack (ARG)
  1348 ;;         ___awmod (ARG)
  1349 ;;         ___awdiv (ARG)
  1350 ;;           ___awmod (ARG)
  1351 ;;         ___bmul (ARG)
  1352 ;;           ___lbmod (ARG)
  1353 ;;           ___lbdiv (ARG)
  1354 ;;             ___lbmod (ARG)
  1355 ;;     ___ftmul
  1356 ;;       ___ftpack
  1357 ;;       ___fttol (ARG)
  1358 ;;         ___ftpack (ARG)
  1359 ;;         ___awmod (ARG)
  1360 ;;         ___awdiv (ARG)
  1361 ;;           ___awmod (ARG)
  1362 ;;         ___bmul (ARG)
  1363 ;;           ___lbmod (ARG)
  1364 ;;           ___lbdiv (ARG)
  1365 ;;             ___lbmod (ARG)
  1366 ;;       ___awdiv (ARG)
  1367 ;;         ___awmod (ARG)
  1368 ;;       ___awmod (ARG)
  1369 ;;       ___bmul (ARG)
  1370 ;;         ___lbmod (ARG)
  1371 ;;         ___lbdiv (ARG)
  1372 ;;           ___lbmod (ARG)
  1373 ;;       ___lbdiv (ARG)
  1374 ;;         ___lbmod (ARG)
  1375 ;;       ___lbmod (ARG)
  1376 ;;     _fround
  1377 ;;       ___lbmod
  1378 ;;       ___bmul
  1379 ;;         ___lbmod (ARG)
  1380 ;;         ___lbdiv (ARG)
  1381 ;;           ___lbmod (ARG)
  1382 ;;       ___lbdiv
  1383 ;;         ___lbmod (ARG)
  1384 ;;       ___ftmul
  1385 ;;         ___ftpack
  1386 ;;         ___fttol (ARG)
  1387 ;;           ___ftpack (ARG)
  1388 ;;           ___awmod (ARG)
  1389 ;;           ___awdiv (ARG)
  1390 ;;             ___awmod (ARG)
  1391 ;;           ___bmul (ARG)
  1392 ;;             ___lbmod (ARG)
  1393 ;;             ___lbdiv (ARG)
  1394 ;;               ___lbmod (ARG)
  1395 ;;         ___awdiv (ARG)
  1396 ;;           ___awmod (ARG)
  1397 ;;         ___awmod (ARG)
  1398 ;;         ___bmul (ARG)
  1399 ;;           ___lbmod (ARG)
  1400 ;;           ___lbdiv (ARG)
  1401 ;;             ___lbmod (ARG)
  1402 ;;         ___lbdiv (ARG)
  1403 ;;           ___lbmod (ARG)
  1404 ;;         ___lbmod (ARG)
  1405 ;;       ___ftadd (ARG)
  1406 ;;         ___ftpack
  1407 ;;         ___lbtoft (ARG)
  1408 ;;           ___ftpack
  1409 ;;         ___ftmul (ARG)
  1410 ;;           ___ftpack
  1411 ;;           ___fttol (ARG)
  1412 ;;             ___ftpack (ARG)
  1413 ;;             ___awmod (ARG)
  1414 ;;             ___awdiv (ARG)
  1415 ;;               ___awmod (ARG)
  1416 ;;             ___bmul (ARG)
  1417 ;;               ___lbmod (ARG)
  1418 ;;               ___lbdiv (ARG)
  1419 ;;                 ___lbmod (ARG)
  1420 ;;           ___awdiv (ARG)
  1421 ;;             ___awmod (ARG)
  1422 ;;           ___awmod (ARG)
  1423 ;;           ___bmul (ARG)
  1424 ;;             ___lbmod (ARG)
  1425 ;;             ___lbdiv (ARG)
  1426 ;;               ___lbmod (ARG)
  1427 ;;           ___lbdiv (ARG)
  1428 ;;             ___lbmod (ARG)
  1429 ;;           ___lbmod (ARG)
  1430 ;;         ___lbmod (ARG)
  1431 ;;         ___bmul (ARG)
  1432 ;;           ___lbmod (ARG)
  1433 ;;           ___lbdiv (ARG)
  1434 ;;             ___lbmod (ARG)
  1435 ;;         ___lbdiv (ARG)
  1436 ;;           ___lbmod (ARG)
  1437 ;;     ___ftadd
  1438 ;;       ___ftpack
  1439 ;;       ___lbtoft (ARG)
  1440 ;;         ___ftpack
  1441 ;;       ___ftmul (ARG)
  1442 ;;         ___ftpack
  1443 ;;         ___fttol (ARG)
  1444 ;;           ___ftpack (ARG)
  1445 ;;           ___awmod (ARG)
  1446 ;;           ___awdiv (ARG)
  1447 ;;             ___awmod (ARG)
  1448 ;;           ___bmul (ARG)
  1449 ;;             ___lbmod (ARG)
  1450 ;;             ___lbdiv (ARG)
  1451 ;;               ___lbmod (ARG)
  1452 ;;         ___awdiv (ARG)
  1453 ;;           ___awmod (ARG)
  1454 ;;         ___awmod (ARG)
  1455 ;;         ___bmul (ARG)
  1456 ;;           ___lbmod (ARG)
  1457 ;;           ___lbdiv (ARG)
  1458 ;;             ___lbmod (ARG)
  1459 ;;         ___lbdiv (ARG)
  1460 ;;           ___lbmod (ARG)
  1461 ;;         ___lbmod (ARG)
  1462 ;;       ___lbmod (ARG)
  1463 ;;       ___bmul (ARG)
  1464 ;;         ___lbmod (ARG)
  1465 ;;         ___lbdiv (ARG)
  1466 ;;           ___lbmod (ARG)
  1467 ;;       ___lbdiv (ARG)
  1468 ;;         ___lbmod (ARG)
  1469 ;;     ___fttol
  1470 ;;       ___ftpack (ARG)
  1471 ;;       ___awmod (ARG)
  1472 ;;       ___awdiv (ARG)
  1473 ;;         ___awmod (ARG)
  1474 ;;       ___bmul (ARG)
  1475 ;;         ___lbmod (ARG)
  1476 ;;         ___lbdiv (ARG)
  1477 ;;           ___lbmod (ARG)
  1478 ;;     __div_to_l_
  1479 ;;     __tdiv_to_l_
  1480 ;;     ___lltoft
  1481 ;;       ___ftpack
  1482 ;;     ___ftsub
  1483 ;;       ___ftadd
  1484 ;;         ___ftpack
  1485 ;;         ___lbtoft (ARG)
  1486 ;;           ___ftpack
  1487 ;;         ___ftmul (ARG)
  1488 ;;           ___ftpack
  1489 ;;           ___fttol (ARG)
  1490 ;;             ___ftpack (ARG)
  1491 ;;             ___awmod (ARG)
  1492 ;;             ___awdiv (ARG)
  1493 ;;               ___awmod (ARG)
  1494 ;;             ___bmul (ARG)
  1495 ;;               ___lbmod (ARG)
  1496 ;;               ___lbdiv (ARG)
  1497 ;;                 ___lbmod (ARG)
  1498 ;;           ___awdiv (ARG)
  1499 ;;             ___awmod (ARG)
  1500 ;;           ___awmod (ARG)
  1501 ;;           ___bmul (ARG)
  1502 ;;             ___lbmod (ARG)
  1503 ;;             ___lbdiv (ARG)
  1504 ;;               ___lbmod (ARG)
  1505 ;;           ___lbdiv (ARG)
  1506 ;;             ___lbmod (ARG)
  1507 ;;           ___lbmod (ARG)
  1508 ;;         ___lbmod (ARG)
  1509 ;;         ___bmul (ARG)
  1510 ;;           ___lbmod (ARG)
  1511 ;;           ___lbdiv (ARG)
  1512 ;;             ___lbmod (ARG)
  1513 ;;         ___lbdiv (ARG)
  1514 ;;           ___lbmod (ARG)
  1515 ;;       ___lltoft (ARG)
  1516 ;;         ___ftpack
  1517 ;;     ___lldiv
  1518 ;;     ___llmod
  1519 ;;       ___lldiv (ARG)
  1520 ;;
  1521 ;; _ngat (ROOT)
  1522 ;;   i1___ftadd
  1523 ;;     i1___ftpack
  1524 ;;
  1525 ;; Address spaces:
  1526 ;;Name               Size   Autos  Total    Cost      Usage
  1527 ;;BITCOMMON            E      0       0       0        0.0%
  1528 ;;EEDATA             100      0       0       0        0.0%
  1529 ;;NULL                 0      0       0       0        0.0%
  1530 ;;CODE                 0      0       0       0        0.0%
  1531 ;;COMMON               E      E       E       1      100.0%
  1532 ;;BITSFR0              0      0       0       1        0.0%
  1533 ;;SFR0                 0      0       0       1        0.0%
  1534 ;;BITSFR1              0      0       0       2        0.0%
  1535 ;;SFR1                 0      0       0       2        0.0%
  1536 ;;STACK                0      0       B       2        0.0%
  1537 ;;ABS                  0      0      89       3        0.0%
  1538 ;;BITBANK0            50      0       0       4        0.0%
  1539 ;;BITSFR3              0      0       0       4        0.0%
  1540 ;;SFR3                 0      0       0       4        0.0%
  1541 ;;BANK0               50     48      48       5       90.0%
  1542 ;;BITSFR2              0      0       0       5        0.0%
  1543 ;;SFR2                 0      0       0       5        0.0%
  1544 ;;BITBANK1            50      0       0       6        0.0%
  1545 ;;BANK1               50     24      33       7       63.8%
  1546 ;;BITBANK3            60      0       0       8        0.0%
  1547 ;;BANK3               60      0       0       9        0.0%
  1548 ;;BITBANK2            60      0       0      10        0.0%
  1549 ;;BANK2               60      0       0      11        0.0%
  1550 ;;DATA                 0      0      94      12        0.0%
  1551                           
  1552                           
  1553 ;; *************** function _main *****************
  1554 ;; Defined at:
  1555 ;;		line 15 in file "C:\Online Class\HK6\Practice_Micro\tmr0 counter\tmr0 ct.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;		None
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;		None
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  2  1044[COMMON] int 
  1562 ;; Registers used:
  1563 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1564 ;; Tracked objects:
  1565 ;;		On entry : 17F/0
  1566 ;;		On exit  : 60/20
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1569 ;;      Params:         0       0       0       0       0
  1570 ;;      Locals:         0       0       0       0       0
  1571 ;;      Temps:          0       0       3       0       0
  1572 ;;      Totals:         0       0       3       0       0
  1573 ;;Total ram usage:        3 bytes
  1574 ;; Hardware stack levels required when called:    8
  1575 ;; This function calls:
  1576 ;;		_lcd_init
  1577 ;;		___lbtoft
  1578 ;;		___ftmul
  1579 ;;		___ftadd
  1580 ;;		___ftsub
  1581 ;;		___ftdiv
  1582 ;;		_lcd_gotoxy
  1583 ;;		_printf
  1584 ;; This function is called by:
  1585 ;;		Startup code after reset
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588  16E1                     _main:	
  1589                           
  1590                           ;tmr0 ct.c: 16: TRISA4=1;
  1591                           
  1592                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1593  16E1  1683               	bsf	3,5	;RP0=1, select bank1
  1594  16E2  1605               	bsf	5,4
  1595                           
  1596                           ;tmr0 ct.c: 17: TRISD=0X00;
  1597  16E3  0188               	clrf	8	;volatile
  1598                           
  1599                           ;tmr0 ct.c: 19: ANSEL=ANSELH=0;
  1600  16E4  1703               	bsf	3,6	;RP1=1, select bank3
  1601  16E5  0189               	clrf	9	;volatile
  1602  16E6  0188               	clrf	8	;volatile
  1603                           
  1604                           ;tmr0 ct.c: 20: T0CS=1;
  1605  16E7  1303               	bcf	3,6	;RP1=0, select bank1
  1606  16E8  1681               	bsf	1,5
  1607                           
  1608                           ;tmr0 ct.c: 21: T0SE=0;
  1609  16E9  1201               	bcf	1,4
  1610                           
  1611                           ;tmr0 ct.c: 22: PSA=1;
  1612  16EA  1581               	bsf	1,3
  1613                           
  1614                           ;tmr0 ct.c: 25: TMR0=0;
  1615  16EB  1283               	bcf	3,5	;RP0=0, select bank0
  1616  16EC  0181               	clrf	1	;volatile
  1617                           
  1618                           ;tmr0 ct.c: 27: T0IE = 1;
  1619  16ED  168B               	bsf	11,5
  1620                           
  1621                           ;tmr0 ct.c: 28: T0IF = 0;
  1622  16EE  110B               	bcf	11,2
  1623                           
  1624                           ;tmr0 ct.c: 29: GIE=1;
  1625  16EF  178B               	bsf	11,7
  1626                           
  1627                           ;tmr0 ct.c: 31: lcd_init();
  1628  16F0  120A  158A  2299   	fcall	_lcd_init
      +       160A  118A         
  1629  16F5                     l7454:	
  1630                           
  1631                           ;tmr0 ct.c: 34: {
  1632                           ;tmr0 ct.c: 35: sum=dem*256+TMR0;
  1633  16F5  1283               	bcf	3,5	;RP0=0, select bank0
  1634  16F6  0801               	movf	1,w	;volatile
  1635  16F7  120A  158A  2443   	fcall	___lbtoft
      +       160A  118A         
  1636  16FC  0830               	movf	?___lbtoft,w
  1637  16FD  00D2               	movwf	?___ftadd
  1638  16FE  0831               	movf	?___lbtoft+1,w
  1639  16FF  00D3               	movwf	?___ftadd+1
  1640  1700  0832               	movf	?___lbtoft+2,w
  1641  1701  00D4               	movwf	?___ftadd+2
  1642  1702  3080               	movlw	128
  1643  1703  01C3               	clrf	?___ftmul
  1644  1704  00C4               	movwf	?___ftmul+1
  1645  1705  3043               	movlw	67
  1646  1706  00C5               	movwf	?___ftmul+2
  1647  1707  1683               	bsf	3,5	;RP0=1, select bank1
  1648  1708  0844               	movf	_dem^(0+128),w
  1649  1709  1283               	bcf	3,5	;RP0=0, select bank0
  1650  170A  00C6               	movwf	?___ftmul+3
  1651  170B  1683               	bsf	3,5	;RP0=1, select bank1
  1652  170C  0845               	movf	(_dem+1)^(0+128),w
  1653  170D  1283               	bcf	3,5	;RP0=0, select bank0
  1654  170E  00C7               	movwf	?___ftmul+4
  1655  170F  1683               	bsf	3,5	;RP0=1, select bank1
  1656  1710  0846               	movf	(_dem+2)^(0+128),w
  1657  1711  1283               	bcf	3,5	;RP0=0, select bank0
  1658  1712  00C8               	movwf	?___ftmul+5
  1659  1713  120A  158A  26EC   	fcall	___ftmul
      +       160A  118A         
  1660  1718  0843               	movf	?___ftmul,w
  1661  1719  00D5               	movwf	?___ftadd+3
  1662  171A  0844               	movf	?___ftmul+1,w
  1663  171B  00D6               	movwf	?___ftadd+4
  1664  171C  0845               	movf	?___ftmul+2,w
  1665  171D  00D7               	movwf	?___ftadd+5
  1666  171E  120A  118A  264F   	fcall	___ftadd
      +       160A  118A         
  1667  1723  0852               	movf	?___ftadd,w
  1668  1724  1683               	bsf	3,5	;RP0=1, select bank1
  1669  1725  00CD               	movwf	_sum^(0+128)
  1670  1726  1283               	bcf	3,5	;RP0=0, select bank0
  1671  1727  0853               	movf	?___ftadd+1,w
  1672  1728  1683               	bsf	3,5	;RP0=1, select bank1
  1673  1729  00CE               	movwf	(_sum+1)^(0+128)
  1674  172A  1283               	bcf	3,5	;RP0=0, select bank0
  1675  172B  0854               	movf	?___ftadd+2,w
  1676  172C  1683               	bsf	3,5	;RP0=1, select bank1
  1677  172D  00CF               	movwf	(_sum+2)^(0+128)
  1678                           
  1679                           ;tmr0 ct.c: 36: tam=sum;
  1680  172E  084D               	movf	_sum^(0+128),w
  1681  172F  00D0               	movwf	_tam^(0+128)
  1682  1730  084E               	movf	(_sum+1)^(0+128),w
  1683  1731  00D1               	movwf	(_tam+1)^(0+128)
  1684  1732  084F               	movf	(_sum+2)^(0+128),w
  1685  1733  00D2               	movwf	(_tam+2)^(0+128)
  1686                           
  1687                           ;tmr0 ct.c: 37: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1688  1734  301A               	movlw	26
  1689  1735  00C3               	movwf	(??_main^(0+128)+2)
  1690  1736  305E               	movlw	94
  1691  1737  00C2               	movwf	(??_main^(0+128)+1)
  1692  1738  3086               	movlw	134
  1693  1739  00C1               	movwf	??_main^(0+128)
  1694  173A                     u4607:	
  1695  173A  0BC1               	decfsz	??_main^(0+128),f
  1696  173B  2F3A               	goto	u4607
  1697  173C  0BC2               	decfsz	(??_main^(0+128)+1),f
  1698  173D  2F3A               	goto	u4607
  1699  173E  0BC3               	decfsz	(??_main^(0+128)+2),f
  1700  173F  2F3A               	goto	u4607
  1701  1740  0064               	clrwdt
  1702                           
  1703                           ;tmr0 ct.c: 38: sum=dem*256+TMR0;
  1704  1741  1283               	bcf	3,5	;RP0=0, select bank0
  1705  1742  1303               	bcf	3,6	;RP1=0, select bank0
  1706  1743  0801               	movf	1,w	;volatile
  1707  1744  120A  158A  2443   	fcall	___lbtoft
      +       160A  118A         
  1708  1749  0830               	movf	?___lbtoft,w
  1709  174A  00D2               	movwf	?___ftadd
  1710  174B  0831               	movf	?___lbtoft+1,w
  1711  174C  00D3               	movwf	?___ftadd+1
  1712  174D  0832               	movf	?___lbtoft+2,w
  1713  174E  00D4               	movwf	?___ftadd+2
  1714  174F  3080               	movlw	128
  1715  1750  01C3               	clrf	?___ftmul
  1716  1751  00C4               	movwf	?___ftmul+1
  1717  1752  3043               	movlw	67
  1718  1753  00C5               	movwf	?___ftmul+2
  1719  1754  1683               	bsf	3,5	;RP0=1, select bank1
  1720  1755  0844               	movf	_dem^(0+128),w
  1721  1756  1283               	bcf	3,5	;RP0=0, select bank0
  1722  1757  00C6               	movwf	?___ftmul+3
  1723  1758  1683               	bsf	3,5	;RP0=1, select bank1
  1724  1759  0845               	movf	(_dem+1)^(0+128),w
  1725  175A  1283               	bcf	3,5	;RP0=0, select bank0
  1726  175B  00C7               	movwf	?___ftmul+4
  1727  175C  1683               	bsf	3,5	;RP0=1, select bank1
  1728  175D  0846               	movf	(_dem+2)^(0+128),w
  1729  175E  1283               	bcf	3,5	;RP0=0, select bank0
  1730  175F  00C8               	movwf	?___ftmul+5
  1731  1760  120A  158A  26EC   	fcall	___ftmul
      +       160A  118A         
  1732  1765  0843               	movf	?___ftmul,w
  1733  1766  00D5               	movwf	?___ftadd+3
  1734  1767  0844               	movf	?___ftmul+1,w
  1735  1768  00D6               	movwf	?___ftadd+4
  1736  1769  0845               	movf	?___ftmul+2,w
  1737  176A  00D7               	movwf	?___ftadd+5
  1738  176B  120A  118A  264F   	fcall	___ftadd
      +       160A  118A         
  1739  1770  0852               	movf	?___ftadd,w
  1740  1771  1683               	bsf	3,5	;RP0=1, select bank1
  1741  1772  00CD               	movwf	_sum^(0+128)
  1742  1773  1283               	bcf	3,5	;RP0=0, select bank0
  1743  1774  0853               	movf	?___ftadd+1,w
  1744  1775  1683               	bsf	3,5	;RP0=1, select bank1
  1745  1776  00CE               	movwf	(_sum+1)^(0+128)
  1746  1777  1283               	bcf	3,5	;RP0=0, select bank0
  1747  1778  0854               	movf	?___ftadd+2,w
  1748  1779  1683               	bsf	3,5	;RP0=1, select bank1
  1749  177A  00CF               	movwf	(_sum+2)^(0+128)
  1750                           
  1751                           ;tmr0 ct.c: 39: kq=sum-tam;
  1752  177B  0850               	movf	_tam^(0+128),w
  1753  177C  1283               	bcf	3,5	;RP0=0, select bank0
  1754  177D  00DE               	movwf	?___ftsub
  1755  177E  1683               	bsf	3,5	;RP0=1, select bank1
  1756  177F  0851               	movf	(_tam+1)^(0+128),w
  1757  1780  1283               	bcf	3,5	;RP0=0, select bank0
  1758  1781  00DF               	movwf	?___ftsub+1
  1759  1782  1683               	bsf	3,5	;RP0=1, select bank1
  1760  1783  0852               	movf	(_tam+2)^(0+128),w
  1761  1784  1283               	bcf	3,5	;RP0=0, select bank0
  1762  1785  00E0               	movwf	?___ftsub+2
  1763  1786  1683               	bsf	3,5	;RP0=1, select bank1
  1764  1787  084D               	movf	_sum^(0+128),w
  1765  1788  1283               	bcf	3,5	;RP0=0, select bank0
  1766  1789  00E1               	movwf	?___ftsub+3
  1767  178A  1683               	bsf	3,5	;RP0=1, select bank1
  1768  178B  084E               	movf	(_sum+1)^(0+128),w
  1769  178C  1283               	bcf	3,5	;RP0=0, select bank0
  1770  178D  00E2               	movwf	?___ftsub+4
  1771  178E  1683               	bsf	3,5	;RP0=1, select bank1
  1772  178F  084F               	movf	(_sum+2)^(0+128),w
  1773  1790  1283               	bcf	3,5	;RP0=0, select bank0
  1774  1791  00E3               	movwf	?___ftsub+5
  1775  1792  120A  118A  2711   	fcall	___ftsub
      +       160A  118A         
  1776  1797  085E               	movf	?___ftsub,w
  1777  1798  1683               	bsf	3,5	;RP0=1, select bank1
  1778  1799  00C7               	movwf	_kq^(0+128)
  1779  179A  1283               	bcf	3,5	;RP0=0, select bank0
  1780  179B  085F               	movf	?___ftsub+1,w
  1781  179C  1683               	bsf	3,5	;RP0=1, select bank1
  1782  179D  00C8               	movwf	(_kq+1)^(0+128)
  1783  179E  1283               	bcf	3,5	;RP0=0, select bank0
  1784  179F  0860               	movf	?___ftsub+2,w
  1785  17A0  1683               	bsf	3,5	;RP0=1, select bank1
  1786  17A1  00C9               	movwf	(_kq+2)^(0+128)
  1787                           
  1788                           ;tmr0 ct.c: 41: rpm=(kq*60)/360;
  1789  17A2  1283               	bcf	3,5	;RP0=0, select bank0
  1790  17A3  30B4               	movlw	180
  1791  17A4  01D2               	clrf	?___ftdiv
  1792  17A5  00D3               	movwf	?___ftdiv+1
  1793  17A6  3043               	movlw	67
  1794  17A7  00D4               	movwf	?___ftdiv+2
  1795  17A8  3070               	movlw	112
  1796  17A9  01C3               	clrf	?___ftmul
  1797  17AA  00C4               	movwf	?___ftmul+1
  1798  17AB  3042               	movlw	66
  1799  17AC  00C5               	movwf	?___ftmul+2
  1800  17AD  1683               	bsf	3,5	;RP0=1, select bank1
  1801  17AE  0847               	movf	_kq^(0+128),w
  1802  17AF  1283               	bcf	3,5	;RP0=0, select bank0
  1803  17B0  00C6               	movwf	?___ftmul+3
  1804  17B1  1683               	bsf	3,5	;RP0=1, select bank1
  1805  17B2  0848               	movf	(_kq+1)^(0+128),w
  1806  17B3  1283               	bcf	3,5	;RP0=0, select bank0
  1807  17B4  00C7               	movwf	?___ftmul+4
  1808  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  1809  17B6  0849               	movf	(_kq+2)^(0+128),w
  1810  17B7  1283               	bcf	3,5	;RP0=0, select bank0
  1811  17B8  00C8               	movwf	?___ftmul+5
  1812  17B9  120A  158A  26EC   	fcall	___ftmul
      +       160A  118A         
  1813  17BE  0843               	movf	?___ftmul,w
  1814  17BF  00D5               	movwf	?___ftdiv+3
  1815  17C0  0844               	movf	?___ftmul+1,w
  1816  17C1  00D6               	movwf	?___ftdiv+4
  1817  17C2  0845               	movf	?___ftmul+2,w
  1818  17C3  00D7               	movwf	?___ftdiv+5
  1819  17C4  120A  158A  2470   	fcall	___ftdiv
      +       160A  118A         
  1820  17C9  0852               	movf	?___ftdiv,w
  1821  17CA  1683               	bsf	3,5	;RP0=1, select bank1
  1822  17CB  00CA               	movwf	_rpm^(0+128)
  1823  17CC  1283               	bcf	3,5	;RP0=0, select bank0
  1824  17CD  0853               	movf	?___ftdiv+1,w
  1825  17CE  1683               	bsf	3,5	;RP0=1, select bank1
  1826  17CF  00CB               	movwf	(_rpm+1)^(0+128)
  1827  17D0  1283               	bcf	3,5	;RP0=0, select bank0
  1828  17D1  0854               	movf	?___ftdiv+2,w
  1829  17D2  1683               	bsf	3,5	;RP0=1, select bank1
  1830  17D3  00CC               	movwf	(_rpm+2)^(0+128)
  1831                           
  1832                           ;tmr0 ct.c: 43: lcd_gotoxy(0,0);
  1833  17D4  1283               	bcf	3,5	;RP0=0, select bank0
  1834  17D5  3000               	movlw	0
  1835  17D6  01AD               	clrf	?_lcd_gotoxy
  1836  17D7  120A  158A  2252   	fcall	_lcd_gotoxy
      +       160A  118A         
  1837                           
  1838                           ;tmr0 ct.c: 44: printf("pps:%3.0f",kq);
  1839  17DC  1683               	bsf	3,5	;RP0=1, select bank1
  1840  17DD  0847               	movf	_kq^(0+128),w
  1841  17DE  00A0               	movwf	?_printf^(0+128)
  1842  17DF  0848               	movf	(_kq+1)^(0+128),w
  1843  17E0  00A1               	movwf	(?_printf+1)^(0+128)
  1844  17E1  0849               	movf	(_kq+2)^(0+128),w
  1845  17E2  00A2               	movwf	(?_printf+2)^(0+128)
  1846  17E3  3082               	movlw	(STR_1-__stringbase)& (0+255)
  1847  17E4  120A  118A  2011   	fcall	_printf
      +       160A  118A         
  1848                           
  1849                           ;tmr0 ct.c: 46: lcd_gotoxy(0,1);
  1850  17E9  1283               	bcf	3,5	;RP0=0, select bank0
  1851  17EA  3000               	movlw	0
  1852  17EB  01AD               	clrf	?_lcd_gotoxy
  1853  17EC  0AAD               	incf	?_lcd_gotoxy,f
  1854  17ED  120A  158A  2252   	fcall	_lcd_gotoxy
      +       160A  118A         
  1855                           
  1856                           ;tmr0 ct.c: 47: printf("rpm: %3.1f",rpm);
  1857  17F2  1683               	bsf	3,5	;RP0=1, select bank1
  1858  17F3  084A               	movf	_rpm^(0+128),w
  1859  17F4  00A0               	movwf	?_printf^(0+128)
  1860  17F5  084B               	movf	(_rpm+1)^(0+128),w
  1861  17F6  00A1               	movwf	(?_printf+1)^(0+128)
  1862  17F7  084C               	movf	(_rpm+2)^(0+128),w
  1863  17F8  00A2               	movwf	(?_printf+2)^(0+128)
  1864  17F9  3077               	movlw	(STR_2-__stringbase)& (0+255)
  1865  17FA  120A  118A  2011   	fcall	_printf
      +       160A  118A         
  1866  17FF  2EF5               	goto	l7454
  1867  1800                     __end_of_main:	
  1868                           
  1869                           	psect	text535
  1870  0011                     __ptext535:	
  1871 ;; =============== function _main ends ============
  1872                           
  1873                           
  1874 ;; *************** function _printf *****************
  1875 ;; Defined at:
  1876 ;;		line 461 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;  f               1    wreg     PTR const unsigned char 
  1879 ;;		 -> STR_2(11), STR_1(10), 
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;  f               1   22[BANK1 ] PTR const unsigned char 
  1882 ;;		 -> STR_2(11), STR_1(10), 
  1883 ;;  _val            4   16[BANK1 ] struct .
  1884 ;;  fval            3   27[BANK1 ] struct .
  1885 ;;  integ           3   13[BANK1 ] struct .
  1886 ;;  ival            3    0        struct .
  1887 ;;  prec            2   30[BANK1 ] int 
  1888 ;;  exp             2   25[BANK1 ] int 
  1889 ;;  width           2   23[BANK1 ] int 
  1890 ;;  flag            2   20[BANK1 ] unsigned short 
  1891 ;;  c               1   32[BANK1 ] char 
  1892 ;;  ap              1   12[BANK1 ] PTR void [1]
  1893 ;;		 -> ?_printf(2), 
  1894 ;;  d               1    0        unsigned char 
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  2    0[BANK1 ] int 
  1897 ;; Registers used:
  1898 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1899 ;; Tracked objects:
  1900 ;;		On entry : 60/20
  1901 ;;		On exit  : 60/20
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1904 ;;      Params:         0       0       3       0       0
  1905 ;;      Locals:         0       0      25       0       0
  1906 ;;      Temps:          0       0       5       0       0
  1907 ;;      Totals:         0       0      33       0       0
  1908 ;;Total ram usage:       33 bytes
  1909 ;; Hardware stack levels used:    1
  1910 ;; Hardware stack levels required when called:    7
  1911 ;; This function calls:
  1912 ;;		_putch
  1913 ;;		_isdigit
  1914 ;;		___wmul
  1915 ;;		___ftge
  1916 ;;		___ftneg
  1917 ;;		___awdiv
  1918 ;;		_scale
  1919 ;;		___ftmul
  1920 ;;		_fround
  1921 ;;		___ftadd
  1922 ;;		___fttol
  1923 ;;		__div_to_l_
  1924 ;;		__tdiv_to_l_
  1925 ;;		___lltoft
  1926 ;;		___ftsub
  1927 ;;		___lldiv
  1928 ;;		___llmod
  1929 ;; This function is called by:
  1930 ;;		_main
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933  0011                     _printf:	
  1934                           
  1935 ;; using string table level
  1936                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1937                           ;printf@f stored from wreg
  1938  0011  00B6               	movwf	printf@f^(0+128)
  1939  0012  30A0               	movlw	?_printf& (0+255)
  1940  0013  00AC               	movwf	printf@ap^(0+128)
  1941  0014                     l7434:	
  1942  0014  1683               	bsf	3,5	;RP0=1, select bank1
  1943  0015  0836               	movf	printf@f^(0+128),w
  1944  0016  0AB6               	incf	printf@f^(0+128),f
  1945  0017  0084               	movwf	4
  1946  0018  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1947  001D  00C0               	movwf	printf@c^(0+128)
  1948  001E  08C0               	movf	printf@c^(0+128),f
  1949  001F  1903               	btfsc	3,2
  1950  0020  0008               	return
  1951  0021  3A25               	xorlw	37
  1952  0022  1903               	skipnz
  1953  0023  2826               	goto	l7214
  1954  0024  0840               	movf	printf@c^(0+128),w
  1955  0025  2C90               	goto	L1
  1956  0026                     l7214:	
  1957  0026  01B7               	clrf	printf@width^(0+128)
  1958  0027  01B8               	clrf	(printf@width+1)^(0+128)
  1959  0028  01B4               	clrf	printf@flag^(0+128)
  1960  0029  01B5               	clrf	(printf@flag+1)^(0+128)
  1961  002A  0836               	movf	printf@f^(0+128),w
  1962  002B  0084               	movwf	4
  1963  002C  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1964  0031  24C7  120A  118A   	fcall	_isdigit
  1965  0034  1C03               	btfss	3,0
  1966  0035  285F               	goto	l7226
  1967  0036  1683               	bsf	3,5	;RP0=1, select bank1
  1968  0037  01B7               	clrf	printf@width^(0+128)
  1969  0038  01B8               	clrf	(printf@width+1)^(0+128)
  1970  0039                     l7220:	
  1971  0039  1683               	bsf	3,5	;RP0=1, select bank1
  1972  003A  0838               	movf	(printf@width+1)^(0+128),w
  1973  003B  1283               	bcf	3,5	;RP0=0, select bank0
  1974  003C  00A9               	movwf	?___wmul+1
  1975  003D  1683               	bsf	3,5	;RP0=1, select bank1
  1976  003E  0837               	movf	printf@width^(0+128),w
  1977  003F  27AD  120A  118A   	fcall	PL29	;call to abstracted procedure
  1978  0042  24D6               	fcall	___wmul
  1979  0043  1683               	bsf	3,5	;RP0=1, select bank1
  1980  0044  0836               	movf	printf@f^(0+128),w
  1981  0045  0084               	movwf	4
  1982  0046  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1983  004B  2756               	fcall	PL7	;call to abstracted procedure
  1984  004C  00B7               	movwf	printf@width^(0+128)
  1985  004D  0824               	movf	(??_printf+1)^(0+128),w
  1986  004E  1803               	skipnc
  1987  004F  3E01               	addlw	1
  1988  0050  3EFF               	addlw	255
  1989  0051  00B8               	movwf	(printf@width+1)^(0+128)
  1990  0052  0AB6               	incf	printf@f^(0+128),f
  1991  0053  0836               	movf	printf@f^(0+128),w
  1992  0054  0084               	movwf	4
  1993  0055  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1994  005A  24C7  120A  118A   	fcall	_isdigit
  1995  005D  1803               	btfsc	3,0
  1996  005E  2839               	goto	l7220
  1997  005F                     l7226:	
  1998  005F  1683               	bsf	3,5	;RP0=1, select bank1
  1999  0060  0836               	movf	printf@f^(0+128),w
  2000  0061  0084               	movwf	4
  2001  0062  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2002  0067  3A2E               	xorlw	46
  2003  0068  1D03               	skipz
  2004  0069  2897               	goto	l7240
  2005  006A  1735               	bsf	(printf@flag^(0+128)+1),6
  2006  006B  0AB6               	incf	printf@f^(0+128),f
  2007  006C  01BE               	clrf	printf@prec^(0+128)
  2008  006D  01BF               	clrf	(printf@prec+1)^(0+128)
  2009  006E                     l7238:	
  2010  006E  0836               	movf	printf@f^(0+128),w
  2011  006F  0084               	movwf	4
  2012  0070  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2013  0075  24C7  120A  118A   	fcall	_isdigit
  2014  0078  1C03               	btfss	3,0
  2015  0079  289D               	goto	l7246
  2016  007A  1683               	bsf	3,5	;RP0=1, select bank1
  2017  007B  083F               	movf	(printf@prec+1)^(0+128),w
  2018  007C  1283               	bcf	3,5	;RP0=0, select bank0
  2019  007D  00A9               	movwf	?___wmul+1
  2020  007E  1683               	bsf	3,5	;RP0=1, select bank1
  2021  007F  083E               	movf	printf@prec^(0+128),w
  2022  0080  27AD  120A  118A   	fcall	PL29	;call to abstracted procedure
  2023  0083  24D6               	fcall	___wmul
  2024  0084  1683               	bsf	3,5	;RP0=1, select bank1
  2025  0085  0836               	movf	printf@f^(0+128),w
  2026  0086  0084               	movwf	4
  2027  0087  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2028  008C  2756  120A  118A   	fcall	PL7	;call to abstracted procedure
  2029  008F  00BE               	movwf	printf@prec^(0+128)
  2030  0090  0824               	movf	(??_printf+1)^(0+128),w
  2031  0091  1803               	skipnc
  2032  0092  3E01               	addlw	1
  2033  0093  3EFF               	addlw	255
  2034  0094  00BF               	movwf	(printf@prec+1)^(0+128)
  2035  0095  0AB6               	incf	printf@f^(0+128),f
  2036  0096  286E               	goto	l7238
  2037  0097                     l7240:	
  2038  0097  01BE               	clrf	printf@prec^(0+128)
  2039  0098  01BF               	clrf	(printf@prec+1)^(0+128)
  2040  0099  1635               	bsf	(printf@flag^(0+128)+1),4
  2041  009A  289D               	goto	l7246
  2042  009B                     l2202:	
  2043  009B  1535               	bsf	(printf@flag^(0+128)+1),2
  2044  009C  28AE               	goto	l7248
  2045  009D                     l7246:	
  2046  009D  1683               	bsf	3,5	;RP0=1, select bank1
  2047  009E  0836               	movf	printf@f^(0+128),w
  2048  009F  0AB6               	incf	printf@f^(0+128),f
  2049  00A0  0084               	movwf	4
  2050  00A1  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2051  00A6  00C0               	movwf	printf@c^(0+128)
  2052                           
  2053                           ; Switch size 1, requested type "space"
  2054                           ; Number of cases is 2, Range of values is 0 to 102
  2055                           ; switch strategies available:
  2056                           ; Name         Instructions Cycles
  2057                           ; simple_byte            7     4 (average)
  2058                           ; jumptable            260     6 (fixed)
  2059                           ; rangetable           107     6 (fixed)
  2060                           ; spacedrange          212     9 (fixed)
  2061                           ; locatedrange         103     3 (fixed)
  2062                           ;	Chosen strategy is simple_byte
  2063  00A7  3A00               	xorlw	0	; case 0
  2064  00A8  1903               	skipnz
  2065  00A9  2C94               	goto	l2263
  2066  00AA  3A66               	xorlw	102	; case 102
  2067  00AB  1903               	skipnz
  2068  00AC  289B               	goto	l2202
  2069  00AD  2814               	goto	l7434
  2070  00AE                     l7248:	
  2071  00AE  3007               	movlw	7
  2072  00AF  01A3               	clrf	??_printf^(0+128)
  2073  00B0  0535               	andwf	(printf@flag+1)^(0+128),w
  2074  00B1  00A4               	movwf	(??_printf+1)^(0+128)
  2075  00B2  0423               	iorwf	??_printf^(0+128),w
  2076  00B3  1903               	skipnz
  2077  00B4  2C03               	goto	l7390
  2078  00B5  1E35               	btfss	(printf@flag+1)^(0+128),4
  2079  00B6  28BA               	goto	l7254
  2080  00B7  3006               	movlw	6
  2081  00B8  00BE               	movwf	printf@prec^(0+128)
  2082  00B9  01BF               	clrf	(printf@prec+1)^(0+128)
  2083  00BA                     l7254:	
  2084  00BA  082C               	movf	printf@ap^(0+128),w
  2085  00BB  0084               	movwf	4
  2086  00BC  1383               	bcf	3,7	;select IRP bank0
  2087  00BD  0800               	movf	0,w
  2088  00BE  00BB               	movwf	printf@fval^(0+128)
  2089  00BF  0A84               	incf	4,f
  2090  00C0  0800               	movf	0,w
  2091  00C1  00BC               	movwf	(printf@fval+1)^(0+128)
  2092  00C2  0A84               	incf	4,f
  2093  00C3  0800               	movf	0,w
  2094  00C4  00BD               	movwf	(printf@fval+2)^(0+128)
  2095  00C5  3003               	movlw	3
  2096  00C6  07AC               	addwf	printf@ap^(0+128),f
  2097  00C7  083B               	movf	printf@fval^(0+128),w
  2098  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  2099  00C9  00A8               	movwf	?___ftge
  2100  00CA  1683               	bsf	3,5	;RP0=1, select bank1
  2101  00CB  083C               	movf	(printf@fval+1)^(0+128),w
  2102  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  2103  00CD  00A9               	movwf	?___ftge+1
  2104  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  2105  00CF  083D               	movf	(printf@fval+2)^(0+128),w
  2106  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  2107  00D1  00AA               	movwf	?___ftge+2
  2108  00D2  01AB               	clrf	?___ftge+3
  2109  00D3  01AC               	clrf	?___ftge+4
  2110  00D4  01AD               	clrf	?___ftge+5
  2111  00D5  249B  120A  118A   	fcall	___ftge
  2112  00D8  1803               	btfsc	3,0
  2113  00D9  28F6               	goto	l7264
  2114  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  2115  00DB  083B               	movf	printf@fval^(0+128),w
  2116  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  2117  00DD  00A8               	movwf	?___ftneg
  2118  00DE  1683               	bsf	3,5	;RP0=1, select bank1
  2119  00DF  083C               	movf	(printf@fval+1)^(0+128),w
  2120  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  2121  00E1  00A9               	movwf	?___ftneg+1
  2122  00E2  1683               	bsf	3,5	;RP0=1, select bank1
  2123  00E3  083D               	movf	(printf@fval+2)^(0+128),w
  2124  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  2125  00E5  00AA               	movwf	?___ftneg+2
  2126  00E6  2647  120A  118A   	fcall	___ftneg
  2127  00E9  0828               	movf	?___ftneg,w
  2128  00EA  1683               	bsf	3,5	;RP0=1, select bank1
  2129  00EB  00BB               	movwf	printf@fval^(0+128)
  2130  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  2131  00ED  0829               	movf	?___ftneg+1,w
  2132  00EE  1683               	bsf	3,5	;RP0=1, select bank1
  2133  00EF  00BC               	movwf	(printf@fval+1)^(0+128)
  2134  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  2135  00F1  082A               	movf	?___ftneg+2,w
  2136  00F2  1683               	bsf	3,5	;RP0=1, select bank1
  2137  00F3  00BD               	movwf	(printf@fval+2)^(0+128)
  2138  00F4  3003               	movlw	3
  2139  00F5  04B4               	iorwf	printf@flag^(0+128),f
  2140  00F6                     l7264:	
  2141  00F6  1683               	bsf	3,5	;RP0=1, select bank1
  2142  00F7  01B9               	clrf	printf@exp^(0+128)
  2143  00F8  01BA               	clrf	(printf@exp+1)^(0+128)
  2144  00F9  083D               	movf	(printf@fval+2)^(0+128),w
  2145  00FA  043C               	iorwf	(printf@fval+1)^(0+128),w
  2146  00FB  043B               	iorwf	printf@fval^(0+128),w
  2147  00FC  1903               	skipnz
  2148  00FD  299F               	goto	l7296
  2149  00FE  30BB               	movlw	low printf@fval
  2150  00FF  0084               	movwf	4
  2151  0100  0800               	movf	0,w
  2152  0101  00A3               	movwf	??_printf^(0+128)
  2153  0102  0A84               	incf	4,f
  2154  0103  0800               	movf	0,w
  2155  0104  00A4               	movwf	(??_printf^(0+128)+1)
  2156  0105  0A84               	incf	4,f
  2157  0106  0800               	movf	0,w
  2158  0107  00A5               	movwf	(??_printf^(0+128)+2)
  2159  0108  0A84               	incf	4,f
  2160  0109  0800               	movf	0,w
  2161  010A  00A6               	movwf	(??_printf^(0+128)+3)
  2162  010B  300F               	movlw	15
  2163  010C                     u4255:	
  2164  010C  1003               	clrc
  2165  010D  0CA6               	rrf	(??_printf^(0+128)+3),f
  2166  010E  0CA5               	rrf	(??_printf^(0+128)+2),f
  2167  010F  0CA4               	rrf	(??_printf^(0+128)+1),f
  2168  0110  0CA3               	rrf	??_printf^(0+128),f
  2169  0111  3EFF               	addlw	-1
  2170  0112  1D03               	skipz
  2171  0113  290C               	goto	u4255
  2172  0114  0824               	movf	(??_printf+1)^(0+128),w
  2173  0115  00BA               	movwf	(printf@exp+1)^(0+128)
  2174  0116  0823               	movf	??_printf^(0+128),w
  2175  0117  00B9               	movwf	printf@exp^(0+128)
  2176  0118  3082               	movlw	-126
  2177  0119  01BA               	clrf	(printf@exp+1)^(0+128)
  2178  011A  07B9               	addwf	printf@exp^(0+128),f
  2179  011B  1C03               	skipc
  2180  011C  03BA               	decf	(printf@exp+1)^(0+128),f
  2181  011D  30FF               	movlw	-1
  2182  011E  07B9               	addwf	printf@exp^(0+128),f
  2183  011F  1C03               	skipc
  2184  0120  03BA               	decf	(printf@exp+1)^(0+128),f
  2185  0121  3003               	movlw	3
  2186  0122  1283               	bcf	3,5	;RP0=0, select bank0
  2187  0123  00A8               	movwf	?___wmul
  2188  0124  01A9               	clrf	?___wmul+1
  2189  0125  1683               	bsf	3,5	;RP0=1, select bank1
  2190  0126  083A               	movf	(printf@exp+1)^(0+128),w
  2191  0127  1283               	bcf	3,5	;RP0=0, select bank0
  2192  0128  00AB               	movwf	?___wmul+3
  2193  0129  1683               	bsf	3,5	;RP0=1, select bank1
  2194  012A  0839               	movf	printf@exp^(0+128),w
  2195  012B  1283               	bcf	3,5	;RP0=0, select bank0
  2196  012C  00AA               	movwf	?___wmul+2
  2197  012D  24D6               	fcall	___wmul
  2198  012E  0829               	movf	?___wmul+1,w
  2199  012F  1683               	bsf	3,5	;RP0=1, select bank1
  2200  0130  00BA               	movwf	(printf@exp+1)^(0+128)
  2201  0131  1283               	bcf	3,5	;RP0=0, select bank0
  2202  0132  0828               	movf	?___wmul,w
  2203  0133  1683               	bsf	3,5	;RP0=1, select bank1
  2204  0134  00B9               	movwf	printf@exp^(0+128)
  2205  0135  300A               	movlw	10
  2206  0136  1283               	bcf	3,5	;RP0=0, select bank0
  2207  0137  00AE               	movwf	?___awdiv
  2208  0138  01AF               	clrf	?___awdiv+1
  2209  0139  1683               	bsf	3,5	;RP0=1, select bank1
  2210  013A  083A               	movf	(printf@exp+1)^(0+128),w
  2211  013B  1283               	bcf	3,5	;RP0=0, select bank0
  2212  013C  00B1               	movwf	?___awdiv+3
  2213  013D  1683               	bsf	3,5	;RP0=1, select bank1
  2214  013E  0839               	movf	printf@exp^(0+128),w
  2215  013F  1283               	bcf	3,5	;RP0=0, select bank0
  2216  0140  00B0               	movwf	?___awdiv+2
  2217  0141  120A  158A  266A   	fcall	___awdiv
      +       120A  118A         
  2218  0146  082F               	movf	?___awdiv+1,w
  2219  0147  1683               	bsf	3,5	;RP0=1, select bank1
  2220  0148  00BA               	movwf	(printf@exp+1)^(0+128)
  2221  0149  1283               	bcf	3,5	;RP0=0, select bank0
  2222  014A  082E               	movf	?___awdiv,w
  2223  014B  1683               	bsf	3,5	;RP0=1, select bank1
  2224  014C  00B9               	movwf	printf@exp^(0+128)
  2225  014D  1FBA               	btfss	(printf@exp+1)^(0+128),7
  2226  014E  2953               	goto	l7284
  2227  014F  30FF               	movlw	-1
  2228  0150  07B9               	addwf	printf@exp^(0+128),f
  2229  0151  1C03               	skipc
  2230  0152  03BA               	decf	(printf@exp+1)^(0+128),f
  2231  0153                     l7284:	
  2232  0153  0339               	decf	printf@exp^(0+128),w
  2233  0154  3AFF               	xorlw	255
  2234  0155  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2235  015A  2764  120A  118A   	fcall	PL8	;call to abstracted procedure
  2236  015D  278B               	fcall	PL17	;call to abstracted procedure
  2237  015E  1683               	bsf	3,5	;RP0=1, select bank1
  2238  015F  082D               	movf	printf@integ^(0+128),w
  2239  0160  1283               	bcf	3,5	;RP0=0, select bank0
  2240  0161  00C6               	movwf	?___ftmul+3
  2241  0162  1683               	bsf	3,5	;RP0=1, select bank1
  2242  0163  082E               	movf	(printf@integ+1)^(0+128),w
  2243  0164  1283               	bcf	3,5	;RP0=0, select bank0
  2244  0165  00C7               	movwf	?___ftmul+4
  2245  0166  1683               	bsf	3,5	;RP0=1, select bank1
  2246  0167  082F               	movf	(printf@integ+2)^(0+128),w
  2247  0168  1283               	bcf	3,5	;RP0=0, select bank0
  2248  0169  00C8               	movwf	?___ftmul+5
  2249  016A  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2250  016F  0843               	movf	?___ftmul,w
  2251  0170  1683               	bsf	3,5	;RP0=1, select bank1
  2252  0171  00AD               	movwf	printf@integ^(0+128)
  2253  0172  1283               	bcf	3,5	;RP0=0, select bank0
  2254  0173  0844               	movf	?___ftmul+1,w
  2255  0174  1683               	bsf	3,5	;RP0=1, select bank1
  2256  0175  00AE               	movwf	(printf@integ+1)^(0+128)
  2257  0176  1283               	bcf	3,5	;RP0=0, select bank0
  2258  0177  0845               	movf	?___ftmul+2,w
  2259  0178  1683               	bsf	3,5	;RP0=1, select bank1
  2260  0179  00AF               	movwf	(printf@integ+2)^(0+128)
  2261  017A  2727  120A  118A   	fcall	PL3	;call to abstracted procedure
  2262  017D  3080               	movlw	128
  2263  017E  01AB               	clrf	?___ftge+3
  2264  017F  00AC               	movwf	?___ftge+4
  2265  0180  303F               	movlw	63
  2266  0181  00AD               	movwf	?___ftge+5
  2267  0182  249B  120A  118A   	fcall	___ftge
  2268  0185  1803               	btfsc	3,0
  2269  0186  298D               	goto	l7292
  2270  0187  30FF               	movlw	-1
  2271  0188  1683               	bsf	3,5	;RP0=1, select bank1
  2272  0189  07B9               	addwf	printf@exp^(0+128),f
  2273  018A  1C03               	skipc
  2274  018B  03BA               	decf	(printf@exp+1)^(0+128),f
  2275  018C  299F               	goto	l7296
  2276  018D                     l7292:	
  2277  018D  1683               	bsf	3,5	;RP0=1, select bank1
  2278  018E  2727  120A  118A   	fcall	PL3	;call to abstracted procedure
  2279  0191  3020               	movlw	32
  2280  0192  01AB               	clrf	?___ftge+3
  2281  0193  00AC               	movwf	?___ftge+4
  2282  0194  3041               	movlw	65
  2283  0195  00AD               	movwf	?___ftge+5
  2284  0196  249B  120A  118A   	fcall	___ftge
  2285  0199  1C03               	btfss	3,0
  2286  019A  299F               	goto	l7296
  2287  019B  1683               	bsf	3,5	;RP0=1, select bank1
  2288  019C  0AB9               	incf	printf@exp^(0+128),f
  2289  019D  1903               	skipnz
  2290  019E  0ABA               	incf	(printf@exp+1)^(0+128),f
  2291  019F                     l7296:	
  2292  019F  1683               	bsf	3,5	;RP0=1, select bank1
  2293  01A0  083F               	movf	(printf@prec+1)^(0+128),w
  2294  01A1  3A80               	xorlw	128
  2295  01A2  00FF               	movwf	127
  2296  01A3  3080               	movlw	128
  2297  01A4  027F               	subwf	127,w
  2298  01A5  1D03               	skipz
  2299  01A6  29A9               	goto	u4295
  2300  01A7  300D               	movlw	13
  2301  01A8  023E               	subwf	printf@prec^(0+128),w
  2302  01A9                     u4295:	
  2303  01A9  1803               	skipnc
  2304  01AA  29D2               	goto	l7300
  2305  01AB  27B3               	call	PL30	;select bank 1
  2306  01AC  083E               	movf	printf@prec^(0+128),w
  2307  01AD  120A  158A  2100   	fcall	_fround
      +       120A  118A         
  2308  01B2  085E               	movf	?_fround,w
  2309  01B3  00D2               	movwf	?___ftadd
  2310  01B4  085F               	movf	?_fround+1,w
  2311  01B5  00D3               	movwf	?___ftadd+1
  2312  01B6  0860               	movf	?_fround+2,w
  2313  01B7  00D4               	movwf	?___ftadd+2
  2314  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  2315  01B9  083B               	movf	printf@fval^(0+128),w
  2316  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  2317  01BB  00D5               	movwf	?___ftadd+3
  2318  01BC  1683               	bsf	3,5	;RP0=1, select bank1
  2319  01BD  083C               	movf	(printf@fval+1)^(0+128),w
  2320  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  2321  01BF  00D6               	movwf	?___ftadd+4
  2322  01C0  1683               	bsf	3,5	;RP0=1, select bank1
  2323  01C1  083D               	movf	(printf@fval+2)^(0+128),w
  2324  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  2325  01C3  00D7               	movwf	?___ftadd+5
  2326  01C4  264F  120A  118A   	fcall	___ftadd
  2327  01C7  0852               	movf	?___ftadd,w
  2328  01C8  1683               	bsf	3,5	;RP0=1, select bank1
  2329  01C9  00BB               	movwf	printf@fval^(0+128)
  2330  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  2331  01CB  0853               	movf	?___ftadd+1,w
  2332  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  2333  01CD  00BC               	movwf	(printf@fval+1)^(0+128)
  2334  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  2335  01CF  0854               	movf	?___ftadd+2,w
  2336  01D0  1683               	bsf	3,5	;RP0=1, select bank1
  2337  01D1  00BD               	movwf	(printf@fval+2)^(0+128)
  2338  01D2                     l7300:	
  2339  01D2  27B3               	call	PL30	;select bank 1
  2340  01D3  083A               	movf	(printf@exp+1)^(0+128),w
  2341  01D4  3A80               	xorlw	128
  2342  01D5  00FF               	movwf	127
  2343  01D6  3080               	movlw	128
  2344  01D7  027F               	subwf	127,w
  2345  01D8  1D03               	skipz
  2346  01D9  29DC               	goto	u4305
  2347  01DA  300A               	movlw	10
  2348  01DB  0239               	subwf	printf@exp^(0+128),w
  2349  01DC                     u4305:	
  2350  01DC  1803               	skipnc
  2351  01DD  29FD               	goto	l7308
  2352  01DE  27B3               	call	PL30	;select bank 1
  2353  01DF  083D               	movf	(printf@fval+2)^(0+128),w
  2354  01E0  043C               	iorwf	(printf@fval+1)^(0+128),w
  2355  01E1  043B               	iorwf	printf@fval^(0+128),w
  2356  01E2  1903               	skipnz
  2357  01E3  2A4F               	goto	l7324
  2358  01E4  083B               	movf	printf@fval^(0+128),w
  2359  01E5  2780  120A  118A   	fcall	PL14	;call to abstracted procedure
  2360  01E8  24EF  120A  118A   	fcall	___fttol
  2361  01EB  0839               	movf	?___fttol+3,w
  2362  01EC  0438               	iorwf	?___fttol+2,w
  2363  01ED  0437               	iorwf	?___fttol+1,w
  2364  01EE  0436               	iorwf	?___fttol,w
  2365  01EF  1D03               	skipz
  2366  01F0  2A4F               	goto	l7324
  2367  01F1  1683               	bsf	3,5	;RP0=1, select bank1
  2368  01F2  083A               	movf	(printf@exp+1)^(0+128),w
  2369  01F3  3A80               	xorlw	128
  2370  01F4  00FF               	movwf	127
  2371  01F5  3080               	movlw	128
  2372  01F6  027F               	subwf	127,w
  2373  01F7  1D03               	skipz
  2374  01F8  29FB               	goto	u4335
  2375  01F9  3002               	movlw	2
  2376  01FA  0239               	subwf	printf@exp^(0+128),w
  2377  01FB                     u4335:	
  2378  01FB  1C03               	skipc
  2379  01FC  2A4F               	goto	l7324
  2380  01FD                     l7308:	
  2381  01FD  27B3               	call	PL30	;select bank 1
  2382  01FE  2727  120A  118A   	fcall	PL3	;call to abstracted procedure
  2383  0201  3070               	movlw	112
  2384  0202  00AB               	movwf	?___ftge+3
  2385  0203  3089               	movlw	137
  2386  0204  00AC               	movwf	?___ftge+4
  2387  0205  3040               	movlw	64
  2388  0206  00AD               	movwf	?___ftge+5
  2389  0207  249B  120A  118A   	fcall	___ftge
  2390  020A  1803               	btfsc	3,0
  2391  020B  2A0E               	goto	l7312
  2392  020C  30F7               	movlw	-9
  2393  020D  2A0F               	goto	L2
  2394  020E                     l7312:	
  2395  020E  30F8               	movlw	-8
  2396  020F                     L2:	
  2397  020F  1683               	bsf	3,5	;RP0=1, select bank1
  2398  0210  07B9               	addwf	printf@exp^(0+128),f
  2399  0211  1C03               	skipc
  2400  0212  03BA               	decf	(printf@exp+1)^(0+128),f
  2401  0213  0839               	movf	printf@exp^(0+128),w
  2402  0214  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2403  0219  2764  120A  118A   	fcall	PL8	;call to abstracted procedure
  2404  021C  00A8               	movwf	?__tdiv_to_l_
  2405  021D  1683               	bsf	3,5	;RP0=1, select bank1
  2406  021E  083C               	movf	(printf@fval+1)^(0+128),w
  2407  021F  1283               	bcf	3,5	;RP0=0, select bank0
  2408  0220  00A9               	movwf	?__tdiv_to_l_+1
  2409  0221  1683               	bsf	3,5	;RP0=1, select bank1
  2410  0222  083D               	movf	(printf@fval+2)^(0+128),w
  2411  0223  1283               	bcf	3,5	;RP0=0, select bank0
  2412  0224  00AA               	movwf	?__tdiv_to_l_+2
  2413  0225  1683               	bsf	3,5	;RP0=1, select bank1
  2414  0226  082D               	movf	printf@integ^(0+128),w
  2415  0227  1283               	bcf	3,5	;RP0=0, select bank0
  2416  0228  00AB               	movwf	?__tdiv_to_l_+3
  2417  0229  1683               	bsf	3,5	;RP0=1, select bank1
  2418  022A  082E               	movf	(printf@integ+1)^(0+128),w
  2419  022B  1283               	bcf	3,5	;RP0=0, select bank0
  2420  022C  00AC               	movwf	?__tdiv_to_l_+4
  2421  022D  1683               	bsf	3,5	;RP0=1, select bank1
  2422  022E  082F               	movf	(printf@integ+2)^(0+128),w
  2423  022F  1283               	bcf	3,5	;RP0=0, select bank0
  2424  0230  00AD               	movwf	?__tdiv_to_l_+5
  2425  0231  25D0  120A  118A   	fcall	__tdiv_to_l_
  2426  0234  082B               	movf	?__tdiv_to_l_+3,w
  2427  0235  1683               	bsf	3,5	;RP0=1, select bank1
  2428  0236  00AB               	movwf	(_printf$3161+3)^(0+128)
  2429  0237  1283               	bcf	3,5	;RP0=0, select bank0
  2430  0238  082A               	movf	?__tdiv_to_l_+2,w
  2431  0239  1683               	bsf	3,5	;RP0=1, select bank1
  2432  023A  00AA               	movwf	(_printf$3161+2)^(0+128)
  2433  023B  1283               	bcf	3,5	;RP0=0, select bank0
  2434  023C  0829               	movf	?__tdiv_to_l_+1,w
  2435  023D  1683               	bsf	3,5	;RP0=1, select bank1
  2436  023E  00A9               	movwf	(_printf$3161+1)^(0+128)
  2437  023F  1283               	bcf	3,5	;RP0=0, select bank0
  2438  0240  0828               	movf	?__tdiv_to_l_,w
  2439  0241  1683               	bsf	3,5	;RP0=1, select bank1
  2440  0242  00A8               	movwf	_printf$3161^(0+128)
  2441  0243  082B               	movf	(_printf$3161+3)^(0+128),w
  2442  0244  00B3               	movwf	(printf@_val+3)^(0+128)
  2443  0245  082A               	movf	(_printf$3161+2)^(0+128),w
  2444  0246  00B2               	movwf	(printf@_val+2)^(0+128)
  2445  0247  0829               	movf	(_printf$3161+1)^(0+128),w
  2446  0248  00B1               	movwf	(printf@_val+1)^(0+128)
  2447  0249  0828               	movf	_printf$3161^(0+128),w
  2448  024A  00B0               	movwf	printf@_val^(0+128)
  2449  024B  01BB               	clrf	printf@fval^(0+128)
  2450  024C  01BC               	clrf	(printf@fval+1)^(0+128)
  2451  024D  01BD               	clrf	(printf@fval+2)^(0+128)
  2452  024E  2A90               	goto	l7328
  2453  024F                     l7324:	
  2454  024F  27B3               	call	PL30	;select bank 1
  2455  0250  083B               	movf	printf@fval^(0+128),w
  2456  0251  2780  120A  118A   	fcall	PL14	;call to abstracted procedure
  2457  0254  24EF  120A  118A   	fcall	___fttol
  2458  0257  2772               	fcall	PL9	;call to abstracted procedure
  2459  0258  1683               	bsf	3,5	;RP0=1, select bank1
  2460  0259  00B0               	movwf	printf@_val^(0+128)
  2461  025A  0833               	movf	(printf@_val+3)^(0+128),w
  2462  025B  1283               	bcf	3,5	;RP0=0, select bank0
  2463  025C  00B3               	movwf	?___lltoft+3
  2464  025D  1683               	bsf	3,5	;RP0=1, select bank1
  2465  025E  0832               	movf	(printf@_val+2)^(0+128),w
  2466  025F  1283               	bcf	3,5	;RP0=0, select bank0
  2467  0260  00B2               	movwf	?___lltoft+2
  2468  0261  1683               	bsf	3,5	;RP0=1, select bank1
  2469  0262  0831               	movf	(printf@_val+1)^(0+128),w
  2470  0263  1283               	bcf	3,5	;RP0=0, select bank0
  2471  0264  00B1               	movwf	?___lltoft+1
  2472  0265  1683               	bsf	3,5	;RP0=1, select bank1
  2473  0266  0830               	movf	printf@_val^(0+128),w
  2474  0267  1283               	bcf	3,5	;RP0=0, select bank0
  2475  0268  00B0               	movwf	?___lltoft
  2476  0269  120A  158A  2452   	fcall	___lltoft
      +       120A  118A         
  2477  026E  0830               	movf	?___lltoft,w
  2478  026F  00DE               	movwf	?___ftsub
  2479  0270  0831               	movf	?___lltoft+1,w
  2480  0271  00DF               	movwf	?___ftsub+1
  2481  0272  0832               	movf	?___lltoft+2,w
  2482  0273  00E0               	movwf	?___ftsub+2
  2483  0274  1683               	bsf	3,5	;RP0=1, select bank1
  2484  0275  083B               	movf	printf@fval^(0+128),w
  2485  0276  1283               	bcf	3,5	;RP0=0, select bank0
  2486  0277  00E1               	movwf	?___ftsub+3
  2487  0278  1683               	bsf	3,5	;RP0=1, select bank1
  2488  0279  083C               	movf	(printf@fval+1)^(0+128),w
  2489  027A  1283               	bcf	3,5	;RP0=0, select bank0
  2490  027B  00E2               	movwf	?___ftsub+4
  2491  027C  1683               	bsf	3,5	;RP0=1, select bank1
  2492  027D  083D               	movf	(printf@fval+2)^(0+128),w
  2493  027E  1283               	bcf	3,5	;RP0=0, select bank0
  2494  027F  00E3               	movwf	?___ftsub+5
  2495  0280  2711  120A  118A   	fcall	___ftsub
  2496  0283  085E               	movf	?___ftsub,w
  2497  0284  1683               	bsf	3,5	;RP0=1, select bank1
  2498  0285  00BB               	movwf	printf@fval^(0+128)
  2499  0286  1283               	bcf	3,5	;RP0=0, select bank0
  2500  0287  085F               	movf	?___ftsub+1,w
  2501  0288  1683               	bsf	3,5	;RP0=1, select bank1
  2502  0289  00BC               	movwf	(printf@fval+1)^(0+128)
  2503  028A  1283               	bcf	3,5	;RP0=0, select bank0
  2504  028B  0860               	movf	?___ftsub+2,w
  2505  028C  1683               	bsf	3,5	;RP0=1, select bank1
  2506  028D  00BD               	movwf	(printf@fval+2)^(0+128)
  2507  028E  01B9               	clrf	printf@exp^(0+128)
  2508  028F  01BA               	clrf	(printf@exp+1)^(0+128)
  2509  0290                     l7328:	
  2510  0290  01C0               	clrf	printf@c^(0+128)
  2511  0291  0AC0               	incf	printf@c^(0+128),f
  2512  0292                     l7334:	
  2513  0292  2745               	fcall	PL5	;call to abstracted procedure
  2514  0293  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2515  0298  00A4               	movwf	(??_printf+1)^(0+128)
  2516  0299  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2517  029E  00A5               	movwf	((??_printf+1)^(0+128)+1)
  2518  029F  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2519  02A4  00A6               	movwf	((??_printf+1)^(0+128)+2)
  2520  02A5  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2521  02AA  00A7               	movwf	((??_printf+1)^(0+128)+3)
  2522  02AB  0827               	movf	(??_printf+4)^(0+128),w
  2523  02AC  0233               	subwf	(printf@_val+3)^(0+128),w
  2524  02AD  1D03               	skipz
  2525  02AE  2AB9               	goto	u4355
  2526  02AF  0826               	movf	(??_printf+3)^(0+128),w
  2527  02B0  0232               	subwf	(printf@_val+2)^(0+128),w
  2528  02B1  1D03               	skipz
  2529  02B2  2AB9               	goto	u4355
  2530  02B3  0825               	movf	(??_printf+2)^(0+128),w
  2531  02B4  0231               	subwf	(printf@_val+1)^(0+128),w
  2532  02B5  1D03               	skipz
  2533  02B6  2AB9               	goto	u4355
  2534  02B7  0824               	movf	(??_printf+1)^(0+128),w
  2535  02B8  0230               	subwf	printf@_val^(0+128),w
  2536  02B9                     u4355:	
  2537  02B9  1C03               	btfss	3,0
  2538  02BA  2AC0               	goto	l7342
  2539  02BB  0AC0               	incf	printf@c^(0+128),f
  2540  02BC  0840               	movf	printf@c^(0+128),w
  2541  02BD  3A0A               	xorlw	10
  2542  02BE  1D03               	skipz
  2543  02BF  2A92               	goto	l7334
  2544  02C0                     l7342:	
  2545  02C0  083E               	movf	printf@prec^(0+128),w
  2546  02C1  0740               	addwf	printf@c^(0+128),w
  2547  02C2  00A3               	movwf	??_printf^(0+128)
  2548  02C3  083F               	movf	(printf@prec+1)^(0+128),w
  2549  02C4  1803               	skipnc
  2550  02C5  0A3F               	incf	(printf@prec+1)^(0+128),w
  2551  02C6  1BC0               	btfsc	printf@c^(0+128),7
  2552  02C7  3EFF               	addlw	255
  2553  02C8  00A4               	movwf	(??_printf^(0+128)+1)
  2554  02C9  0839               	movf	printf@exp^(0+128),w
  2555  02CA  0723               	addwf	??_printf^(0+128),w
  2556  02CB  00A5               	movwf	(??_printf+2)^(0+128)
  2557  02CC  083A               	movf	(printf@exp+1)^(0+128),w
  2558  02CD  1803               	skipnc
  2559  02CE  0A3A               	incf	(printf@exp+1)^(0+128),w
  2560  02CF  0724               	addwf	(??_printf+1)^(0+128),w
  2561  02D0  00A6               	movwf	(??_printf+3)^(0+128)
  2562  02D1  0825               	movf	(??_printf+2)^(0+128),w
  2563  02D2  02B7               	subwf	printf@width^(0+128),f
  2564  02D3  0826               	movf	(??_printf+3)^(0+128),w
  2565  02D4  1C03               	skipc
  2566  02D5  03B8               	decf	(printf@width+1)^(0+128),f
  2567  02D6  02B8               	subwf	(printf@width+1)^(0+128),f
  2568  02D7  083F               	movf	(printf@prec+1)^(0+128),w
  2569  02D8  043E               	iorwf	printf@prec^(0+128),w
  2570  02D9  1903               	skipnz
  2571  02DA  2ADF               	goto	l7348
  2572  02DB  30FF               	movlw	-1
  2573  02DC  07B7               	addwf	printf@width^(0+128),f
  2574  02DD  1C03               	skipc
  2575  02DE  03B8               	decf	(printf@width+1)^(0+128),f
  2576  02DF                     l7348:	
  2577  02DF  0834               	movf	printf@flag^(0+128),w
  2578  02E0  3903               	andlw	3
  2579  02E1  1D03               	btfss	3,2
  2580  02E2  2AF2               	goto	l7350
  2581  02E3                     l7356:	
  2582  02E3  0838               	movf	(printf@width+1)^(0+128),w
  2583  02E4  3A80               	xorlw	128
  2584  02E5  00FF               	movwf	127
  2585  02E6  3080               	movlw	128
  2586  02E7  027F               	subwf	127,w
  2587  02E8  1D03               	skipz
  2588  02E9  2AEC               	goto	u4395
  2589  02EA  3001               	movlw	1
  2590  02EB  0237               	subwf	printf@width^(0+128),w
  2591  02EC                     u4395:	
  2592  02EC  1C03               	btfss	3,0
  2593  02ED  2AF8               	goto	l7358
  2594  02EE  3020               	movlw	32
  2595  02EF  2495  120A  118A   	fcall	_putch
  2596  02F2                     l7350:	
  2597  02F2  30FF               	movlw	-1
  2598  02F3  1683               	bsf	3,5	;RP0=1, select bank1
  2599  02F4  07B7               	addwf	printf@width^(0+128),f
  2600  02F5  1C03               	skipc
  2601  02F6  03B8               	decf	(printf@width+1)^(0+128),f
  2602  02F7  2AE3               	goto	l7356
  2603  02F8                     l7358:	
  2604  02F8  27B3               	call	PL30	;select bank 1
  2605  02F9  0834               	movf	printf@flag^(0+128),w
  2606  02FA  3903               	andlw	3
  2607  02FB  1903               	btfsc	3,2
  2608  02FC  2B2C               	goto	l7364
  2609  02FD  302D               	movlw	45
  2610  02FE  2B29               	goto	L3
  2611  02FF                     l7362:	
  2612  02FF  274E  120A  118A   	fcall	PL6	;call to abstracted procedure
  2613  0302  2745               	fcall	PL5	;call to abstracted procedure
  2614  0303  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2615  0308  1283               	bcf	3,5	;RP0=0, select bank0
  2616  0309  00A8               	movwf	?___lldiv
  2617  030A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2618  030F  00A9               	movwf	?___lldiv+1
  2619  0310  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2620  0315  00AA               	movwf	?___lldiv+2
  2621  0316  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2622  031B  2733  120A  118A   	fcall	PL4	;call to abstracted procedure
  2623  031E  2588  120A  118A   	fcall	___lldiv
  2624  0321  2795  120A  118A   	fcall	PL19	;call to abstracted procedure
  2625  0324  254A  120A  118A   	fcall	___llmod
  2626  0327  0835               	movf	?___llmod,w
  2627  0328  3E30               	addlw	48
  2628  0329                     L3:	
  2629  0329  2495  120A  118A   	fcall	_putch
  2630  032C                     l7364:	
  2631  032C  1683               	bsf	3,5	;RP0=1, select bank1
  2632  032D  03C0               	decf	printf@c^(0+128),f
  2633  032E  0F40               	incfsz	printf@c^(0+128),w
  2634  032F  2AFF               	goto	l7362
  2635  0330                     l7370:	
  2636  0330  083A               	movf	(printf@exp+1)^(0+128),w
  2637  0331  3A80               	xorlw	128
  2638  0332  00FF               	movwf	127
  2639  0333  3080               	movlw	128
  2640  0334  027F               	subwf	127,w
  2641  0335  1D03               	skipz
  2642  0336  2B39               	goto	u4425
  2643  0337  3001               	movlw	1
  2644  0338  0239               	subwf	printf@exp^(0+128),w
  2645  0339                     u4425:	
  2646  0339  1C03               	btfss	3,0
  2647  033A  2B45               	goto	l7372
  2648  033B  3030               	movlw	48
  2649  033C  2495  120A  118A   	fcall	_putch
  2650  033F  30FF               	movlw	-1
  2651  0340  1683               	bsf	3,5	;RP0=1, select bank1
  2652  0341  07B9               	addwf	printf@exp^(0+128),f
  2653  0342  1C03               	skipc
  2654  0343  03BA               	decf	(printf@exp+1)^(0+128),f
  2655  0344  2B30               	goto	l7370
  2656  0345                     l7372:	
  2657  0345  27B3               	call	PL30	;select bank 1
  2658  0346  083F               	movf	(printf@prec+1)^(0+128),w
  2659  0347  3A80               	xorlw	128
  2660  0348  00FF               	movwf	127
  2661  0349  3080               	movlw	128
  2662  034A  027F               	subwf	127,w
  2663  034B  1D03               	skipz
  2664  034C  2B4F               	goto	u4435
  2665  034D  3009               	movlw	9
  2666  034E  023E               	subwf	printf@prec^(0+128),w
  2667  034F                     u4435:	
  2668  034F  1C03               	skipc
  2669  0350  2B54               	goto	l7376
  2670  0351  3008               	movlw	8
  2671  0352  27B3               	call	PL30	;select bank 1
  2672  0353  2B56               	goto	L4
  2673  0354                     l7376:	
  2674  0354  27B3               	call	PL30	;select bank 1
  2675  0355  083E               	movf	printf@prec^(0+128),w
  2676  0356                     L4:	
  2677  0356  00C0               	movwf	printf@c^(0+128)
  2678  0357  00A3               	movwf	??_printf^(0+128)
  2679  0358  01A4               	clrf	(??_printf^(0+128)+1)
  2680  0359  1BA3               	btfsc	??_printf^(0+128),7
  2681  035A  03A4               	decf	(??_printf^(0+128)+1),f
  2682  035B  02BE               	subwf	printf@prec^(0+128),f
  2683  035C  0824               	movf	(??_printf+1)^(0+128),w
  2684  035D  1C03               	skipc
  2685  035E  03BF               	decf	(printf@prec+1)^(0+128),f
  2686  035F  02BF               	subwf	(printf@prec+1)^(0+128),f
  2687  0360  0840               	movf	printf@c^(0+128),w
  2688  0361  1903               	btfsc	3,2
  2689  0362  2B65               	goto	l2241
  2690  0363  302E               	movlw	46
  2691  0364  2495               	fcall	_putch
  2692  0365                     l2241:	
  2693  0365  1683               	bsf	3,5	;RP0=1, select bank1
  2694  0366  0840               	movf	printf@c^(0+128),w
  2695  0367  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2696  036C  0852               	movf	?_scale,w
  2697  036D  00C6               	movwf	?___ftmul+3
  2698  036E  0853               	movf	?_scale+1,w
  2699  036F  00C7               	movwf	?___ftmul+4
  2700  0370  0854               	movf	?_scale+2,w
  2701  0371  00C8               	movwf	?___ftmul+5
  2702  0372  1683               	bsf	3,5	;RP0=1, select bank1
  2703  0373  083B               	movf	printf@fval^(0+128),w
  2704  0374  1283               	bcf	3,5	;RP0=0, select bank0
  2705  0375  278B               	fcall	PL17	;call to abstracted procedure
  2706  0376  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2707  037B  0843               	movf	?___ftmul,w
  2708  037C  00B6               	movwf	?___fttol
  2709  037D  0844               	movf	?___ftmul+1,w
  2710  037E  00B7               	movwf	?___fttol+1
  2711  037F  0845               	movf	?___ftmul+2,w
  2712  0380  00B8               	movwf	?___fttol+2
  2713  0381  24EF  120A  118A   	fcall	___fttol
  2714  0384  2772  120A  118A   	fcall	PL9	;call to abstracted procedure
  2715  0387  2BF0               	goto	L5
  2716  0388                     l7380:	
  2717  0388  274E  120A  118A   	fcall	PL6	;call to abstracted procedure
  2718  038B  2745               	fcall	PL5	;call to abstracted procedure
  2719  038C  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2720  0391  1283               	bcf	3,5	;RP0=0, select bank0
  2721  0392  00A8               	movwf	?___lldiv
  2722  0393  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2723  0398  00A9               	movwf	?___lldiv+1
  2724  0399  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2725  039E  00AA               	movwf	?___lldiv+2
  2726  039F  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2727  03A4  2733  120A  118A   	fcall	PL4	;call to abstracted procedure
  2728  03A7  2588  120A  118A   	fcall	___lldiv
  2729  03AA  2795  120A  118A   	fcall	PL19	;call to abstracted procedure
  2730  03AD  254A  120A  118A   	fcall	___llmod
  2731  03B0  0835               	movf	?___llmod,w
  2732  03B1  3E30               	addlw	48
  2733  03B2  2495  120A  118A   	fcall	_putch
  2734  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  2735  03B6  2745               	fcall	PL5	;call to abstracted procedure
  2736  03B7  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2737  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2738  03BD  00B5               	movwf	?___llmod
  2739  03BE  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2740  03C3  00B6               	movwf	?___llmod+1
  2741  03C4  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2742  03C9  00B7               	movwf	?___llmod+2
  2743  03CA  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2744  03CF  00B8               	movwf	?___llmod+3
  2745  03D0  1683               	bsf	3,5	;RP0=1, select bank1
  2746  03D1  0833               	movf	(printf@_val+3)^(0+128),w
  2747  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  2748  03D3  00BC               	movwf	?___llmod+7
  2749  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  2750  03D5  0832               	movf	(printf@_val+2)^(0+128),w
  2751  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  2752  03D7  00BB               	movwf	?___llmod+6
  2753  03D8  1683               	bsf	3,5	;RP0=1, select bank1
  2754  03D9  0831               	movf	(printf@_val+1)^(0+128),w
  2755  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  2756  03DB  00BA               	movwf	?___llmod+5
  2757  03DC  1683               	bsf	3,5	;RP0=1, select bank1
  2758  03DD  0830               	movf	printf@_val^(0+128),w
  2759  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  2760  03DF  00B9               	movwf	?___llmod+4
  2761  03E0  254A  120A  118A   	fcall	___llmod
  2762  03E3  0838               	movf	?___llmod+3,w
  2763  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  2764  03E5  00B3               	movwf	(printf@_val+3)^(0+128)
  2765  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2766  03E7  0837               	movf	?___llmod+2,w
  2767  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  2768  03E9  00B2               	movwf	(printf@_val+2)^(0+128)
  2769  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2770  03EB  0836               	movf	?___llmod+1,w
  2771  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  2772  03ED  00B1               	movwf	(printf@_val+1)^(0+128)
  2773  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  2774  03EF  0835               	movf	?___llmod,w
  2775  03F0                     L5:	
  2776  03F0  1683               	bsf	3,5	;RP0=1, select bank1
  2777  03F1  00B0               	movwf	printf@_val^(0+128)
  2778  03F2  03C0               	decf	printf@c^(0+128),f
  2779  03F3  0F40               	incfsz	printf@c^(0+128),w
  2780  03F4  2B88               	goto	l7380
  2781  03F5                     l7388:	
  2782  03F5  083F               	movf	(printf@prec+1)^(0+128),w
  2783  03F6  043E               	iorwf	printf@prec^(0+128),w
  2784  03F7  1903               	btfsc	3,2
  2785  03F8  2814               	goto	l7434
  2786  03F9  3030               	movlw	48
  2787  03FA  2495  120A  118A   	fcall	_putch
  2788  03FD  30FF               	movlw	-1
  2789  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  2790  03FF  07BE               	addwf	printf@prec^(0+128),f
  2791  0400  1C03               	skipc
  2792  0401  03BF               	decf	(printf@prec+1)^(0+128),f
  2793  0402  2BF5               	goto	l7388
  2794  0403                     l7390:	
  2795  0403  083F               	movf	(printf@prec+1)^(0+128),w
  2796  0404  043E               	iorwf	printf@prec^(0+128),w
  2797  0405  1D03               	skipz
  2798  0406  2C0F               	goto	l7396
  2799  0407  0833               	movf	(printf@_val+3)^(0+128),w
  2800  0408  0432               	iorwf	(printf@_val+2)^(0+128),w
  2801  0409  0431               	iorwf	(printf@_val+1)^(0+128),w
  2802  040A  0430               	iorwf	printf@_val^(0+128),w
  2803  040B  1903               	btfsc	3,2
  2804  040C  0ABE               	incf	printf@prec^(0+128),f
  2805  040D  1903               	skipnz
  2806  040E  0ABF               	incf	(printf@prec+1)^(0+128),f
  2807  040F                     l7396:	
  2808  040F  0840               	movf	printf@c^(0+128),w
  2809  0410  279E  120A  118A   	fcall	PL24	;call to abstracted procedure
  2810  0413  083F               	movf	(printf@prec+1)^(0+128),w
  2811  0414  3A80               	xorlw	128
  2812  0415  0225               	subwf	(??_printf+2)^(0+128),w
  2813  0416  1D03               	skipz
  2814  0417  2C1A               	goto	u4495
  2815  0418  083E               	movf	printf@prec^(0+128),w
  2816  0419  0223               	subwf	??_printf^(0+128),w
  2817  041A                     u4495:	
  2818  041A  1803               	skipnc
  2819  041B  2C20               	goto	l7400
  2820  041C  27B3               	call	PL30	;select bank 1
  2821  041D  083E               	movf	printf@prec^(0+128),w
  2822  041E  00C0               	movwf	printf@c^(0+128)
  2823  041F  2C38               	goto	l7404
  2824  0420                     l7400:	
  2825  0420  27B3               	call	PL30	;select bank 1
  2826  0421  0840               	movf	printf@c^(0+128),w
  2827  0422  00A3               	movwf	??_printf^(0+128)
  2828  0423  01A4               	clrf	(??_printf^(0+128)+1)
  2829  0424  1BA3               	btfsc	??_printf^(0+128),7
  2830  0425  03A4               	decf	(??_printf^(0+128)+1),f
  2831  0426  083F               	movf	(printf@prec+1)^(0+128),w
  2832  0427  3A80               	xorlw	128
  2833  0428  00A5               	movwf	(??_printf+2)^(0+128)
  2834  0429  0824               	movf	(??_printf+1)^(0+128),w
  2835  042A  3A80               	xorlw	128
  2836  042B  0225               	subwf	(??_printf+2)^(0+128),w
  2837  042C  1D03               	skipz
  2838  042D  2C30               	goto	u4505
  2839  042E  0823               	movf	??_printf^(0+128),w
  2840  042F  023E               	subwf	printf@prec^(0+128),w
  2841  0430                     u4505:	
  2842  0430  1803               	skipnc
  2843  0431  2C38               	goto	l7404
  2844  0432  27B3               	call	PL30	;select bank 1
  2845  0433  0840               	movf	printf@c^(0+128),w
  2846  0434  00BE               	movwf	printf@prec^(0+128)
  2847  0435  01BF               	clrf	(printf@prec+1)^(0+128)
  2848  0436  1BBE               	btfsc	printf@prec^(0+128),7
  2849  0437  03BF               	decf	(printf@prec+1)^(0+128),f
  2850  0438                     l7404:	
  2851  0438  27B3               	call	PL30	;select bank 1
  2852  0439  0838               	movf	(printf@width+1)^(0+128),w
  2853  043A  0437               	iorwf	printf@width^(0+128),w
  2854  043B  1903               	skipnz
  2855  043C  2C45               	goto	l7410
  2856  043D  0834               	movf	printf@flag^(0+128),w
  2857  043E  3903               	andlw	3
  2858  043F  1903               	btfsc	3,2
  2859  0440  2C45               	goto	l7410
  2860  0441  30FF               	movlw	-1
  2861  0442  07B7               	addwf	printf@width^(0+128),f
  2862  0443  1C03               	skipc
  2863  0444  03B8               	decf	(printf@width+1)^(0+128),f
  2864  0445                     l7410:	
  2865  0445  1F35               	btfss	(printf@flag+1)^(0+128),6
  2866  0446  2C5E               	goto	l7418
  2867  0447  083F               	movf	(printf@prec+1)^(0+128),w
  2868  0448  3A80               	xorlw	128
  2869  0449  00A3               	movwf	??_printf^(0+128)
  2870  044A  0838               	movf	(printf@width+1)^(0+128),w
  2871  044B  3A80               	xorlw	128
  2872  044C  0223               	subwf	??_printf^(0+128),w
  2873  044D  1D03               	skipz
  2874  044E  2C51               	goto	u4545
  2875  044F  0837               	movf	printf@width^(0+128),w
  2876  0450  023E               	subwf	printf@prec^(0+128),w
  2877  0451                     u4545:	
  2878  0451  1803               	skipnc
  2879  0452  2C5B               	goto	l7416
  2880  0453  27B3               	call	PL30	;select bank 1
  2881  0454  083E               	movf	printf@prec^(0+128),w
  2882  0455  02B7               	subwf	printf@width^(0+128),f
  2883  0456  083F               	movf	(printf@prec+1)^(0+128),w
  2884  0457  1C03               	skipc
  2885  0458  03B8               	decf	(printf@width+1)^(0+128),f
  2886  0459  02B8               	subwf	(printf@width+1)^(0+128),f
  2887  045A  2C5E               	goto	l7418
  2888  045B                     l7416:	
  2889  045B  27B3               	call	PL30	;select bank 1
  2890  045C  01B7               	clrf	printf@width^(0+128)
  2891  045D  01B8               	clrf	(printf@width+1)^(0+128)
  2892  045E                     l7418:	
  2893  045E  0840               	movf	printf@c^(0+128),w
  2894  045F  279E  120A  118A   	fcall	PL24	;call to abstracted procedure
  2895  0462  0838               	movf	(printf@width+1)^(0+128),w
  2896  0463  3A80               	xorlw	128
  2897  0464  0225               	subwf	(??_printf+2)^(0+128),w
  2898  0465  1D03               	skipz
  2899  0466  2C69               	goto	u4555
  2900  0467  0837               	movf	printf@width^(0+128),w
  2901  0468  0223               	subwf	??_printf^(0+128),w
  2902  0469                     u4555:	
  2903  0469  1803               	skipnc
  2904  046A  2C77               	goto	l7422
  2905  046B  27B3               	call	PL30	;select bank 1
  2906  046C  0840               	movf	printf@c^(0+128),w
  2907  046D  00A3               	movwf	??_printf^(0+128)
  2908  046E  01A4               	clrf	(??_printf^(0+128)+1)
  2909  046F  1BA3               	btfsc	??_printf^(0+128),7
  2910  0470  03A4               	decf	(??_printf^(0+128)+1),f
  2911  0471  02B7               	subwf	printf@width^(0+128),f
  2912  0472  0824               	movf	(??_printf+1)^(0+128),w
  2913  0473  1C03               	skipc
  2914  0474  03B8               	decf	(printf@width+1)^(0+128),f
  2915  0475  02B8               	subwf	(printf@width+1)^(0+128),f
  2916  0476  2C7A               	goto	l7424
  2917  0477                     l7422:	
  2918  0477  27B3               	call	PL30	;select bank 1
  2919  0478  01B7               	clrf	printf@width^(0+128)
  2920  0479  01B8               	clrf	(printf@width+1)^(0+128)
  2921  047A                     l7424:	
  2922  047A  0838               	movf	(printf@width+1)^(0+128),w
  2923  047B  0437               	iorwf	printf@width^(0+128),w
  2924  047C  1903               	skipnz
  2925  047D  2C8B               	goto	l7430
  2926  047E                     l7426:	
  2927  047E  3020               	movlw	32
  2928  047F  2495  120A  118A   	fcall	_putch
  2929  0482  30FF               	movlw	-1
  2930  0483  1683               	bsf	3,5	;RP0=1, select bank1
  2931  0484  07B7               	addwf	printf@width^(0+128),f
  2932  0485  1C03               	skipc
  2933  0486  03B8               	decf	(printf@width+1)^(0+128),f
  2934  0487  0838               	movf	(printf@width+1)^(0+128),w
  2935  0488  0437               	iorwf	printf@width^(0+128),w
  2936  0489  1D03               	skipz
  2937  048A  2C7E               	goto	l7426
  2938  048B                     l7430:	
  2939  048B  0834               	movf	printf@flag^(0+128),w
  2940  048C  3903               	andlw	3
  2941  048D  1903               	btfsc	3,2
  2942  048E  2814               	goto	l7434
  2943  048F  302D               	movlw	45
  2944  0490                     L1:	
  2945  0490  2495  120A  118A   	fcall	_putch
  2946  0493  2814               	goto	l7434
  2947  0494                     l2263:	
  2948  0494  0008               	return
  2949  0495                     __end_of_printf:	
  2950  0495                     __ptext536:	
  2951 ;; =============== function _printf ends ============
  2952                           
  2953                           
  2954 ;; *************** function _putch *****************
  2955 ;; Defined at:
  2956 ;;		line 52 in file "C:\Online Class\HK6\Practice_Micro\tmr0 counter\tmr0 ct.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;  ki_tu           1    wreg     unsigned char 
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;  ki_tu           1   17[BANK0 ] unsigned char 
  2961 ;; Return value:  Size  Location     Type
  2962 ;;		None               void
  2963 ;; Registers used:
  2964 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/20
  2967 ;;		On exit  : 60/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2970 ;;      Params:         0       0       0       0       0
  2971 ;;      Locals:         0       1       0       0       0
  2972 ;;      Temps:          0       0       0       0       0
  2973 ;;      Totals:         0       1       0       0       0
  2974 ;;Total ram usage:        1 bytes
  2975 ;; Hardware stack levels used:    1
  2976 ;; Hardware stack levels required when called:    6
  2977 ;; This function calls:
  2978 ;;		_lcd_putc
  2979 ;; This function is called by:
  2980 ;;		_printf
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983  0495                     _putch:	
  2984                           
  2985                           ; Regs used in _putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2986                           ;putch@ki_tu stored from wreg
  2987  0495  1283               	bcf	3,5	;RP0=0, select bank0
  2988  0496  1303               	bcf	3,6	;RP1=0, select bank0
  2989  0497  00B1               	movwf	putch@ki_tu
  2990                           
  2991                           ;tmr0 ct.c: 53: lcd_putc(ki_tu);
  2992  0498  120A  158A  2A6A   	ljmp	_lcd_putc
  2993  049B                     __end_of_putch:	
  2994  049B                     __ptext552:	
  2995 ;; =============== function ___lldiv ends ============
  2996                           
  2997                           
  2998 ;; *************** function ___ftge *****************
  2999 ;; Defined at:
  3000 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftge.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;  ff1             3    8[BANK0 ] float 
  3003 ;;  ff2             3   11[BANK0 ] float 
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;		None
  3006 ;; Return value:  Size  Location     Type
  3007 ;;		None               void
  3008 ;; Registers used:
  3009 ;;		wreg, status,2, status,0
  3010 ;; Tracked objects:
  3011 ;;		On entry : 60/0
  3012 ;;		On exit  : 60/0
  3013 ;;		Unchanged: FFF9F/0
  3014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3015 ;;      Params:         0       6       0       0       0
  3016 ;;      Locals:         0       0       0       0       0
  3017 ;;      Temps:          0       0       0       0       0
  3018 ;;      Totals:         0       6       0       0       0
  3019 ;;Total ram usage:        6 bytes
  3020 ;; Hardware stack levels used:    1
  3021 ;; Hardware stack levels required when called:    3
  3022 ;; This function calls:
  3023 ;;		Nothing
  3024 ;; This function is called by:
  3025 ;;		_printf
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028  049B                     ___ftge:	
  3029                           
  3030                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3031  049B  1FAA               	btfss	___ftge@ff1+2,7
  3032  049C  2CAA               	goto	l6644
  3033  049D  0828               	movf	___ftge@ff1,w
  3034  049E  3C00               	sublw	0
  3035  049F  00A8               	movwf	___ftge@ff1
  3036  04A0  0829               	movf	___ftge@ff1+1,w
  3037  04A1  1C03               	skipc
  3038  04A2  0F29               	incfsz	___ftge@ff1+1,w
  3039  04A3  3C00               	sublw	0
  3040  04A4  00A9               	movwf	___ftge@ff1+1
  3041  04A5  082A               	movf	___ftge@ff1+2,w
  3042  04A6  1C03               	skipc
  3043  04A7  0F2A               	incfsz	___ftge@ff1+2,w
  3044  04A8  3C80               	sublw	128
  3045  04A9  00AA               	movwf	___ftge@ff1+2
  3046  04AA                     l6644:	
  3047  04AA  1FAD               	btfss	___ftge@ff2+2,7
  3048  04AB  2CB9               	goto	l6648
  3049  04AC  082B               	movf	___ftge@ff2,w
  3050  04AD  3C00               	sublw	0
  3051  04AE  00AB               	movwf	___ftge@ff2
  3052  04AF  082C               	movf	___ftge@ff2+1,w
  3053  04B0  1C03               	skipc
  3054  04B1  0F2C               	incfsz	___ftge@ff2+1,w
  3055  04B2  3C00               	sublw	0
  3056  04B3  00AC               	movwf	___ftge@ff2+1
  3057  04B4  082D               	movf	___ftge@ff2+2,w
  3058  04B5  1C03               	skipc
  3059  04B6  0F2D               	incfsz	___ftge@ff2+2,w
  3060  04B7  3C80               	sublw	128
  3061  04B8  00AD               	movwf	___ftge@ff2+2
  3062  04B9                     l6648:	
  3063  04B9  3080               	movlw	128
  3064  04BA  06AA               	xorwf	___ftge@ff1+2,f
  3065  04BB  06AD               	xorwf	___ftge@ff2+2,f
  3066  04BC  082D               	movf	___ftge@ff2+2,w
  3067  04BD  022A               	subwf	___ftge@ff1+2,w
  3068  04BE  1D03               	skipz
  3069  04BF  0008               	return
  3070  04C0  082C               	movf	___ftge@ff2+1,w
  3071  04C1  0229               	subwf	___ftge@ff1+1,w
  3072  04C2  1D03               	skipz
  3073  04C3  0008               	return
  3074  04C4  082B               	movf	___ftge@ff2,w
  3075  04C5  0228               	subwf	___ftge@ff1,w
  3076  04C6  0008               	return
  3077  04C7                     __end_of___ftge:	
  3078  04C7                     __ptext564:	
  3079 ;; =============== function __tdiv_to_l_ ends ============
  3080                           
  3081                           
  3082 ;; *************** function _isdigit *****************
  3083 ;; Defined at:
  3084 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isdigit.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;  c               1    wreg     unsigned char 
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;  c               1    9[BANK0 ] unsigned char 
  3089 ;; Return value:  Size  Location     Type
  3090 ;;		None               void
  3091 ;; Registers used:
  3092 ;;		wreg, status,2, status,0
  3093 ;; Tracked objects:
  3094 ;;		On entry : 60/20
  3095 ;;		On exit  : 60/0
  3096 ;;		Unchanged: FFF9F/0
  3097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3098 ;;      Params:         0       0       0       0       0
  3099 ;;      Locals:         0       2       0       0       0
  3100 ;;      Temps:          0       0       0       0       0
  3101 ;;      Totals:         0       2       0       0       0
  3102 ;;Total ram usage:        2 bytes
  3103 ;; Hardware stack levels used:    1
  3104 ;; Hardware stack levels required when called:    3
  3105 ;; This function calls:
  3106 ;;		Nothing
  3107 ;; This function is called by:
  3108 ;;		_printf
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111  04C7                     _isdigit:	
  3112                           
  3113                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3114                           ;isdigit@c stored from wreg
  3115  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  3116  04C8  00A9               	movwf	isdigit@c
  3117  04C9  303A               	movlw	58
  3118  04CA  01A8               	clrf	_isdigit$3669
  3119  04CB  0229               	subwf	isdigit@c,w
  3120  04CC  1803               	skipnc
  3121  04CD  2CD4               	goto	l6330
  3122  04CE  3030               	movlw	48
  3123  04CF  0229               	subwf	isdigit@c,w
  3124  04D0  1C03               	skipc
  3125  04D1  2CD4               	goto	l6330
  3126  04D2  01A8               	clrf	_isdigit$3669
  3127  04D3  0AA8               	incf	_isdigit$3669,f
  3128  04D4                     l6330:	
  3129  04D4  0C28               	rrf	_isdigit$3669,w
  3130  04D5  0008               	return
  3131  04D6                     __end_of_isdigit:	
  3132  04D6                     __ptext560:	
  3133 ;; =============== function ___lbdiv ends ============
  3134                           
  3135                           
  3136 ;; *************** function ___wmul *****************
  3137 ;; Defined at:
  3138 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  multiplier      2    8[BANK0 ] unsigned int 
  3141 ;;  multiplicand    2   10[BANK0 ] unsigned int 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  product         2   12[BANK0 ] unsigned int 
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  2    8[BANK0 ] unsigned int 
  3146 ;; Registers used:
  3147 ;;		wreg, status,2, status,0
  3148 ;; Tracked objects:
  3149 ;;		On entry : 60/0
  3150 ;;		On exit  : 60/0
  3151 ;;		Unchanged: FFF9F/0
  3152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3153 ;;      Params:         0       4       0       0       0
  3154 ;;      Locals:         0       2       0       0       0
  3155 ;;      Temps:          0       0       0       0       0
  3156 ;;      Totals:         0       6       0       0       0
  3157 ;;Total ram usage:        6 bytes
  3158 ;; Hardware stack levels used:    1
  3159 ;; Hardware stack levels required when called:    3
  3160 ;; This function calls:
  3161 ;;		Nothing
  3162 ;; This function is called by:
  3163 ;;		_fround
  3164 ;;		_scale
  3165 ;;		_printf
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168  04D6                     ___wmul:	
  3169                           
  3170                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3171  04D6  01AC               	clrf	___wmul@product
  3172  04D7  01AD               	clrf	___wmul@product+1
  3173  04D8                     l6446:	
  3174  04D8  1C28               	btfss	___wmul@multiplier,0
  3175  04D9  2CE0               	goto	l6450
  3176  04DA  082A               	movf	___wmul@multiplicand,w
  3177  04DB  07AC               	addwf	___wmul@product,f
  3178  04DC  1803               	skipnc
  3179  04DD  0AAD               	incf	___wmul@product+1,f
  3180  04DE  082B               	movf	___wmul@multiplicand+1,w
  3181  04DF  07AD               	addwf	___wmul@product+1,f
  3182  04E0                     l6450:	
  3183  04E0  1003               	clrc
  3184  04E1  0DAA               	rlf	___wmul@multiplicand,f
  3185  04E2  0DAB               	rlf	___wmul@multiplicand+1,f
  3186  04E3  1003               	clrc
  3187  04E4  0CA9               	rrf	___wmul@multiplier+1,f
  3188  04E5  0CA8               	rrf	___wmul@multiplier,f
  3189  04E6  0829               	movf	___wmul@multiplier+1,w
  3190  04E7  0428               	iorwf	___wmul@multiplier,w
  3191  04E8  1D03               	skipz
  3192  04E9  2CD8               	goto	l6446
  3193  04EA  082D               	movf	___wmul@product+1,w
  3194  04EB  00A9               	movwf	?___wmul+1
  3195  04EC  082C               	movf	___wmul@product,w
  3196  04ED  00A8               	movwf	?___wmul
  3197  04EE  0008               	return
  3198  04EF                     __end_of___wmul:	
  3199  04EF                     __ptext556:	
  3200 ;; =============== function ___awdiv ends ============
  3201                           
  3202                           
  3203 ;; *************** function ___fttol *****************
  3204 ;; Defined at:
  3205 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;  f1              3   22[BANK0 ] float 
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;  lval            4   30[BANK0 ] unsigned long 
  3210 ;;  exp1            1   34[BANK0 ] unsigned char 
  3211 ;;  sign1           1   29[BANK0 ] unsigned char 
  3212 ;; Return value:  Size  Location     Type
  3213 ;;                  4   22[BANK0 ] long 
  3214 ;; Registers used:
  3215 ;;		wreg, status,2, status,0
  3216 ;; Tracked objects:
  3217 ;;		On entry : 60/0
  3218 ;;		On exit  : 60/0
  3219 ;;		Unchanged: FFF9F/0
  3220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3221 ;;      Params:         0       4       0       0       0
  3222 ;;      Locals:         0       6       0       0       0
  3223 ;;      Temps:          0       3       0       0       0
  3224 ;;      Totals:         0      13       0       0       0
  3225 ;;Total ram usage:       13 bytes
  3226 ;; Hardware stack levels used:    1
  3227 ;; Hardware stack levels required when called:    3
  3228 ;; This function calls:
  3229 ;;		Nothing
  3230 ;; This function is called by:
  3231 ;;		_printf
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234  04EF                     ___fttol:	
  3235                           
  3236                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3237  04EF  27A6  120A  118A   	fcall	PL27	;call to abstracted procedure
  3238  04F2  1003               	clrc
  3239  04F3  0D3B               	rlf	??___fttol+1,w
  3240  04F4  0D3C               	rlf	??___fttol+2,w
  3241  04F5  00C2               	movwf	___fttol@exp1
  3242  04F6  08C2               	movf	___fttol@exp1,f
  3243  04F7  1D03               	skipz
  3244  04F8  2CFE               	goto	l6534
  3245  04F9                     l6532:	
  3246  04F9  01B6               	clrf	?___fttol
  3247  04FA  01B7               	clrf	?___fttol+1
  3248  04FB  01B8               	clrf	?___fttol+2
  3249  04FC  01B9               	clrf	?___fttol+3
  3250  04FD  0008               	return
  3251  04FE                     l6534:	
  3252  04FE  27A6  120A  118A   	fcall	PL27	;call to abstracted procedure
  3253  0501  3017               	movlw	23
  3254  0502                     u2875:	
  3255  0502  1003               	clrc
  3256  0503  0CBC               	rrf	??___fttol+2,f
  3257  0504  0CBB               	rrf	??___fttol+1,f
  3258  0505  0CBA               	rrf	??___fttol,f
  3259  0506  3EFF               	addlw	-1
  3260  0507  1D03               	skipz
  3261  0508  2D02               	goto	u2875
  3262  0509  083A               	movf	??___fttol,w
  3263  050A  00BD               	movwf	___fttol@sign1
  3264  050B  17B7               	bsf	___fttol@f1+1,7
  3265  050C  01B8               	clrf	___fttol@f1+2
  3266  050D  0836               	movf	___fttol@f1,w
  3267  050E  00BE               	movwf	___fttol@lval
  3268  050F  0837               	movf	___fttol@f1+1,w
  3269  0510  00BF               	movwf	___fttol@lval+1
  3270  0511  0838               	movf	___fttol@f1+2,w
  3271  0512  00C0               	movwf	___fttol@lval+2
  3272  0513  308E               	movlw	142
  3273  0514  01C1               	clrf	___fttol@lval+3
  3274  0515  02C2               	subwf	___fttol@exp1,f
  3275  0516  1FC2               	btfss	___fttol@exp1,7
  3276  0517  2D25               	goto	l6554
  3277  0518  0842               	movf	___fttol@exp1,w
  3278  0519  3A80               	xorlw	128
  3279  051A  3E8F               	addlw	143
  3280  051B  1C03               	btfss	3,0
  3281  051C  2CF9               	goto	l6532
  3282  051D                     l6550:	
  3283  051D  1003               	clrc
  3284  051E  0CC1               	rrf	___fttol@lval+3,f
  3285  051F  0CC0               	rrf	___fttol@lval+2,f
  3286  0520  0CBF               	rrf	___fttol@lval+1,f
  3287  0521  0CBE               	rrf	___fttol@lval,f
  3288  0522  0FC2               	incfsz	___fttol@exp1,f
  3289  0523  2D1D               	goto	l6550
  3290  0524  2D33               	goto	l6560
  3291  0525                     l6554:	
  3292  0525  3018               	movlw	24
  3293  0526  0242               	subwf	___fttol@exp1,w
  3294  0527  1803               	btfsc	3,0
  3295  0528  2CF9               	goto	l6532
  3296  0529                     l3383:	
  3297  0529  08C2               	movf	___fttol@exp1,f
  3298  052A  1903               	btfsc	3,2
  3299  052B  2D33               	goto	l6560
  3300  052C  1003               	clrc
  3301  052D  0DBE               	rlf	___fttol@lval,f
  3302  052E  0DBF               	rlf	___fttol@lval+1,f
  3303  052F  0DC0               	rlf	___fttol@lval+2,f
  3304  0530  0DC1               	rlf	___fttol@lval+3,f
  3305  0531  03C2               	decf	___fttol@exp1,f
  3306  0532  2D29               	goto	l3383
  3307  0533                     l6560:	
  3308  0533  083D               	movf	___fttol@sign1,w
  3309  0534  1903               	btfsc	3,2
  3310  0535  2D41               	goto	l6564
  3311  0536  09BE               	comf	___fttol@lval,f
  3312  0537  09BF               	comf	___fttol@lval+1,f
  3313  0538  09C0               	comf	___fttol@lval+2,f
  3314  0539  09C1               	comf	___fttol@lval+3,f
  3315  053A  0ABE               	incf	___fttol@lval,f
  3316  053B  1903               	skipnz
  3317  053C  0ABF               	incf	___fttol@lval+1,f
  3318  053D  1903               	skipnz
  3319  053E  0AC0               	incf	___fttol@lval+2,f
  3320  053F  1903               	skipnz
  3321  0540  0AC1               	incf	___fttol@lval+3,f
  3322  0541                     l6564:	
  3323  0541  0841               	movf	___fttol@lval+3,w
  3324  0542  00B9               	movwf	?___fttol+3
  3325  0543  0840               	movf	___fttol@lval+2,w
  3326  0544  00B8               	movwf	?___fttol+2
  3327  0545  083F               	movf	___fttol@lval+1,w
  3328  0546  00B7               	movwf	?___fttol+1
  3329  0547  083E               	movf	___fttol@lval,w
  3330  0548  00B6               	movwf	?___fttol
  3331  0549  0008               	return
  3332  054A                     __end_of___fttol:	
  3333  054A                     __ptext554:	
  3334 ;; =============== function ___ftneg ends ============
  3335                           
  3336                           
  3337 ;; *************** function ___llmod *****************
  3338 ;; Defined at:
  3339 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\llmod.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;  divisor         4   21[BANK0 ] unsigned long 
  3342 ;;  dividend        4   25[BANK0 ] unsigned long 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  counter         1   29[BANK0 ] unsigned char 
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  4   21[BANK0 ] unsigned long 
  3347 ;; Registers used:
  3348 ;;		wreg, status,2, status,0
  3349 ;; Tracked objects:
  3350 ;;		On entry : 60/0
  3351 ;;		On exit  : 60/0
  3352 ;;		Unchanged: FFF9F/0
  3353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3354 ;;      Params:         0       8       0       0       0
  3355 ;;      Locals:         0       1       0       0       0
  3356 ;;      Temps:          0       0       0       0       0
  3357 ;;      Totals:         0       9       0       0       0
  3358 ;;Total ram usage:        9 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; Hardware stack levels required when called:    3
  3361 ;; This function calls:
  3362 ;;		Nothing
  3363 ;; This function is called by:
  3364 ;;		_printf
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367  054A                     ___llmod:	
  3368                           
  3369                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3370  054A  0838               	movf	___llmod@divisor+3,w
  3371  054B  0437               	iorwf	___llmod@divisor+2,w
  3372  054C  0436               	iorwf	___llmod@divisor+1,w
  3373  054D  0435               	iorwf	___llmod@divisor,w
  3374  054E  1903               	skipnz
  3375  054F  2D7F               	goto	l6628
  3376  0550  01BD               	clrf	___llmod@counter
  3377  0551                     L13:	
  3378  0551  0ABD               	incf	___llmod@counter,f
  3379  0552  1BB8               	btfsc	___llmod@divisor+3,7
  3380  0553  2D5A               	goto	l6620
  3381  0554  1003               	clrc
  3382  0555  0DB5               	rlf	___llmod@divisor,f
  3383  0556  0DB6               	rlf	___llmod@divisor+1,f
  3384  0557  0DB7               	rlf	___llmod@divisor+2,f
  3385  0558  0DB8               	rlf	___llmod@divisor+3,f
  3386  0559  2D51               	goto	L13
  3387  055A                     l6620:	
  3388  055A  0838               	movf	___llmod@divisor+3,w
  3389  055B  023C               	subwf	___llmod@dividend+3,w
  3390  055C  1D03               	skipz
  3391  055D  2D68               	goto	u3035
  3392  055E  0837               	movf	___llmod@divisor+2,w
  3393  055F  023B               	subwf	___llmod@dividend+2,w
  3394  0560  1D03               	skipz
  3395  0561  2D68               	goto	u3035
  3396  0562  0836               	movf	___llmod@divisor+1,w
  3397  0563  023A               	subwf	___llmod@dividend+1,w
  3398  0564  1D03               	skipz
  3399  0565  2D68               	goto	u3035
  3400  0566  0835               	movf	___llmod@divisor,w
  3401  0567  0239               	subwf	___llmod@dividend,w
  3402  0568                     u3035:	
  3403  0568  1C03               	skipc
  3404  0569  2D79               	goto	L14
  3405  056A  0835               	movf	___llmod@divisor,w
  3406  056B  02B9               	subwf	___llmod@dividend,f
  3407  056C  0836               	movf	___llmod@divisor+1,w
  3408  056D  1C03               	skipc
  3409  056E  0F36               	incfsz	___llmod@divisor+1,w
  3410  056F  02BA               	subwf	___llmod@dividend+1,f
  3411  0570  0837               	movf	___llmod@divisor+2,w
  3412  0571  1C03               	skipc
  3413  0572  0F37               	incfsz	___llmod@divisor+2,w
  3414  0573  02BB               	subwf	___llmod@dividend+2,f
  3415  0574  0838               	movf	___llmod@divisor+3,w
  3416  0575  1C03               	skipc
  3417  0576  0F38               	incfsz	___llmod@divisor+3,w
  3418  0577  02BC               	subwf	___llmod@dividend+3,f
  3419  0578  1003               	clrc
  3420  0579                     L14:	
  3421  0579  0CB8               	rrf	___llmod@divisor+3,f
  3422  057A  0CB7               	rrf	___llmod@divisor+2,f
  3423  057B  0CB6               	rrf	___llmod@divisor+1,f
  3424  057C  0CB5               	rrf	___llmod@divisor,f
  3425  057D  0BBD               	decfsz	___llmod@counter,f
  3426  057E  2D5A               	goto	l6620
  3427  057F                     l6628:	
  3428  057F  083C               	movf	___llmod@dividend+3,w
  3429  0580  00B8               	movwf	?___llmod+3
  3430  0581  083B               	movf	___llmod@dividend+2,w
  3431  0582  00B7               	movwf	?___llmod+2
  3432  0583  083A               	movf	___llmod@dividend+1,w
  3433  0584  00B6               	movwf	?___llmod+1
  3434  0585  0839               	movf	___llmod@dividend,w
  3435  0586  00B5               	movwf	?___llmod
  3436  0587  0008               	return
  3437  0588                     __end_of___llmod:	
  3438  0588                     __ptext551:	
  3439 ;; =============== function ___awmod ends ============
  3440                           
  3441                           
  3442 ;; *************** function ___lldiv *****************
  3443 ;; Defined at:
  3444 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lldiv.c"
  3445 ;; Parameters:    Size  Location     Type
  3446 ;;  divisor         4    8[BANK0 ] unsigned long 
  3447 ;;  dividend        4   12[BANK0 ] unsigned long 
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;  quotient        4   16[BANK0 ] unsigned long 
  3450 ;;  counter         1   20[BANK0 ] unsigned char 
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  4    8[BANK0 ] unsigned long 
  3453 ;; Registers used:
  3454 ;;		wreg, status,2, status,0
  3455 ;; Tracked objects:
  3456 ;;		On entry : 60/0
  3457 ;;		On exit  : 60/0
  3458 ;;		Unchanged: FFF9F/0
  3459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3460 ;;      Params:         0       8       0       0       0
  3461 ;;      Locals:         0       5       0       0       0
  3462 ;;      Temps:          0       0       0       0       0
  3463 ;;      Totals:         0      13       0       0       0
  3464 ;;Total ram usage:       13 bytes
  3465 ;; Hardware stack levels used:    1
  3466 ;; Hardware stack levels required when called:    3
  3467 ;; This function calls:
  3468 ;;		Nothing
  3469 ;; This function is called by:
  3470 ;;		_printf
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473  0588                     ___lldiv:	
  3474                           
  3475                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3476  0588  01B0               	clrf	___lldiv@quotient
  3477  0589  01B1               	clrf	___lldiv@quotient+1
  3478  058A  01B2               	clrf	___lldiv@quotient+2
  3479  058B  01B3               	clrf	___lldiv@quotient+3
  3480  058C  082B               	movf	___lldiv@divisor+3,w
  3481  058D  042A               	iorwf	___lldiv@divisor+2,w
  3482  058E  0429               	iorwf	___lldiv@divisor+1,w
  3483  058F  0428               	iorwf	___lldiv@divisor,w
  3484  0590  1903               	skipnz
  3485  0591  2DC7               	goto	l6682
  3486  0592  01B4               	clrf	___lldiv@counter
  3487  0593                     L10:	
  3488  0593  0AB4               	incf	___lldiv@counter,f
  3489  0594  1BAB               	btfsc	___lldiv@divisor+3,7
  3490  0595  2D9C               	goto	l6670
  3491  0596  1003               	clrc
  3492  0597  0DA8               	rlf	___lldiv@divisor,f
  3493  0598  0DA9               	rlf	___lldiv@divisor+1,f
  3494  0599  0DAA               	rlf	___lldiv@divisor+2,f
  3495  059A  0DAB               	rlf	___lldiv@divisor+3,f
  3496  059B  2D93               	goto	L10
  3497  059C                     l6670:	
  3498  059C  1003               	clrc
  3499  059D  0DB0               	rlf	___lldiv@quotient,f
  3500  059E  0DB1               	rlf	___lldiv@quotient+1,f
  3501  059F  0DB2               	rlf	___lldiv@quotient+2,f
  3502  05A0  0DB3               	rlf	___lldiv@quotient+3,f
  3503  05A1  082B               	movf	___lldiv@divisor+3,w
  3504  05A2  022F               	subwf	___lldiv@dividend+3,w
  3505  05A3  1D03               	skipz
  3506  05A4  2DAF               	goto	u3115
  3507  05A5  082A               	movf	___lldiv@divisor+2,w
  3508  05A6  022E               	subwf	___lldiv@dividend+2,w
  3509  05A7  1D03               	skipz
  3510  05A8  2DAF               	goto	u3115
  3511  05A9  0829               	movf	___lldiv@divisor+1,w
  3512  05AA  022D               	subwf	___lldiv@dividend+1,w
  3513  05AB  1D03               	skipz
  3514  05AC  2DAF               	goto	u3115
  3515  05AD  0828               	movf	___lldiv@divisor,w
  3516  05AE  022C               	subwf	___lldiv@dividend,w
  3517  05AF                     u3115:	
  3518  05AF  1C03               	skipc
  3519  05B0  2DC1               	goto	L11
  3520  05B1  0828               	movf	___lldiv@divisor,w
  3521  05B2  02AC               	subwf	___lldiv@dividend,f
  3522  05B3  0829               	movf	___lldiv@divisor+1,w
  3523  05B4  1C03               	skipc
  3524  05B5  0F29               	incfsz	___lldiv@divisor+1,w
  3525  05B6  02AD               	subwf	___lldiv@dividend+1,f
  3526  05B7  082A               	movf	___lldiv@divisor+2,w
  3527  05B8  1C03               	skipc
  3528  05B9  0F2A               	incfsz	___lldiv@divisor+2,w
  3529  05BA  02AE               	subwf	___lldiv@dividend+2,f
  3530  05BB  082B               	movf	___lldiv@divisor+3,w
  3531  05BC  1C03               	skipc
  3532  05BD  0F2B               	incfsz	___lldiv@divisor+3,w
  3533  05BE  02AF               	subwf	___lldiv@dividend+3,f
  3534  05BF  1430               	bsf	___lldiv@quotient,0
  3535  05C0  1003               	clrc
  3536  05C1                     L11:	
  3537  05C1  0CAB               	rrf	___lldiv@divisor+3,f
  3538  05C2  0CAA               	rrf	___lldiv@divisor+2,f
  3539  05C3  0CA9               	rrf	___lldiv@divisor+1,f
  3540  05C4  0CA8               	rrf	___lldiv@divisor,f
  3541  05C5  0BB4               	decfsz	___lldiv@counter,f
  3542  05C6  2D9C               	goto	l6670
  3543  05C7                     l6682:	
  3544  05C7  0833               	movf	___lldiv@quotient+3,w
  3545  05C8  00AB               	movwf	?___lldiv+3
  3546  05C9  0832               	movf	___lldiv@quotient+2,w
  3547  05CA  00AA               	movwf	?___lldiv+2
  3548  05CB  0831               	movf	___lldiv@quotient+1,w
  3549  05CC  00A9               	movwf	?___lldiv+1
  3550  05CD  0830               	movf	___lldiv@quotient,w
  3551  05CE  00A8               	movwf	?___lldiv
  3552  05CF  0008               	return
  3553  05D0                     __end_of___lldiv:	
  3554  05D0                     __ptext563:	
  3555 ;; =============== function __div_to_l_ ends ============
  3556                           
  3557                           
  3558 ;; *************** function __tdiv_to_l_ *****************
  3559 ;; Defined at:
  3560 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdivl.c"
  3561 ;; Parameters:    Size  Location     Type
  3562 ;;  f1              3    8[BANK0 ] float 
  3563 ;;  f2              3   11[BANK0 ] float 
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;  quot            4   17[BANK0 ] unsigned long 
  3566 ;;  exp1            1   22[BANK0 ] unsigned char 
  3567 ;;  cntr            1   21[BANK0 ] unsigned char 
  3568 ;; Return value:  Size  Location     Type
  3569 ;;                  4    8[BANK0 ] unsigned long 
  3570 ;; Registers used:
  3571 ;;		wreg, status,2, status,0
  3572 ;; Tracked objects:
  3573 ;;		On entry : 60/0
  3574 ;;		On exit  : 60/0
  3575 ;;		Unchanged: FFF9F/0
  3576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3577 ;;      Params:         0       6       0       0       0
  3578 ;;      Locals:         0       6       0       0       0
  3579 ;;      Temps:          0       3       0       0       0
  3580 ;;      Totals:         0      15       0       0       0
  3581 ;;Total ram usage:       15 bytes
  3582 ;; Hardware stack levels used:    1
  3583 ;; Hardware stack levels required when called:    3
  3584 ;; This function calls:
  3585 ;;		Nothing
  3586 ;; This function is called by:
  3587 ;;		_printf
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590  05D0                     __tdiv_to_l_:	
  3591                           
  3592                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  3593  05D0  0828               	movf	__tdiv_to_l_@f1,w
  3594  05D1  00AE               	movwf	??__tdiv_to_l_
  3595  05D2  0829               	movf	__tdiv_to_l_@f1+1,w
  3596  05D3  00AF               	movwf	??__tdiv_to_l_+1
  3597  05D4  082A               	movf	__tdiv_to_l_@f1+2,w
  3598  05D5  00B0               	movwf	??__tdiv_to_l_+2
  3599  05D6  1003               	clrc
  3600  05D7  0D2F               	rlf	??__tdiv_to_l_+1,w
  3601  05D8  0D30               	rlf	??__tdiv_to_l_+2,w
  3602  05D9  00B6               	movwf	__tdiv_to_l_@exp1
  3603  05DA  08B6               	movf	__tdiv_to_l_@exp1,f
  3604  05DB  1D03               	skipz
  3605  05DC  2DE2               	goto	l6338
  3606  05DD                     l6336:	
  3607  05DD  01A8               	clrf	?__tdiv_to_l_
  3608  05DE  01A9               	clrf	?__tdiv_to_l_+1
  3609  05DF  01AA               	clrf	?__tdiv_to_l_+2
  3610  05E0  01AB               	clrf	?__tdiv_to_l_+3
  3611  05E1  0008               	return
  3612  05E2                     l6338:	
  3613  05E2  082B               	movf	__tdiv_to_l_@f2,w
  3614  05E3  00AE               	movwf	??__tdiv_to_l_
  3615  05E4  082C               	movf	__tdiv_to_l_@f2+1,w
  3616  05E5  00AF               	movwf	??__tdiv_to_l_+1
  3617  05E6  082D               	movf	__tdiv_to_l_@f2+2,w
  3618  05E7  00B0               	movwf	??__tdiv_to_l_+2
  3619  05E8  1003               	clrc
  3620  05E9  0D2F               	rlf	??__tdiv_to_l_+1,w
  3621  05EA  0D30               	rlf	??__tdiv_to_l_+2,w
  3622  05EB  00B5               	movwf	__tdiv_to_l_@cntr
  3623  05EC  08B5               	movf	__tdiv_to_l_@cntr,f
  3624  05ED  1903               	btfsc	3,2
  3625  05EE  2DDD               	goto	l6336
  3626  05EF  307F               	movlw	127
  3627  05F0  17A9               	bsf	__tdiv_to_l_@f1+1,7
  3628  05F1  01AA               	clrf	__tdiv_to_l_@f1+2
  3629  05F2  17AC               	bsf	__tdiv_to_l_@f2+1,7
  3630  05F3  01AD               	clrf	__tdiv_to_l_@f2+2
  3631  05F4  01B1               	clrf	__tdiv_to_l_@quot
  3632  05F5  01B2               	clrf	__tdiv_to_l_@quot+1
  3633  05F6  01B3               	clrf	__tdiv_to_l_@quot+2
  3634  05F7  01B4               	clrf	__tdiv_to_l_@quot+3
  3635  05F8  02B6               	subwf	__tdiv_to_l_@exp1,f
  3636  05F9  3098               	movlw	152
  3637  05FA  0735               	addwf	__tdiv_to_l_@cntr,w
  3638  05FB  00AE               	movwf	??__tdiv_to_l_
  3639  05FC  02B6               	subwf	__tdiv_to_l_@exp1,f
  3640  05FD  3018               	movlw	24
  3641  05FE  00B5               	movwf	__tdiv_to_l_@cntr
  3642  05FF                     l6352:	
  3643  05FF  1003               	clrc
  3644  0600  0DB1               	rlf	__tdiv_to_l_@quot,f
  3645  0601  0DB2               	rlf	__tdiv_to_l_@quot+1,f
  3646  0602  0DB3               	rlf	__tdiv_to_l_@quot+2,f
  3647  0603  0DB4               	rlf	__tdiv_to_l_@quot+3,f
  3648  0604  082D               	movf	__tdiv_to_l_@f2+2,w
  3649  0605  022A               	subwf	__tdiv_to_l_@f1+2,w
  3650  0606  1D03               	skipz
  3651  0607  2E0E               	goto	u2525
  3652  0608  082C               	movf	__tdiv_to_l_@f2+1,w
  3653  0609  0229               	subwf	__tdiv_to_l_@f1+1,w
  3654  060A  1D03               	skipz
  3655  060B  2E0E               	goto	u2525
  3656  060C  082B               	movf	__tdiv_to_l_@f2,w
  3657  060D  0228               	subwf	__tdiv_to_l_@f1,w
  3658  060E                     u2525:	
  3659  060E  1C03               	skipc
  3660  060F  2E1C               	goto	L19
  3661  0610  082B               	movf	__tdiv_to_l_@f2,w
  3662  0611  02A8               	subwf	__tdiv_to_l_@f1,f
  3663  0612  082C               	movf	__tdiv_to_l_@f2+1,w
  3664  0613  1C03               	skipc
  3665  0614  0F2C               	incfsz	__tdiv_to_l_@f2+1,w
  3666  0615  02A9               	subwf	__tdiv_to_l_@f1+1,f
  3667  0616  082D               	movf	__tdiv_to_l_@f2+2,w
  3668  0617  1C03               	skipc
  3669  0618  0A2D               	incf	__tdiv_to_l_@f2+2,w
  3670  0619  02AA               	subwf	__tdiv_to_l_@f1+2,f
  3671  061A  1431               	bsf	__tdiv_to_l_@quot,0
  3672  061B  1003               	clrc
  3673  061C                     L19:	
  3674  061C  0DA8               	rlf	__tdiv_to_l_@f1,f
  3675  061D  0DA9               	rlf	__tdiv_to_l_@f1+1,f
  3676  061E  0DAA               	rlf	__tdiv_to_l_@f1+2,f
  3677  061F  0BB5               	decfsz	__tdiv_to_l_@cntr,f
  3678  0620  2DFF               	goto	l6352
  3679  0621  1FB6               	btfss	__tdiv_to_l_@exp1,7
  3680  0622  2E30               	goto	l6372
  3681  0623  0836               	movf	__tdiv_to_l_@exp1,w
  3682  0624  3A80               	xorlw	128
  3683  0625  3E97               	addlw	151
  3684  0626  1C03               	btfss	3,0
  3685  0627  2DDD               	goto	l6336
  3686  0628                     l6368:	
  3687  0628  1003               	clrc
  3688  0629  0CB4               	rrf	__tdiv_to_l_@quot+3,f
  3689  062A  0CB3               	rrf	__tdiv_to_l_@quot+2,f
  3690  062B  0CB2               	rrf	__tdiv_to_l_@quot+1,f
  3691  062C  0CB1               	rrf	__tdiv_to_l_@quot,f
  3692  062D  0FB6               	incfsz	__tdiv_to_l_@exp1,f
  3693  062E  2E28               	goto	l6368
  3694  062F  2E3E               	goto	l6378
  3695  0630                     l6372:	
  3696  0630  3018               	movlw	24
  3697  0631  0236               	subwf	__tdiv_to_l_@exp1,w
  3698  0632  1803               	btfsc	3,0
  3699  0633  2DDD               	goto	l6336
  3700  0634                     l3521:	
  3701  0634  08B6               	movf	__tdiv_to_l_@exp1,f
  3702  0635  1903               	btfsc	3,2
  3703  0636  2E3E               	goto	l6378
  3704  0637  1003               	clrc
  3705  0638  0DB1               	rlf	__tdiv_to_l_@quot,f
  3706  0639  0DB2               	rlf	__tdiv_to_l_@quot+1,f
  3707  063A  0DB3               	rlf	__tdiv_to_l_@quot+2,f
  3708  063B  0DB4               	rlf	__tdiv_to_l_@quot+3,f
  3709  063C  03B6               	decf	__tdiv_to_l_@exp1,f
  3710  063D  2E34               	goto	l3521
  3711  063E                     l6378:	
  3712  063E  0834               	movf	__tdiv_to_l_@quot+3,w
  3713  063F  00AB               	movwf	?__tdiv_to_l_+3
  3714  0640  0833               	movf	__tdiv_to_l_@quot+2,w
  3715  0641  00AA               	movwf	?__tdiv_to_l_+2
  3716  0642  0832               	movf	__tdiv_to_l_@quot+1,w
  3717  0643  00A9               	movwf	?__tdiv_to_l_+1
  3718  0644  0831               	movf	__tdiv_to_l_@quot,w
  3719  0645  00A8               	movwf	?__tdiv_to_l_
  3720  0646  0008               	return
  3721  0647                     __end_of__tdiv_to_l_:	
  3722  0647                     __ptext553:	
  3723 ;; =============== function ___ftge ends ============
  3724                           
  3725                           
  3726 ;; *************** function ___ftneg *****************
  3727 ;; Defined at:
  3728 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftneg.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;  f1              3    8[BANK0 ] float 
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;		None
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  3    8[BANK0 ] float 
  3735 ;; Registers used:
  3736 ;;		wreg
  3737 ;; Tracked objects:
  3738 ;;		On entry : 160/0
  3739 ;;		On exit  : 160/0
  3740 ;;		Unchanged: FFE9F/0
  3741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3742 ;;      Params:         0       3       0       0       0
  3743 ;;      Locals:         0       0       0       0       0
  3744 ;;      Temps:          0       0       0       0       0
  3745 ;;      Totals:         0       3       0       0       0
  3746 ;;Total ram usage:        3 bytes
  3747 ;; Hardware stack levels used:    1
  3748 ;; Hardware stack levels required when called:    3
  3749 ;; This function calls:
  3750 ;;		Nothing
  3751 ;; This function is called by:
  3752 ;;		_printf
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755  0647                     ___ftneg:	
  3756                           
  3757                           ; Regs used in ___ftneg: [wreg]
  3758  0647  082A               	movf	___ftneg@f1+2,w
  3759  0648  0429               	iorwf	___ftneg@f1+1,w
  3760  0649  0428               	iorwf	___ftneg@f1,w
  3761  064A  1903               	skipnz
  3762  064B  0008               	return
  3763  064C  3080               	movlw	128
  3764  064D  06AA               	xorwf	___ftneg@f1+2,f
  3765  064E  0008               	return
  3766  064F                     __end_of___ftneg:	
  3767  064F                     __ptext547:	
  3768 ;; =============== function ___ftdiv ends ============
  3769                           
  3770                           
  3771 ;; *************** function ___ftadd *****************
  3772 ;; Defined at:
  3773 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;  f1              3   50[BANK0 ] float 
  3776 ;;  f2              3   53[BANK0 ] float 
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;  exp1            1   61[BANK0 ] unsigned char 
  3779 ;;  exp2            1   60[BANK0 ] unsigned char 
  3780 ;;  sign            1   59[BANK0 ] unsigned char 
  3781 ;; Return value:  Size  Location     Type
  3782 ;;                  3   50[BANK0 ] float 
  3783 ;; Registers used:
  3784 ;;		wreg, status,2, status,0, pclath, cstack
  3785 ;; Tracked objects:
  3786 ;;		On entry : 60/0
  3787 ;;		On exit  : 60/0
  3788 ;;		Unchanged: FFF9F/0
  3789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3790 ;;      Params:         0       6       0       0       0
  3791 ;;      Locals:         0       3       0       0       0
  3792 ;;      Temps:          0       3       0       0       0
  3793 ;;      Totals:         0      12       0       0       0
  3794 ;;Total ram usage:       12 bytes
  3795 ;; Hardware stack levels used:    1
  3796 ;; Hardware stack levels required when called:    4
  3797 ;; This function calls:
  3798 ;;		___ftpack
  3799 ;; This function is called by:
  3800 ;;		_main
  3801 ;;		_printf
  3802 ;;		___ftsub
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805  064F                     ___ftadd:	
  3806                           
  3807                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3808  064F  0852               	movf	___ftadd@f1,w
  3809  0650  00D8               	movwf	??___ftadd
  3810  0651  0853               	movf	___ftadd@f1+1,w
  3811  0652  00D9               	movwf	??___ftadd+1
  3812  0653  0854               	movf	___ftadd@f1+2,w
  3813  0654  00DA               	movwf	??___ftadd+2
  3814  0655  1003               	clrc
  3815  0656  0D59               	rlf	??___ftadd+1,w
  3816  0657  0D5A               	rlf	??___ftadd+2,w
  3817  0658  00DD               	movwf	___ftadd@exp1
  3818  0659  0855               	movf	___ftadd@f2,w
  3819  065A  00D8               	movwf	??___ftadd
  3820  065B  0856               	movf	___ftadd@f2+1,w
  3821  065C  00D9               	movwf	??___ftadd+1
  3822  065D  0857               	movf	___ftadd@f2+2,w
  3823  065E  00DA               	movwf	??___ftadd+2
  3824  065F  1003               	clrc
  3825  0660  0D59               	rlf	??___ftadd+1,w
  3826  0661  0D5A               	rlf	??___ftadd+2,w
  3827  0662  00DC               	movwf	___ftadd@exp2
  3828  0663  085D               	movf	___ftadd@exp1,w
  3829  0664  1903               	btfsc	3,2
  3830  0665  2E72               	goto	l6886
  3831  0666  085C               	movf	___ftadd@exp2,w
  3832  0667  025D               	subwf	___ftadd@exp1,w
  3833  0668  085C               	movf	___ftadd@exp2,w
  3834  0669  1803               	skipnc
  3835  066A  2E7A               	goto	L7
  3836  066B  00D8               	movwf	??___ftadd
  3837  066C  085D               	movf	___ftadd@exp1,w
  3838  066D  02D8               	subwf	??___ftadd,f
  3839  066E  3019               	movlw	25
  3840  066F  0258               	subwf	??___ftadd,w
  3841  0670  1C03               	skipc
  3842  0671  2E79               	goto	l6890
  3843  0672                     l6886:	
  3844  0672  0855               	movf	___ftadd@f2,w
  3845  0673  00D2               	movwf	?___ftadd
  3846  0674  0856               	movf	___ftadd@f2+1,w
  3847  0675  00D3               	movwf	?___ftadd+1
  3848  0676  0857               	movf	___ftadd@f2+2,w
  3849  0677  00D4               	movwf	?___ftadd+2
  3850  0678  0008               	return
  3851  0679                     l6890:	
  3852  0679  085C               	movf	___ftadd@exp2,w
  3853  067A                     L7:	
  3854  067A  1903               	btfsc	3,2
  3855  067B  0008               	return
  3856  067C  085D               	movf	___ftadd@exp1,w
  3857  067D  025C               	subwf	___ftadd@exp2,w
  3858  067E  1803               	skipnc
  3859  067F  2E88               	goto	l6896
  3860  0680  085D               	movf	___ftadd@exp1,w
  3861  0681  00D8               	movwf	??___ftadd
  3862  0682  085C               	movf	___ftadd@exp2,w
  3863  0683  02D8               	subwf	??___ftadd,f
  3864  0684  3019               	movlw	25
  3865  0685  0258               	subwf	??___ftadd,w
  3866  0686  1803               	btfsc	3,0
  3867  0687  0008               	return
  3868  0688                     l6896:	
  3869  0688  3006               	movlw	6
  3870  0689  00DB               	movwf	___ftadd@sign
  3871  068A  1BD4               	btfsc	___ftadd@f1+2,7
  3872  068B  17DB               	bsf	___ftadd@sign,7
  3873  068C  1BD7               	btfsc	___ftadd@f2+2,7
  3874  068D  175B               	bsf	___ftadd@sign,6
  3875  068E  17D3               	bsf	___ftadd@f1+1,7
  3876  068F  01D4               	clrf	___ftadd@f1+2
  3877  0690  17D6               	bsf	___ftadd@f2+1,7
  3878  0691  01D7               	clrf	___ftadd@f2+2
  3879  0692  085C               	movf	___ftadd@exp2,w
  3880  0693  025D               	subwf	___ftadd@exp1,w
  3881  0694  1803               	skipnc
  3882  0695  2EAF               	goto	l6918
  3883  0696                     l6908:	
  3884  0696  1003               	clrc
  3885  0697  0DD5               	rlf	___ftadd@f2,f
  3886  0698  0DD6               	rlf	___ftadd@f2+1,f
  3887  0699  0DD7               	rlf	___ftadd@f2+2,f
  3888  069A  03DC               	decf	___ftadd@exp2,f
  3889  069B  085C               	movf	___ftadd@exp2,w
  3890  069C  065D               	xorwf	___ftadd@exp1,w
  3891  069D  1903               	skipnz
  3892  069E  2EAA               	goto	l6916
  3893  069F  03DB               	decf	___ftadd@sign,f
  3894  06A0  085B               	movf	___ftadd@sign,w
  3895  06A1  3907               	andlw	7
  3896  06A2  1903               	btfsc	3,2
  3897  06A3  2EAA               	goto	l6916
  3898  06A4  2E96               	goto	l6908
  3899  06A5                     l6914:	
  3900  06A5  1003               	clrc
  3901  06A6  0CD4               	rrf	___ftadd@f1+2,f
  3902  06A7  0CD3               	rrf	___ftadd@f1+1,f
  3903  06A8  0CD2               	rrf	___ftadd@f1,f
  3904  06A9  0ADD               	incf	___ftadd@exp1,f
  3905  06AA                     l6916:	
  3906  06AA  085D               	movf	___ftadd@exp1,w
  3907  06AB  065C               	xorwf	___ftadd@exp2,w
  3908  06AC  1903               	btfsc	3,2
  3909  06AD  2ECB               	goto	l3327
  3910  06AE  2EA5               	goto	l6914
  3911  06AF                     l6918:	
  3912  06AF  085D               	movf	___ftadd@exp1,w
  3913  06B0  025C               	subwf	___ftadd@exp2,w
  3914  06B1  1803               	skipnc
  3915  06B2  2ECB               	goto	l3327
  3916  06B3                     l6920:	
  3917  06B3  1003               	clrc
  3918  06B4  0DD2               	rlf	___ftadd@f1,f
  3919  06B5  0DD3               	rlf	___ftadd@f1+1,f
  3920  06B6  0DD4               	rlf	___ftadd@f1+2,f
  3921  06B7  03DD               	decf	___ftadd@exp1,f
  3922  06B8  085C               	movf	___ftadd@exp2,w
  3923  06B9  065D               	xorwf	___ftadd@exp1,w
  3924  06BA  1903               	skipnz
  3925  06BB  2EC7               	goto	l6928
  3926  06BC  03DB               	decf	___ftadd@sign,f
  3927  06BD  085B               	movf	___ftadd@sign,w
  3928  06BE  3907               	andlw	7
  3929  06BF  1903               	btfsc	3,2
  3930  06C0  2EC7               	goto	l6928
  3931  06C1  2EB3               	goto	l6920
  3932  06C2                     l6926:	
  3933  06C2  1003               	clrc
  3934  06C3  0CD7               	rrf	___ftadd@f2+2,f
  3935  06C4  0CD6               	rrf	___ftadd@f2+1,f
  3936  06C5  0CD5               	rrf	___ftadd@f2,f
  3937  06C6  0ADC               	incf	___ftadd@exp2,f
  3938  06C7                     l6928:	
  3939  06C7  085D               	movf	___ftadd@exp1,w
  3940  06C8  065C               	xorwf	___ftadd@exp2,w
  3941  06C9  1D03               	skipz
  3942  06CA  2EC2               	goto	l6926
  3943  06CB                     l3327:	
  3944  06CB  1FDB               	btfss	___ftadd@sign,7
  3945  06CC  2ED6               	goto	l6934
  3946  06CD  30FF               	movlw	255
  3947  06CE  06D2               	xorwf	___ftadd@f1,f
  3948  06CF  06D3               	xorwf	___ftadd@f1+1,f
  3949  06D0  06D4               	xorwf	___ftadd@f1+2,f
  3950  06D1  0AD2               	incf	___ftadd@f1,f
  3951  06D2  1903               	skipnz
  3952  06D3  0AD3               	incf	___ftadd@f1+1,f
  3953  06D4  1903               	skipnz
  3954  06D5  0AD4               	incf	___ftadd@f1+2,f
  3955  06D6                     l6934:	
  3956  06D6  1F5B               	btfss	___ftadd@sign,6
  3957  06D7  2EE1               	goto	l6940
  3958  06D8  30FF               	movlw	255
  3959  06D9  06D5               	xorwf	___ftadd@f2,f
  3960  06DA  06D6               	xorwf	___ftadd@f2+1,f
  3961  06DB  06D7               	xorwf	___ftadd@f2+2,f
  3962  06DC  0AD5               	incf	___ftadd@f2,f
  3963  06DD  1903               	skipnz
  3964  06DE  0AD6               	incf	___ftadd@f2+1,f
  3965  06DF  1903               	skipnz
  3966  06E0  0AD7               	incf	___ftadd@f2+2,f
  3967  06E1                     l6940:	
  3968  06E1  01DB               	clrf	___ftadd@sign
  3969  06E2  0852               	movf	___ftadd@f1,w
  3970  06E3  07D5               	addwf	___ftadd@f2,f
  3971  06E4  0853               	movf	___ftadd@f1+1,w
  3972  06E5  1103               	clrz
  3973  06E6  1803               	skipnc
  3974  06E7  0A53               	incf	___ftadd@f1+1,w
  3975  06E8  1D03               	btfss	3,2
  3976  06E9  07D6               	addwf	___ftadd@f2+1,f
  3977  06EA  0854               	movf	___ftadd@f1+2,w
  3978  06EB  1103               	clrz
  3979  06EC  1803               	skipnc
  3980  06ED  0A54               	incf	___ftadd@f1+2,w
  3981  06EE  1D03               	btfss	3,2
  3982  06EF  07D7               	addwf	___ftadd@f2+2,f
  3983  06F0  1FD7               	btfss	___ftadd@f2+2,7
  3984  06F1  2EFD               	goto	l6952
  3985  06F2  30FF               	movlw	255
  3986  06F3  06D5               	xorwf	___ftadd@f2,f
  3987  06F4  06D6               	xorwf	___ftadd@f2+1,f
  3988  06F5  06D7               	xorwf	___ftadd@f2+2,f
  3989  06F6  0AD5               	incf	___ftadd@f2,f
  3990  06F7  1903               	skipnz
  3991  06F8  0AD6               	incf	___ftadd@f2+1,f
  3992  06F9  1903               	skipnz
  3993  06FA  0AD7               	incf	___ftadd@f2+2,f
  3994  06FB  01DB               	clrf	___ftadd@sign
  3995  06FC  0ADB               	incf	___ftadd@sign,f
  3996  06FD                     l6952:	
  3997  06FD  0855               	movf	___ftadd@f2,w
  3998  06FE  00A8               	movwf	?___ftpack
  3999  06FF  0856               	movf	___ftadd@f2+1,w
  4000  0700  00A9               	movwf	?___ftpack+1
  4001  0701  0857               	movf	___ftadd@f2+2,w
  4002  0702  00AA               	movwf	?___ftpack+2
  4003  0703  085D               	movf	___ftadd@exp1,w
  4004  0704  00AB               	movwf	?___ftpack+3
  4005  0705  085B               	movf	___ftadd@sign,w
  4006  0706  00AC               	movwf	?___ftpack+4
  4007  0707  120A  158A  2769   	fcall	___ftpack
  4008  070A  0828               	movf	?___ftpack,w
  4009  070B  00D2               	movwf	?___ftadd
  4010  070C  0829               	movf	?___ftpack+1,w
  4011  070D  00D3               	movwf	?___ftadd+1
  4012  070E  082A               	movf	?___ftpack+2,w
  4013  070F  00D4               	movwf	?___ftadd+2
  4014  0710  0008               	return
  4015  0711                     __end_of___ftadd:	
  4016  0711                     __ptext538:	
  4017 ;; =============== function _lcd_putc ends ============
  4018                           
  4019                           
  4020 ;; *************** function ___ftsub *****************
  4021 ;; Defined at:
  4022 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftsub.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;  f2              3   62[BANK0 ] float 
  4025 ;;  f1              3   65[BANK0 ] float 
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;		None
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  3   62[BANK0 ] float 
  4030 ;; Registers used:
  4031 ;;		wreg, status,2, status,0, pclath, cstack
  4032 ;; Tracked objects:
  4033 ;;		On entry : 60/0
  4034 ;;		On exit  : 60/0
  4035 ;;		Unchanged: FFF9F/0
  4036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4037 ;;      Params:         0       6       0       0       0
  4038 ;;      Locals:         0       0       0       0       0
  4039 ;;      Temps:          0       0       0       0       0
  4040 ;;      Totals:         0       6       0       0       0
  4041 ;;Total ram usage:        6 bytes
  4042 ;; Hardware stack levels used:    1
  4043 ;; Hardware stack levels required when called:    5
  4044 ;; This function calls:
  4045 ;;		___ftadd
  4046 ;; This function is called by:
  4047 ;;		_main
  4048 ;;		_printf
  4049 ;; This function uses a non-reentrant model
  4050 ;;
  4051  0711                     ___ftsub:	
  4052                           
  4053                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  4054  0711  3080               	movlw	128
  4055  0712  06E0               	xorwf	___ftsub@f2+2,f
  4056  0713  0861               	movf	___ftsub@f1,w
  4057  0714  00D2               	movwf	?___ftadd
  4058  0715  0862               	movf	___ftsub@f1+1,w
  4059  0716  00D3               	movwf	?___ftadd+1
  4060  0717  0863               	movf	___ftsub@f1+2,w
  4061  0718  00D4               	movwf	?___ftadd+2
  4062  0719  085E               	movf	___ftsub@f2,w
  4063  071A  00D5               	movwf	?___ftadd+3
  4064  071B  085F               	movf	___ftsub@f2+1,w
  4065  071C  00D6               	movwf	?___ftadd+4
  4066  071D  0860               	movf	___ftsub@f2+2,w
  4067  071E  00D7               	movwf	?___ftadd+5
  4068  071F  264F               	fcall	___ftadd
  4069  0720  0852               	movf	?___ftadd,w
  4070  0721  00DE               	movwf	?___ftsub
  4071  0722  0853               	movf	?___ftadd+1,w
  4072  0723  00DF               	movwf	?___ftsub+1
  4073  0724  0854               	movf	?___ftadd+2,w
  4074  0725  00E0               	movwf	?___ftsub+2
  4075  0726  0008               	return
  4076  0727                     __end_of___ftsub:	
  4077  0727                     PL3:	
  4078  0727  082D               	movf	printf@integ^(0+128),w
  4079  0728  1283               	bcf	3,5	;RP0=0, select bank0
  4080  0729  00A8               	movwf	?___ftge
  4081  072A  1683               	bsf	3,5	;RP0=1, select bank1
  4082  072B  082E               	movf	(printf@integ+1)^(0+128),w
  4083  072C  1283               	bcf	3,5	;RP0=0, select bank0
  4084  072D  00A9               	movwf	?___ftge+1
  4085  072E  1683               	bsf	3,5	;RP0=1, select bank1
  4086  072F  082F               	movf	(printf@integ+2)^(0+128),w
  4087  0730  1283               	bcf	3,5	;RP0=0, select bank0
  4088  0731  00AA               	movwf	?___ftge+2
  4089  0732  0008               	return
  4090  0733                     PL4:	
  4091  0733  00AB               	movwf	?___lldiv+3
  4092  0734  1683               	bsf	3,5	;RP0=1, select bank1
  4093  0735  0833               	movf	(printf@_val+3)^(0+128),w
  4094  0736  1283               	bcf	3,5	;RP0=0, select bank0
  4095  0737  00AF               	movwf	?___lldiv+7
  4096  0738  1683               	bsf	3,5	;RP0=1, select bank1
  4097  0739  0832               	movf	(printf@_val+2)^(0+128),w
  4098  073A  1283               	bcf	3,5	;RP0=0, select bank0
  4099  073B  00AE               	movwf	?___lldiv+6
  4100  073C  1683               	bsf	3,5	;RP0=1, select bank1
  4101  073D  0831               	movf	(printf@_val+1)^(0+128),w
  4102  073E  1283               	bcf	3,5	;RP0=0, select bank0
  4103  073F  00AD               	movwf	?___lldiv+5
  4104  0740  1683               	bsf	3,5	;RP0=1, select bank1
  4105  0741  0830               	movf	printf@_val^(0+128),w
  4106  0742  1283               	bcf	3,5	;RP0=0, select bank0
  4107  0743  00AC               	movwf	?___lldiv+4
  4108  0744  0008               	return
  4109  0745                     PL5:	
  4110  0745  0840               	movf	printf@c^(0+128),w
  4111  0746  00A3               	movwf	??_printf^(0+128)
  4112  0747  1003               	clrc
  4113  0748  0DA3               	rlf	??_printf^(0+128),f
  4114  0749  1003               	clrc
  4115  074A  0D23               	rlf	??_printf^(0+128),w
  4116  074B  3E4F               	addlw	low (_dpowers-__stringbase)
  4117  074C  0084               	movwf	4
  4118  074D  0008               	return
  4119  074E                     PL6:	
  4120  074E  300A               	movlw	10
  4121  074F  1283               	bcf	3,5	;RP0=0, select bank0
  4122  0750  00B5               	movwf	?___llmod
  4123  0751  01B6               	clrf	?___llmod+1
  4124  0752  01B7               	clrf	?___llmod+2
  4125  0753  01B8               	clrf	?___llmod+3
  4126  0754  1683               	bsf	3,5	;RP0=1, select bank1
  4127  0755  0008               	return
  4128  0756                     PL7:	
  4129  0756  1283               	bcf	3,5	;RP0=0, select bank0
  4130  0757  0728               	addwf	?___wmul,w
  4131  0758  1683               	bsf	3,5	;RP0=1, select bank1
  4132  0759  00A3               	movwf	??_printf^(0+128)
  4133  075A  3000               	movlw	0
  4134  075B  1803               	skipnc
  4135  075C  3001               	movlw	1
  4136  075D  1283               	bcf	3,5	;RP0=0, select bank0
  4137  075E  0729               	addwf	?___wmul+1,w
  4138  075F  1683               	bsf	3,5	;RP0=1, select bank1
  4139  0760  00A4               	movwf	(??_printf+1)^(0+128)
  4140  0761  0823               	movf	??_printf^(0+128),w
  4141  0762  3ED0               	addlw	208
  4142  0763  0008               	return
  4143  0764                     PL8:	
  4144  0764  0852               	movf	?_scale,w
  4145  0765  1683               	bsf	3,5	;RP0=1, select bank1
  4146  0766  00AD               	movwf	printf@integ^(0+128)
  4147  0767  1283               	bcf	3,5	;RP0=0, select bank0
  4148  0768  0853               	movf	?_scale+1,w
  4149  0769  1683               	bsf	3,5	;RP0=1, select bank1
  4150  076A  00AE               	movwf	(printf@integ+1)^(0+128)
  4151  076B  1283               	bcf	3,5	;RP0=0, select bank0
  4152  076C  0854               	movf	?_scale+2,w
  4153  076D  1683               	bsf	3,5	;RP0=1, select bank1
  4154  076E  00AF               	movwf	(printf@integ+2)^(0+128)
  4155  076F  083B               	movf	printf@fval^(0+128),w
  4156  0770  1283               	bcf	3,5	;RP0=0, select bank0
  4157  0771  0008               	return
  4158  0772                     PL9:	
  4159  0772  0839               	movf	?___fttol+3,w
  4160  0773  1683               	bsf	3,5	;RP0=1, select bank1
  4161  0774  00B3               	movwf	(printf@_val+3)^(0+128)
  4162  0775  1283               	bcf	3,5	;RP0=0, select bank0
  4163  0776  0838               	movf	?___fttol+2,w
  4164  0777  1683               	bsf	3,5	;RP0=1, select bank1
  4165  0778  00B2               	movwf	(printf@_val+2)^(0+128)
  4166  0779  1283               	bcf	3,5	;RP0=0, select bank0
  4167  077A  0837               	movf	?___fttol+1,w
  4168  077B  1683               	bsf	3,5	;RP0=1, select bank1
  4169  077C  00B1               	movwf	(printf@_val+1)^(0+128)
  4170  077D  1283               	bcf	3,5	;RP0=0, select bank0
  4171  077E  0836               	movf	?___fttol,w
  4172  077F  0008               	return
  4173  0780                     PL14:	
  4174  0780  1283               	bcf	3,5	;RP0=0, select bank0
  4175  0781  00B6               	movwf	?___fttol
  4176  0782  1683               	bsf	3,5	;RP0=1, select bank1
  4177  0783  083C               	movf	(printf@fval+1)^(0+128),w
  4178  0784  1283               	bcf	3,5	;RP0=0, select bank0
  4179  0785  00B7               	movwf	?___fttol+1
  4180  0786  1683               	bsf	3,5	;RP0=1, select bank1
  4181  0787  083D               	movf	(printf@fval+2)^(0+128),w
  4182  0788  1283               	bcf	3,5	;RP0=0, select bank0
  4183  0789  00B8               	movwf	?___fttol+2
  4184  078A  0008               	return
  4185  078B                     PL17:	
  4186  078B  00C3               	movwf	?___ftmul
  4187  078C  1683               	bsf	3,5	;RP0=1, select bank1
  4188  078D  083C               	movf	(printf@fval+1)^(0+128),w
  4189  078E  1283               	bcf	3,5	;RP0=0, select bank0
  4190  078F  00C4               	movwf	?___ftmul+1
  4191  0790  1683               	bsf	3,5	;RP0=1, select bank1
  4192  0791  083D               	movf	(printf@fval+2)^(0+128),w
  4193  0792  1283               	bcf	3,5	;RP0=0, select bank0
  4194  0793  00C5               	movwf	?___ftmul+2
  4195  0794  0008               	return
  4196  0795                     PL19:	
  4197  0795  082B               	movf	?___lldiv+3,w
  4198  0796  00BC               	movwf	?___llmod+7
  4199  0797  082A               	movf	?___lldiv+2,w
  4200  0798  00BB               	movwf	?___llmod+6
  4201  0799  0829               	movf	?___lldiv+1,w
  4202  079A  00BA               	movwf	?___llmod+5
  4203  079B  0828               	movf	?___lldiv,w
  4204  079C  00B9               	movwf	?___llmod+4
  4205  079D  0008               	return
  4206  079E                     PL24:	
  4207  079E  00A3               	movwf	??_printf^(0+128)
  4208  079F  01A4               	clrf	(??_printf^(0+128)+1)
  4209  07A0  1BA3               	btfsc	??_printf^(0+128),7
  4210  07A1  03A4               	decf	(??_printf^(0+128)+1),f
  4211  07A2  0824               	movf	(??_printf+1)^(0+128),w
  4212  07A3  3A80               	xorlw	128
  4213  07A4  00A5               	movwf	(??_printf+2)^(0+128)
  4214  07A5  0008               	return
  4215  07A6                     PL27:	
  4216  07A6  0836               	movf	___fttol@f1,w
  4217  07A7  00BA               	movwf	??___fttol
  4218  07A8  0837               	movf	___fttol@f1+1,w
  4219  07A9  00BB               	movwf	??___fttol+1
  4220  07AA  0838               	movf	___fttol@f1+2,w
  4221  07AB  00BC               	movwf	??___fttol+2
  4222  07AC  0008               	return
  4223  07AD                     PL29:	
  4224  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  4225  07AE  00A8               	movwf	?___wmul
  4226  07AF  300A               	movlw	10
  4227  07B0  00AA               	movwf	?___wmul+2
  4228  07B1  01AB               	clrf	?___wmul+3
  4229  07B2  0008               	return
  4230  07B3                     PL30:	
  4231  07B3  1683               	bsf	3,5	;RP0=1, select bank1
  4232  07B4  1303               	bcf	3,6	;RP1=0, select bank1
  4233  07B5  0008               	return
  4234                           
  4235                           	psect	text540
  4236  0900                     __ptext540:	
  4237 ;; =============== function _scale ends ============
  4238                           
  4239                           
  4240 ;; *************** function _fround *****************
  4241 ;; Defined at:
  4242 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;  prec            1    wreg     unsigned char 
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;  prec            1   71[BANK0 ] unsigned char 
  4247 ;; Return value:  Size  Location     Type
  4248 ;;                  3   62[BANK0 ] unsigned char 
  4249 ;; Registers used:
  4250 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4251 ;; Tracked objects:
  4252 ;;		On entry : 60/20
  4253 ;;		On exit  : 60/0
  4254 ;;		Unchanged: FFF9F/0
  4255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4256 ;;      Params:         0       3       0       0       0
  4257 ;;      Locals:         0       7       0       0       0
  4258 ;;      Temps:          0       0       0       0       0
  4259 ;;      Totals:         0      10       0       0       0
  4260 ;;Total ram usage:       10 bytes
  4261 ;; Hardware stack levels used:    1
  4262 ;; Hardware stack levels required when called:    5
  4263 ;; This function calls:
  4264 ;;		___lbmod
  4265 ;;		___bmul
  4266 ;;		___lbdiv
  4267 ;;		___ftmul
  4268 ;; This function is called by:
  4269 ;;		_printf
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272  0900                     _fround:	
  4273                           
  4274                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4275                           ;fround@prec stored from wreg
  4276  0900  1283               	bcf	3,5	;RP0=0, select bank0
  4277  0901  00E7               	movwf	fround@prec
  4278  0902  306E               	movlw	110
  4279  0903  0267               	subwf	fround@prec,w
  4280  0904  1C03               	skipc
  4281  0905  298B               	goto	l7130
  4282  0906  3003               	movlw	3
  4283  0907  00B1               	movwf	?___bmul
  4284  0908  300A               	movlw	10
  4285  0909  00AD               	movwf	?___lbdiv
  4286  090A  3064               	movlw	100
  4287  090B  00A8               	movwf	?___lbmod
  4288  090C  0867               	movf	fround@prec,w
  4289  090D  2220  120A  158A   	fcall	___lbmod
  4290  0910  2205               	fcall	___lbdiv
  4291  0911  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4292  0916  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4293  0917  0084               	movwf	4
  4294  0918  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4295  091D  00C3               	movwf	?___ftmul
  4296  091E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4297  0923  00C4               	movwf	?___ftmul+1
  4298  0924  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4299  0929  00C5               	movwf	?___ftmul+2
  4300  092A  3003               	movlw	3
  4301  092B  00B1               	movwf	?___bmul
  4302  092C  3064               	movlw	100
  4303  092D  00AD               	movwf	?___lbdiv
  4304  092E  0867               	movf	fround@prec,w
  4305  092F  2205               	fcall	___lbdiv
  4306  0930  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4307  0935  3E37               	addlw	low ((__npowers_-__stringbase+54))
  4308  0936  0084               	movwf	4
  4309  0937  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4310  093C  00C6               	movwf	?___ftmul+3
  4311  093D  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4312  0942  00C7               	movwf	?___ftmul+4
  4313  0943  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4314  0948  00C8               	movwf	?___ftmul+5
  4315  0949  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4316  094E  224B  120A  158A   	fcall	PL26	;call to abstracted procedure
  4317  0951  3003               	movlw	3
  4318  0952  00B1               	movwf	?___bmul
  4319  0953  300A               	movlw	10
  4320  0954  00A8               	movwf	?___lbmod
  4321  0955  0867               	movf	fround@prec,w
  4322  0956  2220               	fcall	___lbmod
  4323  0957  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4324  095C  3E01               	addlw	low (__npowers_-__stringbase)
  4325  095D  0084               	movwf	4
  4326  095E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4327  0963  00C3               	movwf	?___ftmul
  4328  0964  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4329  0969  00C4               	movwf	?___ftmul+1
  4330  096A  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4331  096F  2243               	fcall	PL21	;call to abstracted procedure
  4332  0970  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4333  0975  0843               	movf	?___ftmul,w
  4334  0976  00E1               	movwf	_fround$4111
  4335  0977  0844               	movf	?___ftmul+1,w
  4336  0978  00E2               	movwf	_fround$4111+1
  4337  0979  0845               	movf	?___ftmul+2,w
  4338  097A  00E3               	movwf	_fround$4111+2
  4339  097B  303F               	movlw	63
  4340  097C  01C3               	clrf	?___ftmul
  4341  097D  01C4               	clrf	?___ftmul+1
  4342  097E  00C5               	movwf	?___ftmul+2
  4343  097F  0861               	movf	_fround$4111,w
  4344  0980  00C6               	movwf	?___ftmul+3
  4345  0981  0862               	movf	_fround$4111+1,w
  4346  0982  00C7               	movwf	?___ftmul+4
  4347  0983  0863               	movf	_fround$4111+2,w
  4348  0984  00C8               	movwf	?___ftmul+5
  4349  0985  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4350  098A  2A3C               	ljmp	PL16	;call to abstracted procedure
  4351  098B                     l7130:	
  4352  098B  300B               	movlw	11
  4353  098C  0267               	subwf	fround@prec,w
  4354  098D  1C03               	skipc
  4355  098E  29DF               	goto	l7138
  4356  098F  3003               	movlw	3
  4357  0990  00B1               	movwf	?___bmul
  4358  0991  300A               	movlw	10
  4359  0992  00A8               	movwf	?___lbmod
  4360  0993  0867               	movf	fround@prec,w
  4361  0994  2220               	fcall	___lbmod
  4362  0995  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4363  099A  3E01               	addlw	low (__npowers_-__stringbase)
  4364  099B  0084               	movwf	4
  4365  099C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4366  09A1  00C3               	movwf	?___ftmul
  4367  09A2  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4368  09A7  00C4               	movwf	?___ftmul+1
  4369  09A8  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4370  09AD  00C5               	movwf	?___ftmul+2
  4371  09AE  3003               	movlw	3
  4372  09AF  00B1               	movwf	?___bmul
  4373  09B0  300A               	movlw	10
  4374  09B1  00AD               	movwf	?___lbdiv
  4375  09B2  0867               	movf	fround@prec,w
  4376  09B3  2205               	fcall	___lbdiv
  4377  09B4  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4378  09B9  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4379  09BA  0084               	movwf	4
  4380  09BB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4381  09C0  00C6               	movwf	?___ftmul+3
  4382  09C1  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4383  09C6  00C7               	movwf	?___ftmul+4
  4384  09C7  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4385  09CC  00C8               	movwf	?___ftmul+5
  4386  09CD  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4387  09D2  224B  120A  158A   	fcall	PL26	;call to abstracted procedure
  4388  09D5  303F               	movlw	63
  4389  09D6  01C3               	clrf	?___ftmul
  4390  09D7  01C4               	clrf	?___ftmul+1
  4391  09D8  2243               	fcall	PL21	;call to abstracted procedure
  4392  09D9  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4393  09DE  2A3C               	ljmp	PL16	;call to abstracted procedure
  4394  09DF                     l7138:	
  4395  09DF  303F               	movlw	63
  4396  09E0  01C3               	clrf	?___ftmul
  4397  09E1  01C4               	clrf	?___ftmul+1
  4398  09E2  00C5               	movwf	?___ftmul+2
  4399  09E3  3003               	movlw	3
  4400  09E4  00B1               	movwf	?___bmul
  4401  09E5  0867               	movf	fround@prec,w
  4402  09E6  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4403  09EB  3E01               	addlw	low (__npowers_-__stringbase)
  4404  09EC  0084               	movwf	4
  4405  09ED  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4406  09F2  00C6               	movwf	?___ftmul+3
  4407  09F3  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4408  09F8  00C7               	movwf	?___ftmul+4
  4409  09F9  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4410  09FE  00C8               	movwf	?___ftmul+5
  4411  09FF  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4412  0A04  2A3C               	ljmp	PL16	;call to abstracted procedure
  4413  0A05                     __end_of_fround:	
  4414  0A05                     __ptext559:	
  4415 ;; =============== function ___lbmod ends ============
  4416                           
  4417                           
  4418 ;; *************** function ___lbdiv *****************
  4419 ;; Defined at:
  4420 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbdiv.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;  dividend        1    wreg     unsigned char 
  4423 ;;  divisor         1   13[BANK0 ] unsigned char 
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;  dividend        1   14[BANK0 ] unsigned char 
  4426 ;;  quotient        1   16[BANK0 ] unsigned char 
  4427 ;;  counter         1   15[BANK0 ] unsigned char 
  4428 ;; Return value:  Size  Location     Type
  4429 ;;                  1    wreg      unsigned char 
  4430 ;; Registers used:
  4431 ;;		wreg, status,2, status,0
  4432 ;; Tracked objects:
  4433 ;;		On entry : 60/0
  4434 ;;		On exit  : 60/0
  4435 ;;		Unchanged: FFF9F/0
  4436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4437 ;;      Params:         0       1       0       0       0
  4438 ;;      Locals:         0       3       0       0       0
  4439 ;;      Temps:          0       0       0       0       0
  4440 ;;      Totals:         0       4       0       0       0
  4441 ;;Total ram usage:        4 bytes
  4442 ;; Hardware stack levels used:    1
  4443 ;; Hardware stack levels required when called:    3
  4444 ;; This function calls:
  4445 ;;		Nothing
  4446 ;; This function is called by:
  4447 ;;		_fround
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450  0A05                     ___lbdiv:	
  4451                           
  4452                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  4453                           ;___lbdiv@dividend stored from wreg
  4454  0A05  00AE               	movwf	___lbdiv@dividend
  4455  0A06  01B0               	clrf	___lbdiv@quotient
  4456  0A07  082D               	movf	___lbdiv@divisor,w
  4457  0A08  1903               	btfsc	3,2
  4458  0A09  2A1E               	goto	l6480
  4459  0A0A  01AF               	clrf	___lbdiv@counter
  4460  0A0B                     l6466:	
  4461  0A0B  0AAF               	incf	___lbdiv@counter,f
  4462  0A0C  1BAD               	btfsc	___lbdiv@divisor,7
  4463  0A0D  2A11               	goto	l3296
  4464  0A0E  1003               	clrc
  4465  0A0F  0DAD               	rlf	___lbdiv@divisor,f
  4466  0A10  2A0B               	goto	l6466
  4467  0A11                     l3296:	
  4468  0A11  1003               	clrc
  4469  0A12  0DB0               	rlf	___lbdiv@quotient,f
  4470  0A13  082D               	movf	___lbdiv@divisor,w
  4471  0A14  022E               	subwf	___lbdiv@dividend,w
  4472  0A15  1C03               	skipc
  4473  0A16  2A1B               	goto	L18
  4474  0A17  082D               	movf	___lbdiv@divisor,w
  4475  0A18  02AE               	subwf	___lbdiv@dividend,f
  4476  0A19  1430               	bsf	___lbdiv@quotient,0
  4477  0A1A  1003               	clrc
  4478  0A1B                     L18:	
  4479  0A1B  0CAD               	rrf	___lbdiv@divisor,f
  4480  0A1C  0BAF               	decfsz	___lbdiv@counter,f
  4481  0A1D  2A11               	goto	l3296
  4482  0A1E                     l6480:	
  4483  0A1E  0830               	movf	___lbdiv@quotient,w
  4484  0A1F  0008               	return
  4485  0A20                     __end_of___lbdiv:	
  4486  0A20                     __ptext558:	
  4487 ;; =============== function ___ftpack ends ============
  4488                           
  4489                           
  4490 ;; *************** function ___lbmod *****************
  4491 ;; Defined at:
  4492 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbmod.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;  dividend        1    wreg     unsigned char 
  4495 ;;  divisor         1    8[BANK0 ] unsigned char 
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;  dividend        1   10[BANK0 ] unsigned char 
  4498 ;;  rem             1   12[BANK0 ] unsigned char 
  4499 ;;  counter         1   11[BANK0 ] unsigned char 
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  1    wreg      unsigned char 
  4502 ;; Registers used:
  4503 ;;		wreg, status,2, status,0
  4504 ;; Tracked objects:
  4505 ;;		On entry : 60/0
  4506 ;;		On exit  : 60/0
  4507 ;;		Unchanged: FFF9F/0
  4508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4509 ;;      Params:         0       1       0       0       0
  4510 ;;      Locals:         0       3       0       0       0
  4511 ;;      Temps:          0       1       0       0       0
  4512 ;;      Totals:         0       5       0       0       0
  4513 ;;Total ram usage:        5 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; Hardware stack levels required when called:    3
  4516 ;; This function calls:
  4517 ;;		Nothing
  4518 ;; This function is called by:
  4519 ;;		_fround
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522  0A20                     ___lbmod:	
  4523                           
  4524                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  4525                           ;___lbmod@dividend stored from wreg
  4526  0A20  00AA               	movwf	___lbmod@dividend
  4527  0A21  3008               	movlw	8
  4528  0A22  00AB               	movwf	___lbmod@counter
  4529  0A23  01AC               	clrf	___lbmod@rem
  4530  0A24                     l6488:	
  4531  0A24  082A               	movf	___lbmod@dividend,w
  4532  0A25  00A9               	movwf	??___lbmod
  4533  0A26  3007               	movlw	7
  4534  0A27  1003               	clrc
  4535  0A28                     L17:	
  4536  0A28  0CA9               	rrf	??___lbmod,f
  4537  0A29  3EFF               	addlw	-1
  4538  0A2A  1003               	clrc
  4539  0A2B  1D03               	skipz
  4540  0A2C  2A28               	goto	L17
  4541  0A2D  0D2C               	rlf	___lbmod@rem,w
  4542  0A2E  0429               	iorwf	??___lbmod,w
  4543  0A2F  00AC               	movwf	___lbmod@rem
  4544  0A30  1003               	clrc
  4545  0A31  0DAA               	rlf	___lbmod@dividend,f
  4546  0A32  0828               	movf	___lbmod@divisor,w
  4547  0A33  022C               	subwf	___lbmod@rem,w
  4548  0A34  1C03               	skipc
  4549  0A35  2A38               	goto	l6496
  4550  0A36  0828               	movf	___lbmod@divisor,w
  4551  0A37  02AC               	subwf	___lbmod@rem,f
  4552  0A38                     l6496:	
  4553  0A38  0BAB               	decfsz	___lbmod@counter,f
  4554  0A39  2A24               	goto	l6488
  4555  0A3A  082C               	movf	___lbmod@rem,w
  4556  0A3B  0008               	return
  4557  0A3C                     __end_of___lbmod:	
  4558  0A3C                     PL16:	
  4559  0A3C  0843               	movf	?___ftmul,w
  4560  0A3D  00DE               	movwf	?_fround
  4561  0A3E  0844               	movf	?___ftmul+1,w
  4562  0A3F  00DF               	movwf	?_fround+1
  4563  0A40  0845               	movf	?___ftmul+2,w
  4564  0A41  00E0               	movwf	?_fround+2
  4565  0A42  0008               	return
  4566  0A43                     PL21:	
  4567  0A43  00C5               	movwf	?___ftmul+2
  4568  0A44  0864               	movf	_fround$4110,w
  4569  0A45  00C6               	movwf	?___ftmul+3
  4570  0A46  0865               	movf	_fround$4110+1,w
  4571  0A47  00C7               	movwf	?___ftmul+4
  4572  0A48  0866               	movf	_fround$4110+2,w
  4573  0A49  00C8               	movwf	?___ftmul+5
  4574  0A4A  0008               	return
  4575  0A4B                     PL26:	
  4576  0A4B  0843               	movf	?___ftmul,w
  4577  0A4C  00E4               	movwf	_fround$4110
  4578  0A4D  0844               	movf	?___ftmul+1,w
  4579  0A4E  00E5               	movwf	_fround$4110+1
  4580  0A4F  0845               	movf	?___ftmul+2,w
  4581  0A50  00E6               	movwf	_fround$4110+2
  4582  0A51  0008               	return
  4583                           
  4584                           	psect	text541
  4585  0A52                     __ptext541:	
  4586 ;; =============== function _fround ends ============
  4587                           
  4588                           
  4589 ;; *************** function _lcd_gotoxy *****************
  4590 ;; Defined at:
  4591 ;;		line 162 in file "C:\Online Class\HK6\Practice_Micro\tmr0 counter\lcd(16).c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;  col             1    wreg     unsigned char 
  4594 ;;  row             1   13[BANK0 ] unsigned char 
  4595 ;; Auto vars:     Size  Location     Type
  4596 ;;  col             1   14[BANK0 ] unsigned char 
  4597 ;;  address         1   15[BANK0 ] unsigned char 
  4598 ;; Return value:  Size  Location     Type
  4599 ;;		None               void
  4600 ;; Registers used:
  4601 ;;		wreg, status,2, status,0, pclath, cstack
  4602 ;; Tracked objects:
  4603 ;;		On entry : 60/0
  4604 ;;		On exit  : 60/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4607 ;;      Params:         0       1       0       0       0
  4608 ;;      Locals:         0       2       0       0       0
  4609 ;;      Temps:          0       0       0       0       0
  4610 ;;      Totals:         0       3       0       0       0
  4611 ;;Total ram usage:        3 bytes
  4612 ;; Hardware stack levels used:    1
  4613 ;; Hardware stack levels required when called:    4
  4614 ;; This function calls:
  4615 ;;		_lcd_put_byte
  4616 ;;		_lcd_busy
  4617 ;; This function is called by:
  4618 ;;		_main
  4619 ;;		_lcd_putc
  4620 ;; This function uses a non-reentrant model
  4621 ;;
  4622  0A52                     _lcd_gotoxy:	
  4623                           
  4624                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  4625                           ;lcd_gotoxy@col stored from wreg
  4626  0A52  00AE               	movwf	lcd_gotoxy@col
  4627                           
  4628                           ;lcd(16).c: 163: unsigned char address;
  4629                           ;lcd(16).c: 165: if(row!=0)
  4630  0A53  082D               	movf	lcd_gotoxy@row,w
  4631  0A54  1903               	btfsc	3,2
  4632  0A55  2A59               	goto	l7112
  4633                           
  4634                           ;lcd(16).c: 166: address=0x40;
  4635  0A56  3040               	movlw	64
  4636  0A57  00AF               	movwf	lcd_gotoxy@address
  4637  0A58  2A5A               	goto	l7114
  4638  0A59                     l7112:	
  4639                           
  4640                           ;lcd(16).c: 167: else
  4641                           ;lcd(16).c: 168: address=0;
  4642  0A59  01AF               	clrf	lcd_gotoxy@address
  4643  0A5A                     l7114:	
  4644                           
  4645                           ;lcd(16).c: 170: address += col;
  4646  0A5A  082E               	movf	lcd_gotoxy@col,w
  4647  0A5B  07AF               	addwf	lcd_gotoxy@address,f
  4648                           
  4649                           ;lcd(16).c: 171: lcd_put_byte(0,0x80|address);
  4650  0A5C  082F               	movf	lcd_gotoxy@address,w
  4651  0A5D  3880               	iorlw	128
  4652  0A5E  00A8               	movwf	?_lcd_put_byte
  4653  0A5F  3000               	movlw	0
  4654  0A60  235A  120A  158A   	fcall	_lcd_put_byte
  4655  0A63                     l7118:	
  4656                           ;lcd(16).c: 172: while(lcd_busy());
  4657                           
  4658  0A63  2405  120A  158A   	fcall	_lcd_busy
  4659  0A66  3800               	iorlw	0
  4660  0A67  1903               	btfsc	3,2
  4661  0A68  0008               	return
  4662  0A69  2A63               	goto	l7118
  4663  0A6A                     __end_of_lcd_gotoxy:	
  4664  0A6A                     __ptext537:	
  4665 ;; =============== function _putch ends ============
  4666                           
  4667                           
  4668 ;; *************** function _lcd_putc *****************
  4669 ;; Defined at:
  4670 ;;		line 143 in file "C:\Online Class\HK6\Practice_Micro\tmr0 counter\lcd(16).c"
  4671 ;; Parameters:    Size  Location     Type
  4672 ;;  c               1    wreg     unsigned char 
  4673 ;; Auto vars:     Size  Location     Type
  4674 ;;  c               1   16[BANK0 ] unsigned char 
  4675 ;; Return value:  Size  Location     Type
  4676 ;;		None               void
  4677 ;; Registers used:
  4678 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4679 ;; Tracked objects:
  4680 ;;		On entry : 60/0
  4681 ;;		On exit  : 60/0
  4682 ;;		Unchanged: 0/0
  4683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4684 ;;      Params:         0       0       0       0       0
  4685 ;;      Locals:         0       1       0       0       0
  4686 ;;      Temps:          0       0       0       0       0
  4687 ;;      Totals:         0       1       0       0       0
  4688 ;;Total ram usage:        1 bytes
  4689 ;; Hardware stack levels used:    1
  4690 ;; Hardware stack levels required when called:    5
  4691 ;; This function calls:
  4692 ;;		_lcd_put_byte
  4693 ;;		_lcd_busy
  4694 ;;		_lcd_gotoxy
  4695 ;;		_isprint
  4696 ;; This function is called by:
  4697 ;;		_putch
  4698 ;; This function uses a non-reentrant model
  4699 ;;
  4700  0A6A                     _lcd_putc:	
  4701                           
  4702                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4703                           ;lcd_putc@c stored from wreg
  4704  0A6A  00B0               	movwf	lcd_putc@c
  4705                           
  4706                           ;lcd(16).c: 144: switch(c){
  4707  0A6B  2A90               	goto	l7204
  4708  0A6C                     l7190:	
  4709  0A6C  3000               	movlw	0
  4710                           
  4711                           ;lcd(16).c: 146: lcd_put_byte(0, 1);
  4712  0A6D  01A8               	clrf	?_lcd_put_byte
  4713  0A6E  0AA8               	incf	?_lcd_put_byte,f
  4714  0A6F  235A  120A  158A   	fcall	_lcd_put_byte
  4715  0A72                     l7192:	
  4716                           ;lcd(16).c: 147: while(lcd_busy());
  4717                           
  4718  0A72  2405  120A  158A   	fcall	_lcd_busy
  4719  0A75  3800               	iorlw	0
  4720  0A76  1903               	btfsc	3,2
  4721  0A77  0008               	return
  4722  0A78  2A72               	goto	l7192
  4723  0A79                     l7194:	
  4724  0A79  3000               	movlw	0
  4725                           
  4726                           ;lcd(16).c: 150: lcd_gotoxy(0, 1);
  4727  0A7A  01AD               	clrf	?_lcd_gotoxy
  4728  0A7B  0AAD               	incf	?_lcd_gotoxy,f
  4729  0A7C  2A52               	ljmp	_lcd_gotoxy
  4730  0A7D                     l7196:	
  4731                           ;lcd(16).c: 151: break;
  4732                           
  4733                           
  4734                           ;lcd(16).c: 153: if(isprint(c)){
  4735  0A7D  0830               	movf	lcd_putc@c,w
  4736  0A7E  2430  120A  158A   	fcall	_isprint
  4737  0A81  1C03               	btfss	3,0
  4738  0A82  0008               	return
  4739                           
  4740                           ;lcd(16).c: 154: lcd_put_byte(1, c);
  4741  0A83  0830               	movf	lcd_putc@c,w
  4742  0A84  00A8               	movwf	?_lcd_put_byte
  4743  0A85  3001               	movlw	1
  4744  0A86  235A  120A  158A   	fcall	_lcd_put_byte
  4745  0A89                     l7200:	
  4746                           ;lcd(16).c: 155: while(lcd_busy());
  4747                           
  4748  0A89  2405  120A  158A   	fcall	_lcd_busy
  4749  0A8C  3800               	iorlw	0
  4750  0A8D  1903               	btfsc	3,2
  4751  0A8E  0008               	return
  4752  0A8F  2A89               	goto	l7200
  4753  0A90                     l7204:	
  4754  0A90  0830               	movf	lcd_putc@c,w
  4755                           
  4756                           ; Switch size 1, requested type "space"
  4757                           ; Number of cases is 2, Range of values is 10 to 12
  4758                           ; switch strategies available:
  4759                           ; Name         Instructions Cycles
  4760                           ; simple_byte            7     4 (average)
  4761                           ; direct_byte           20    11 (fixed)
  4762                           ; jumptable            263     9 (fixed)
  4763                           ;	Chosen strategy is simple_byte
  4764  0A91  3A0A               	xorlw	10	; case 10
  4765  0A92  1903               	skipnz
  4766  0A93  2A79               	goto	l7194
  4767  0A94  3A06               	xorlw	6	; case 12
  4768  0A95  1903               	skipnz
  4769  0A96  2A6C               	goto	l7190
  4770  0A97  2A7D               	goto	l7196
  4771  0A98  0008               	return
  4772  0A99                     __end_of_lcd_putc:	
  4773  0A99                     __ptext542:	
  4774 ;; =============== function _lcd_gotoxy ends ============
  4775                           
  4776                           
  4777 ;; *************** function _lcd_init *****************
  4778 ;; Defined at:
  4779 ;;		line 5 in file "C:\Online Class\HK6\Practice_Micro\tmr0 counter\lcd(16).c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;		None
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;  i               1    0        unsigned char 
  4784 ;; Return value:  Size  Location     Type
  4785 ;;		None               void
  4786 ;; Registers used:
  4787 ;;		wreg, status,2, status,0, pclath, cstack
  4788 ;; Tracked objects:
  4789 ;;		On entry : 17F/0
  4790 ;;		On exit  : 60/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4793 ;;      Params:         0       0       0       0       0
  4794 ;;      Locals:         0       0       0       0       0
  4795 ;;      Temps:          0       3       0       0       0
  4796 ;;      Totals:         0       3       0       0       0
  4797 ;;Total ram usage:        3 bytes
  4798 ;; Hardware stack levels used:    1
  4799 ;; Hardware stack levels required when called:    4
  4800 ;; This function calls:
  4801 ;;		_lcd_put_byte
  4802 ;;		_lcd_busy
  4803 ;; This function is called by:
  4804 ;;		_main
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807  0A99                     _lcd_init:	
  4808                           
  4809                           ;lcd(16).c: 6: unsigned char i;
  4810                           ;lcd(16).c: 7: TRISD3 = 0;
  4811                           
  4812                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4813  0A99  1683               	bsf	3,5	;RP0=1, select bank1
  4814  0A9A  1188               	bcf	8,3
  4815                           
  4816                           ;lcd(16).c: 8: TRISD1 = 0;
  4817  0A9B  1088               	bcf	8,1
  4818                           
  4819                           ;lcd(16).c: 9: TRISD2 = 0;
  4820  0A9C  1108               	bcf	8,2
  4821                           
  4822                           ;lcd(16).c: 10: TRISD4 = 0;
  4823  0A9D  1208               	bcf	8,4
  4824                           
  4825                           ;lcd(16).c: 11: TRISD5 = 0;
  4826  0A9E  1288               	bcf	8,5
  4827                           
  4828                           ;lcd(16).c: 12: TRISD6 = 0;
  4829  0A9F  1308               	bcf	8,6
  4830                           
  4831                           ;lcd(16).c: 13: TRISD7 = 0;
  4832  0AA0  1388               	bcf	8,7
  4833                           
  4834                           ;lcd(16).c: 14: RD3 = 0;
  4835  0AA1  1283               	bcf	3,5	;RP0=0, select bank0
  4836  0AA2  3003               	movlw	3
  4837  0AA3  1188               	bcf	8,3
  4838                           
  4839                           ;lcd(16).c: 15: RD1 = 0;
  4840  0AA4  1088               	bcf	8,1
  4841                           
  4842                           ;lcd(16).c: 16: RD2 = 0;
  4843  0AA5  1108               	bcf	8,2
  4844                           
  4845                           ;lcd(16).c: 18: _delay((unsigned long)((100)*(20000000/4000.0)));
  4846  0AA6  00AF               	movwf	??_lcd_init+2
  4847  0AA7  308A               	movlw	138
  4848  0AA8  00AE               	movwf	??_lcd_init+1
  4849  0AA9  3056               	movlw	86
  4850  0AAA  00AD               	movwf	??_lcd_init
  4851  0AAB                     u4617:	
  4852  0AAB  0BAD               	decfsz	??_lcd_init,f
  4853  0AAC  2AAB               	goto	u4617
  4854  0AAD  0BAE               	decfsz	??_lcd_init+1,f
  4855  0AAE  2AAB               	goto	u4617
  4856  0AAF  0BAF               	decfsz	??_lcd_init+2,f
  4857  0AB0  2AAB               	goto	u4617
  4858  0AB1  2AB2               	nop2
  4859                           
  4860                           ;lcd(16).c: 21: lcd_put_byte(0,0x30);
  4861  0AB2  243E  120A  158A   	fcall	PL28	;call to abstracted procedure
  4862  0AB5  235A  120A  158A   	fcall	_lcd_put_byte
  4863                           
  4864                           ;lcd(16).c: 22: _delay((unsigned long)((50)*(20000000/4000.0)));
  4865  0AB8  3002               	movlw	2
  4866  0AB9  00AF               	movwf	??_lcd_init+2
  4867  0ABA  3045               	movlw	69
  4868  0ABB  00AE               	movwf	??_lcd_init+1
  4869  0ABC  30A9               	movlw	169
  4870  0ABD  00AD               	movwf	??_lcd_init
  4871  0ABE                     u4627:	
  4872  0ABE  0BAD               	decfsz	??_lcd_init,f
  4873  0ABF  2ABE               	goto	u4627
  4874  0AC0  0BAE               	decfsz	??_lcd_init+1,f
  4875  0AC1  2ABE               	goto	u4627
  4876  0AC2  0BAF               	decfsz	??_lcd_init+2,f
  4877  0AC3  2ABE               	goto	u4627
  4878  0AC4  2AC5               	nop2
  4879                           
  4880                           ;lcd(16).c: 23: lcd_put_byte(0,0x30);
  4881  0AC5  243E  120A  158A   	fcall	PL28	;call to abstracted procedure
  4882  0AC8  235A  120A  158A   	fcall	_lcd_put_byte
  4883                           
  4884                           ;lcd(16).c: 24: _delay((unsigned long)((50)*(20000000/4000.0)));
  4885  0ACB  3002               	movlw	2
  4886  0ACC  00AF               	movwf	??_lcd_init+2
  4887  0ACD  3045               	movlw	69
  4888  0ACE  00AE               	movwf	??_lcd_init+1
  4889  0ACF  30A9               	movlw	169
  4890  0AD0  00AD               	movwf	??_lcd_init
  4891  0AD1                     u4637:	
  4892  0AD1  0BAD               	decfsz	??_lcd_init,f
  4893  0AD2  2AD1               	goto	u4637
  4894  0AD3  0BAE               	decfsz	??_lcd_init+1,f
  4895  0AD4  2AD1               	goto	u4637
  4896  0AD5  0BAF               	decfsz	??_lcd_init+2,f
  4897  0AD6  2AD1               	goto	u4637
  4898  0AD7  2AD8               	nop2
  4899                           
  4900                           ;lcd(16).c: 25: lcd_put_byte(0,0x32);
  4901  0AD8  3032               	movlw	50
  4902  0AD9  1283               	bcf	3,5	;RP0=0, select bank0
  4903  0ADA  1303               	bcf	3,6	;RP1=0, select bank0
  4904  0ADB  00A8               	movwf	?_lcd_put_byte
  4905  0ADC  3000               	movlw	0
  4906  0ADD  235A  120A  158A   	fcall	_lcd_put_byte
  4907                           
  4908                           ;lcd(16).c: 26: _delay((unsigned long)((100)*(20000000/4000.0)));
  4909  0AE0  3003               	movlw	3
  4910  0AE1  00AF               	movwf	??_lcd_init+2
  4911  0AE2  308A               	movlw	138
  4912  0AE3  00AE               	movwf	??_lcd_init+1
  4913  0AE4  3056               	movlw	86
  4914  0AE5  00AD               	movwf	??_lcd_init
  4915  0AE6                     u4647:	
  4916  0AE6  0BAD               	decfsz	??_lcd_init,f
  4917  0AE7  2AE6               	goto	u4647
  4918  0AE8  0BAE               	decfsz	??_lcd_init+1,f
  4919  0AE9  2AE6               	goto	u4647
  4920  0AEA  0BAF               	decfsz	??_lcd_init+2,f
  4921  0AEB  2AE6               	goto	u4647
  4922  0AEC  2AED               	nop2
  4923                           
  4924                           ;lcd(16).c: 27: _delay((unsigned long)((100)*(20000000/4000.0)));
  4925  0AED  3003               	movlw	3
  4926  0AEE  1283               	bcf	3,5	;RP0=0, select bank0
  4927  0AEF  1303               	bcf	3,6	;RP1=0, select bank0
  4928  0AF0  00AF               	movwf	??_lcd_init+2
  4929  0AF1  308A               	movlw	138
  4930  0AF2  00AE               	movwf	??_lcd_init+1
  4931  0AF3  3056               	movlw	86
  4932  0AF4  00AD               	movwf	??_lcd_init
  4933  0AF5                     u4657:	
  4934  0AF5  0BAD               	decfsz	??_lcd_init,f
  4935  0AF6  2AF5               	goto	u4657
  4936  0AF7  0BAE               	decfsz	??_lcd_init+1,f
  4937  0AF8  2AF5               	goto	u4657
  4938  0AF9  0BAF               	decfsz	??_lcd_init+2,f
  4939  0AFA  2AF5               	goto	u4657
  4940  0AFB  2AFC               	nop2
  4941                           
  4942                           ;lcd(16).c: 28: _delay((unsigned long)((100)*(20000000/4000.0)));
  4943  0AFC  3003               	movlw	3
  4944  0AFD  1283               	bcf	3,5	;RP0=0, select bank0
  4945  0AFE  1303               	bcf	3,6	;RP1=0, select bank0
  4946  0AFF  00AF               	movwf	??_lcd_init+2
  4947  0B00  308A               	movlw	138
  4948  0B01  00AE               	movwf	??_lcd_init+1
  4949  0B02  3056               	movlw	86
  4950  0B03  00AD               	movwf	??_lcd_init
  4951  0B04                     u4667:	
  4952  0B04  0BAD               	decfsz	??_lcd_init,f
  4953  0B05  2B04               	goto	u4667
  4954  0B06  0BAE               	decfsz	??_lcd_init+1,f
  4955  0B07  2B04               	goto	u4667
  4956  0B08  0BAF               	decfsz	??_lcd_init+2,f
  4957  0B09  2B04               	goto	u4667
  4958  0B0A  2B0B               	nop2
  4959  0B0B                     l7082:	
  4960                           ;lcd(16).c: 30: while(lcd_busy());
  4961                           
  4962  0B0B  2405  120A  158A   	fcall	_lcd_busy
  4963  0B0E  3800               	iorlw	0
  4964  0B0F  1D03               	skipz
  4965  0B10  2B0B               	goto	l7082
  4966                           
  4967                           ;lcd(16).c: 31: lcd_put_byte(0,0b00101100 & 0b00111000);
  4968  0B11  3028               	movlw	40
  4969  0B12  00A8               	movwf	?_lcd_put_byte
  4970  0B13  3000               	movlw	0
  4971  0B14  235A  120A  158A   	fcall	_lcd_put_byte
  4972  0B17                     l7086:	
  4973                           ;lcd(16).c: 32: while(lcd_busy());
  4974                           
  4975  0B17  2405  120A  158A   	fcall	_lcd_busy
  4976  0B1A  3800               	iorlw	0
  4977  0B1B  1D03               	skipz
  4978  0B1C  2B17               	goto	l7086
  4979                           
  4980                           ;lcd(16).c: 34: lcd_put_byte(0,0b00001011&0b00001101&0b00001110);
  4981  0B1D  3008               	movlw	8
  4982  0B1E  00A8               	movwf	?_lcd_put_byte
  4983  0B1F  3000               	movlw	0
  4984  0B20  235A  120A  158A   	fcall	_lcd_put_byte
  4985  0B23                     l7090:	
  4986                           ;lcd(16).c: 35: while(lcd_busy());
  4987                           
  4988  0B23  2405  120A  158A   	fcall	_lcd_busy
  4989  0B26  3800               	iorlw	0
  4990  0B27  1D03               	skipz
  4991  0B28  2B23               	goto	l7090
  4992                           
  4993                           ;lcd(16).c: 36: lcd_put_byte(0,0b00001111&0b00001101&0b00001110);
  4994  0B29  300C               	movlw	12
  4995  0B2A  00A8               	movwf	?_lcd_put_byte
  4996  0B2B  3000               	movlw	0
  4997  0B2C  235A  120A  158A   	fcall	_lcd_put_byte
  4998  0B2F                     l7094:	
  4999                           ;lcd(16).c: 37: while(lcd_busy());
  5000                           
  5001  0B2F  2405  120A  158A   	fcall	_lcd_busy
  5002  0B32  3800               	iorlw	0
  5003  0B33  1D03               	skipz
  5004  0B34  2B2F               	goto	l7094
  5005  0B35  3000               	movlw	0
  5006                           
  5007                           ;lcd(16).c: 39: lcd_put_byte(0,0x01);
  5008  0B36  01A8               	clrf	?_lcd_put_byte
  5009  0B37  0AA8               	incf	?_lcd_put_byte,f
  5010  0B38  235A  120A  158A   	fcall	_lcd_put_byte
  5011  0B3B                     l7098:	
  5012                           ;lcd(16).c: 40: while(lcd_busy());
  5013                           
  5014  0B3B  2405  120A  158A   	fcall	_lcd_busy
  5015  0B3E  3800               	iorlw	0
  5016  0B3F  1D03               	skipz
  5017  0B40  2B3B               	goto	l7098
  5018                           
  5019                           ;lcd(16).c: 41: lcd_put_byte(0,0b00000100);
  5020  0B41  3004               	movlw	4
  5021  0B42  00A8               	movwf	?_lcd_put_byte
  5022  0B43  3000               	movlw	0
  5023  0B44  235A  120A  158A   	fcall	_lcd_put_byte
  5024  0B47                     l7102:	
  5025                           ;lcd(16).c: 42: while(lcd_busy());
  5026                           
  5027  0B47  2405  120A  158A   	fcall	_lcd_busy
  5028  0B4A  3800               	iorlw	0
  5029  0B4B  1D03               	skipz
  5030  0B4C  2B47               	goto	l7102
  5031  0B4D  3000               	movlw	0
  5032                           
  5033                           ;lcd(16).c: 43: lcd_put_byte(0,0x01);
  5034  0B4E  01A8               	clrf	?_lcd_put_byte
  5035  0B4F  0AA8               	incf	?_lcd_put_byte,f
  5036  0B50  235A  120A  158A   	fcall	_lcd_put_byte
  5037  0B53                     l7106:	
  5038                           ;lcd(16).c: 44: while(lcd_busy());
  5039                           
  5040  0B53  2405  120A  158A   	fcall	_lcd_busy
  5041  0B56  3800               	iorlw	0
  5042  0B57  1903               	btfsc	3,2
  5043  0B58  0008               	return
  5044  0B59  2B53               	goto	l7106
  5045  0B5A                     __end_of_lcd_init:	
  5046  0B5A                     __ptext549:	
  5047 ;; =============== function _lcd_busy ends ============
  5048                           
  5049                           
  5050 ;; *************** function _lcd_put_byte *****************
  5051 ;; Defined at:
  5052 ;;		line 106 in file "C:\Online Class\HK6\Practice_Micro\tmr0 counter\lcd(16).c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;  rs              1    wreg     unsigned char 
  5055 ;;  b               1    8[BANK0 ] unsigned char 
  5056 ;; Auto vars:     Size  Location     Type
  5057 ;;  rs              1   11[BANK0 ] unsigned char 
  5058 ;;  temp            1   12[BANK0 ] struct _BYTE_VAL
  5059 ;; Return value:  Size  Location     Type
  5060 ;;		None               void
  5061 ;; Registers used:
  5062 ;;		wreg, status,2, status,0
  5063 ;; Tracked objects:
  5064 ;;		On entry : 60/0
  5065 ;;		On exit  : 60/0
  5066 ;;		Unchanged: 0/0
  5067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5068 ;;      Params:         0       1       0       0       0
  5069 ;;      Locals:         0       2       0       0       0
  5070 ;;      Temps:          0       2       0       0       0
  5071 ;;      Totals:         0       5       0       0       0
  5072 ;;Total ram usage:        5 bytes
  5073 ;; Hardware stack levels used:    1
  5074 ;; Hardware stack levels required when called:    3
  5075 ;; This function calls:
  5076 ;;		Nothing
  5077 ;; This function is called by:
  5078 ;;		_lcd_init
  5079 ;;		_lcd_putc
  5080 ;;		_lcd_gotoxy
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083  0B5A                     _lcd_put_byte:	
  5084                           
  5085                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0]
  5086                           ;lcd_put_byte@rs stored from wreg
  5087  0B5A  00AB               	movwf	lcd_put_byte@rs
  5088                           
  5089                           ;lcd(16).c: 107: BYTE_VAL temp;
  5090                           ;lcd(16).c: 109: TRISD4 = 0;
  5091  0B5B  1683               	bsf	3,5	;RP0=1, select bank1
  5092  0B5C  1208               	bcf	8,4
  5093                           
  5094                           ;lcd(16).c: 110: TRISD5 = 0;
  5095  0B5D  1288               	bcf	8,5
  5096                           
  5097                           ;lcd(16).c: 111: TRISD6 = 0;
  5098  0B5E  1308               	bcf	8,6
  5099                           
  5100                           ;lcd(16).c: 112: TRISD7 = 0;
  5101  0B5F  1388               	bcf	8,7
  5102                           
  5103                           ;lcd(16).c: 114: RD1 = 0;
  5104  0B60  1283               	bcf	3,5	;RP0=0, select bank0
  5105  0B61  1088               	bcf	8,1
  5106                           
  5107                           ;lcd(16).c: 115: if(rs) RD1 = 1;
  5108  0B62  082B               	movf	lcd_put_byte@rs,w
  5109  0B63  1D03               	skipz
  5110  0B64  1488               	bsf	8,1
  5111                           
  5112                           ;lcd(16).c: 117: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5113  0B65  3021               	movlw	33
  5114  0B66  00A9               	movwf	??_lcd_put_byte
  5115  0B67                     u4717:	
  5116  0B67  0BA9               	decfsz	??_lcd_put_byte,f
  5117  0B68  2B67               	goto	u4717
  5118                           
  5119                           ;lcd(16).c: 118: RD2 = 0;
  5120  0B69  1283               	bcf	3,5	;RP0=0, select bank0
  5121  0B6A  1303               	bcf	3,6	;RP1=0, select bank0
  5122  0B6B  3021               	movlw	33
  5123  0B6C  1108               	bcf	8,2
  5124                           
  5125                           ;lcd(16).c: 119: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5126  0B6D  00A9               	movwf	??_lcd_put_byte
  5127  0B6E                     u4727:	
  5128  0B6E  0BA9               	decfsz	??_lcd_put_byte,f
  5129  0B6F  2B6E               	goto	u4727
  5130                           
  5131                           ;lcd(16).c: 120: RD3 = 0;
  5132  0B70  1283               	bcf	3,5	;RP0=0, select bank0
  5133  0B71  1303               	bcf	3,6	;RP1=0, select bank0
  5134  0B72  1188               	bcf	8,3
  5135                           
  5136                           ;lcd(16).c: 122: temp.Val = b;
  5137  0B73  0828               	movf	lcd_put_byte@b,w
  5138  0B74  00AC               	movwf	lcd_put_byte@temp
  5139                           
  5140                           ;lcd(16).c: 125: RD4 = temp.bits.b4;
  5141  0B75  0E2C               	swapf	lcd_put_byte@temp,w
  5142  0B76  3901               	andlw	1
  5143  0B77  00A9               	movwf	??_lcd_put_byte
  5144  0B78  0C29               	rrf	??_lcd_put_byte,w
  5145  0B79  1C03               	btfss	3,0
  5146  0B7A  2B7F               	goto	u3480
  5147  0B7B  1283               	bcf	3,5	;RP0=0, select bank0
  5148  0B7C  1303               	bcf	3,6	;RP1=0, select bank0
  5149  0B7D  1608               	bsf	8,4
  5150  0B7E  2B82               	goto	l6842
  5151  0B7F                     u3480:	
  5152  0B7F  1283               	bcf	3,5	;RP0=0, select bank0
  5153  0B80  1303               	bcf	3,6	;RP1=0, select bank0
  5154  0B81  1208               	bcf	8,4
  5155  0B82                     l6842:	
  5156                           
  5157                           ;lcd(16).c: 126: RD5 = temp.bits.b5;
  5158  0B82  0E2C               	swapf	lcd_put_byte@temp,w
  5159  0B83  00A9               	movwf	??_lcd_put_byte
  5160  0B84  0C29               	rrf	??_lcd_put_byte,w
  5161  0B85  3901               	andlw	1
  5162  0B86  00AA               	movwf	??_lcd_put_byte+1
  5163  0B87  0C2A               	rrf	??_lcd_put_byte+1,w
  5164  0B88  1C03               	btfss	3,0
  5165  0B89  2B8E               	goto	u3500
  5166  0B8A  1283               	bcf	3,5	;RP0=0, select bank0
  5167  0B8B  1303               	bcf	3,6	;RP1=0, select bank0
  5168  0B8C  1688               	bsf	8,5
  5169  0B8D  2B91               	goto	l6844
  5170  0B8E                     u3500:	
  5171  0B8E  1283               	bcf	3,5	;RP0=0, select bank0
  5172  0B8F  1303               	bcf	3,6	;RP1=0, select bank0
  5173  0B90  1288               	bcf	8,5
  5174  0B91                     l6844:	
  5175                           
  5176                           ;lcd(16).c: 127: RD6 = temp.bits.b6;
  5177  0B91  0E2C               	swapf	lcd_put_byte@temp,w
  5178  0B92  00A9               	movwf	??_lcd_put_byte
  5179  0B93  0CA9               	rrf	??_lcd_put_byte,f
  5180  0B94  0C29               	rrf	??_lcd_put_byte,w
  5181  0B95  3901               	andlw	1
  5182  0B96  00AA               	movwf	??_lcd_put_byte+1
  5183  0B97  0C2A               	rrf	??_lcd_put_byte+1,w
  5184  0B98  1C03               	btfss	3,0
  5185  0B99  2B9E               	goto	u3520
  5186  0B9A  1283               	bcf	3,5	;RP0=0, select bank0
  5187  0B9B  1303               	bcf	3,6	;RP1=0, select bank0
  5188  0B9C  1708               	bsf	8,6
  5189  0B9D  2BA1               	goto	l6846
  5190  0B9E                     u3520:	
  5191  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  5192  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  5193  0BA0  1308               	bcf	8,6
  5194  0BA1                     l6846:	
  5195                           
  5196                           ;lcd(16).c: 128: RD7 = temp.bits.b7;
  5197  0BA1  0D2C               	rlf	lcd_put_byte@temp,w
  5198  0BA2  0D2C               	rlf	lcd_put_byte@temp,w
  5199  0BA3  3901               	andlw	1
  5200  0BA4  00A9               	movwf	??_lcd_put_byte
  5201  0BA5  0C29               	rrf	??_lcd_put_byte,w
  5202  0BA6  1C03               	btfss	3,0
  5203  0BA7  2BAC               	goto	u3540
  5204  0BA8  1283               	bcf	3,5	;RP0=0, select bank0
  5205  0BA9  1303               	bcf	3,6	;RP1=0, select bank0
  5206  0BAA  1788               	bsf	8,7
  5207  0BAB  2BAF               	goto	u3554
  5208  0BAC                     u3540:	
  5209  0BAC  1283               	bcf	3,5	;RP0=0, select bank0
  5210  0BAD  1303               	bcf	3,6	;RP1=0, select bank0
  5211  0BAE  1388               	bcf	8,7
  5212  0BAF                     u3554:	
  5213                           
  5214                           ;lcd(16).c: 129: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5215  0BAF  3021               	movlw	33
  5216  0BB0  00A9               	movwf	??_lcd_put_byte
  5217  0BB1                     u4737:	
  5218  0BB1  0BA9               	decfsz	??_lcd_put_byte,f
  5219  0BB2  2BB1               	goto	u4737
  5220                           
  5221                           ;lcd(16).c: 130: RD3 = 1;
  5222  0BB3  1283               	bcf	3,5	;RP0=0, select bank0
  5223  0BB4  1303               	bcf	3,6	;RP1=0, select bank0
  5224  0BB5  3021               	movlw	33
  5225  0BB6  1588               	bsf	8,3
  5226                           
  5227                           ;lcd(16).c: 131: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5228  0BB7  00A9               	movwf	??_lcd_put_byte
  5229  0BB8                     u4747:	
  5230  0BB8  0BA9               	decfsz	??_lcd_put_byte,f
  5231  0BB9  2BB8               	goto	u4747
  5232                           
  5233                           ;lcd(16).c: 132: RD3 = 0;
  5234  0BBA  1283               	bcf	3,5	;RP0=0, select bank0
  5235  0BBB  1303               	bcf	3,6	;RP1=0, select bank0
  5236  0BBC  1188               	bcf	8,3
  5237                           
  5238                           ;lcd(16).c: 134: RD4 = temp.bits.b0;
  5239  0BBD  082C               	movf	lcd_put_byte@temp,w
  5240  0BBE  3901               	andlw	1
  5241  0BBF  00A9               	movwf	??_lcd_put_byte
  5242  0BC0  0C29               	rrf	??_lcd_put_byte,w
  5243  0BC1  1C03               	btfss	3,0
  5244  0BC2  2BC7               	goto	u3560
  5245  0BC3  1283               	bcf	3,5	;RP0=0, select bank0
  5246  0BC4  1303               	bcf	3,6	;RP1=0, select bank0
  5247  0BC5  1608               	bsf	8,4
  5248  0BC6  2BCA               	goto	l6854
  5249  0BC7                     u3560:	
  5250  0BC7  1283               	bcf	3,5	;RP0=0, select bank0
  5251  0BC8  1303               	bcf	3,6	;RP1=0, select bank0
  5252  0BC9  1208               	bcf	8,4
  5253  0BCA                     l6854:	
  5254                           
  5255                           ;lcd(16).c: 135: RD5 = temp.bits.b1;
  5256  0BCA  0C2C               	rrf	lcd_put_byte@temp,w
  5257  0BCB  3901               	andlw	1
  5258  0BCC  00A9               	movwf	??_lcd_put_byte
  5259  0BCD  0C29               	rrf	??_lcd_put_byte,w
  5260  0BCE  1C03               	btfss	3,0
  5261  0BCF  2BD4               	goto	u3580
  5262  0BD0  1283               	bcf	3,5	;RP0=0, select bank0
  5263  0BD1  1303               	bcf	3,6	;RP1=0, select bank0
  5264  0BD2  1688               	bsf	8,5
  5265  0BD3  2BD7               	goto	l6856
  5266  0BD4                     u3580:	
  5267  0BD4  1283               	bcf	3,5	;RP0=0, select bank0
  5268  0BD5  1303               	bcf	3,6	;RP1=0, select bank0
  5269  0BD6  1288               	bcf	8,5
  5270  0BD7                     l6856:	
  5271                           
  5272                           ;lcd(16).c: 136: RD6 = temp.bits.b2;
  5273  0BD7  0C2C               	rrf	lcd_put_byte@temp,w
  5274  0BD8  00A9               	movwf	??_lcd_put_byte
  5275  0BD9  0C29               	rrf	??_lcd_put_byte,w
  5276  0BDA  3901               	andlw	1
  5277  0BDB  00AA               	movwf	??_lcd_put_byte+1
  5278  0BDC  0C2A               	rrf	??_lcd_put_byte+1,w
  5279  0BDD  1C03               	btfss	3,0
  5280  0BDE  2BE3               	goto	u3600
  5281  0BDF  1283               	bcf	3,5	;RP0=0, select bank0
  5282  0BE0  1303               	bcf	3,6	;RP1=0, select bank0
  5283  0BE1  1708               	bsf	8,6
  5284  0BE2  2BE6               	goto	l6858
  5285  0BE3                     u3600:	
  5286  0BE3  1283               	bcf	3,5	;RP0=0, select bank0
  5287  0BE4  1303               	bcf	3,6	;RP1=0, select bank0
  5288  0BE5  1308               	bcf	8,6
  5289  0BE6                     l6858:	
  5290                           
  5291                           ;lcd(16).c: 137: RD7 = temp.bits.b3;
  5292  0BE6  0C2C               	rrf	lcd_put_byte@temp,w
  5293  0BE7  00A9               	movwf	??_lcd_put_byte
  5294  0BE8  0CA9               	rrf	??_lcd_put_byte,f
  5295  0BE9  0C29               	rrf	??_lcd_put_byte,w
  5296  0BEA  3901               	andlw	1
  5297  0BEB  00AA               	movwf	??_lcd_put_byte+1
  5298  0BEC  0C2A               	rrf	??_lcd_put_byte+1,w
  5299  0BED  1C03               	btfss	3,0
  5300  0BEE  2BF3               	goto	u3620
  5301  0BEF  1283               	bcf	3,5	;RP0=0, select bank0
  5302  0BF0  1303               	bcf	3,6	;RP1=0, select bank0
  5303  0BF1  1788               	bsf	8,7
  5304  0BF2  2BF6               	goto	u3634
  5305  0BF3                     u3620:	
  5306  0BF3  1283               	bcf	3,5	;RP0=0, select bank0
  5307  0BF4  1303               	bcf	3,6	;RP1=0, select bank0
  5308  0BF5  1388               	bcf	8,7
  5309  0BF6                     u3634:	
  5310                           
  5311                           ;lcd(16).c: 138: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5312  0BF6  3021               	movlw	33
  5313  0BF7  00A9               	movwf	??_lcd_put_byte
  5314  0BF8                     u4757:	
  5315  0BF8  0BA9               	decfsz	??_lcd_put_byte,f
  5316  0BF9  2BF8               	goto	u4757
  5317                           
  5318                           ;lcd(16).c: 139: RD3 = 1;
  5319  0BFA  1283               	bcf	3,5	;RP0=0, select bank0
  5320  0BFB  1303               	bcf	3,6	;RP1=0, select bank0
  5321  0BFC  3021               	movlw	33
  5322  0BFD  1588               	bsf	8,3
  5323                           
  5324                           ;lcd(16).c: 140: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5325  0BFE  00A9               	movwf	??_lcd_put_byte
  5326  0BFF                     u4767:	
  5327  0BFF  0BA9               	decfsz	??_lcd_put_byte,f
  5328  0C00  2BFF               	goto	u4767
  5329                           
  5330                           ;lcd(16).c: 141: RD3 = 0;
  5331  0C01  1283               	bcf	3,5	;RP0=0, select bank0
  5332  0C02  1303               	bcf	3,6	;RP1=0, select bank0
  5333  0C03  1188               	bcf	8,3
  5334  0C04  0008               	return
  5335  0C05                     __end_of_lcd_put_byte:	
  5336  0C05                     __ptext548:	
  5337 ;; =============== function ___ftadd ends ============
  5338                           
  5339                           
  5340 ;; *************** function _lcd_busy *****************
  5341 ;; Defined at:
  5342 ;;		line 47 in file "C:\Online Class\HK6\Practice_Micro\tmr0 counter\lcd(16).c"
  5343 ;; Parameters:    Size  Location     Type
  5344 ;;		None
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;  busy            1    9[BANK0 ] unsigned char 
  5347 ;; Return value:  Size  Location     Type
  5348 ;;                  1    wreg      unsigned char 
  5349 ;; Registers used:
  5350 ;;		wreg
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 60/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5356 ;;      Params:         0       0       0       0       0
  5357 ;;      Locals:         0       1       0       0       0
  5358 ;;      Temps:          0       1       0       0       0
  5359 ;;      Totals:         0       2       0       0       0
  5360 ;;Total ram usage:        2 bytes
  5361 ;; Hardware stack levels used:    1
  5362 ;; Hardware stack levels required when called:    3
  5363 ;; This function calls:
  5364 ;;		Nothing
  5365 ;; This function is called by:
  5366 ;;		_lcd_init
  5367 ;;		_lcd_putc
  5368 ;;		_lcd_gotoxy
  5369 ;; This function uses a non-reentrant model
  5370 ;;
  5371  0C05                     _lcd_busy:	
  5372                           
  5373                           ;lcd(16).c: 48: unsigned char busy;
  5374                           ;lcd(16).c: 50: TRISD4 = 1;
  5375                           
  5376                           ; Regs used in _lcd_busy: [wreg]
  5377  0C05  1683               	bsf	3,5	;RP0=1, select bank1
  5378  0C06  1303               	bcf	3,6	;RP1=0, select bank1
  5379  0C07  1608               	bsf	8,4
  5380                           
  5381                           ;lcd(16).c: 51: TRISD5 = 1;
  5382  0C08  1688               	bsf	8,5
  5383                           
  5384                           ;lcd(16).c: 52: TRISD6 = 1;
  5385  0C09  1708               	bsf	8,6
  5386                           
  5387                           ;lcd(16).c: 53: TRISD7 = 1;
  5388  0C0A  1788               	bsf	8,7
  5389                           
  5390                           ;lcd(16).c: 55: RD2 = 1;
  5391  0C0B  1283               	bcf	3,5	;RP0=0, select bank0
  5392  0C0C  3021               	movlw	33
  5393  0C0D  1508               	bsf	8,2
  5394                           
  5395                           ;lcd(16).c: 56: RD1 = 0;
  5396  0C0E  1088               	bcf	8,1
  5397                           
  5398                           ;lcd(16).c: 57: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5399  0C0F  00A8               	movwf	??_lcd_busy
  5400  0C10                     u4677:	
  5401  0C10  0BA8               	decfsz	??_lcd_busy,f
  5402  0C11  2C10               	goto	u4677
  5403                           
  5404                           ;lcd(16).c: 58: RD3 = 1;
  5405  0C12  1283               	bcf	3,5	;RP0=0, select bank0
  5406  0C13  1303               	bcf	3,6	;RP1=0, select bank0
  5407  0C14  3021               	movlw	33
  5408  0C15  1588               	bsf	8,3
  5409                           
  5410                           ;lcd(16).c: 59: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5411  0C16  00A8               	movwf	??_lcd_busy
  5412  0C17                     u4687:	
  5413  0C17  0BA8               	decfsz	??_lcd_busy,f
  5414  0C18  2C17               	goto	u4687
  5415                           
  5416                           ;lcd(16).c: 61: busy = RD7;
  5417  0C19  3000               	movlw	0
  5418  0C1A  1283               	bcf	3,5	;RP0=0, select bank0
  5419  0C1B  1303               	bcf	3,6	;RP1=0, select bank0
  5420  0C1C  1B88               	btfsc	8,7
  5421  0C1D  3001               	movlw	1
  5422  0C1E  00A9               	movwf	lcd_busy@busy
  5423  0C1F  3021               	movlw	33
  5424                           
  5425                           ;lcd(16).c: 63: RD3 = 0;
  5426  0C20  1188               	bcf	8,3
  5427                           
  5428                           ;lcd(16).c: 64: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5429  0C21  00A8               	movwf	??_lcd_busy
  5430  0C22                     u4697:	
  5431  0C22  0BA8               	decfsz	??_lcd_busy,f
  5432  0C23  2C22               	goto	u4697
  5433                           
  5434                           ;lcd(16).c: 65: RD3 = 1;
  5435  0C24  1283               	bcf	3,5	;RP0=0, select bank0
  5436  0C25  1303               	bcf	3,6	;RP1=0, select bank0
  5437  0C26  3021               	movlw	33
  5438  0C27  1588               	bsf	8,3
  5439                           
  5440                           ;lcd(16).c: 66: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5441  0C28  00A8               	movwf	??_lcd_busy
  5442  0C29                     u4707:	
  5443  0C29  0BA8               	decfsz	??_lcd_busy,f
  5444  0C2A  2C29               	goto	u4707
  5445                           
  5446                           ;lcd(16).c: 67: RD3 = 0;
  5447  0C2B  1283               	bcf	3,5	;RP0=0, select bank0
  5448  0C2C  1303               	bcf	3,6	;RP1=0, select bank0
  5449  0C2D  1188               	bcf	8,3
  5450                           
  5451                           ;lcd(16).c: 70: return busy;
  5452  0C2E  0829               	movf	lcd_busy@busy,w
  5453  0C2F  0008               	return
  5454  0C30                     __end_of_lcd_busy:	
  5455  0C30                     __ptext565:	
  5456 ;; =============== function _isdigit ends ============
  5457                           
  5458                           
  5459 ;; *************** function _isprint *****************
  5460 ;; Defined at:
  5461 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isprint.c"
  5462 ;; Parameters:    Size  Location     Type
  5463 ;;  c               1    wreg     unsigned char 
  5464 ;; Auto vars:     Size  Location     Type
  5465 ;;  c               1    9[BANK0 ] unsigned char 
  5466 ;; Return value:  Size  Location     Type
  5467 ;;		None               void
  5468 ;; Registers used:
  5469 ;;		wreg, status,2, status,0
  5470 ;; Tracked objects:
  5471 ;;		On entry : 60/0
  5472 ;;		On exit  : 60/0
  5473 ;;		Unchanged: FFF9F/0
  5474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5475 ;;      Params:         0       0       0       0       0
  5476 ;;      Locals:         0       2       0       0       0
  5477 ;;      Temps:          0       0       0       0       0
  5478 ;;      Totals:         0       2       0       0       0
  5479 ;;Total ram usage:        2 bytes
  5480 ;; Hardware stack levels used:    1
  5481 ;; Hardware stack levels required when called:    3
  5482 ;; This function calls:
  5483 ;;		Nothing
  5484 ;; This function is called by:
  5485 ;;		_lcd_putc
  5486 ;; This function uses a non-reentrant model
  5487 ;;
  5488  0C30                     _isprint:	
  5489                           
  5490                           ; Regs used in _isprint: [wreg+status,2+status,0]
  5491                           ;isprint@c stored from wreg
  5492  0C30  00A9               	movwf	isprint@c
  5493  0C31  307F               	movlw	127
  5494  0C32  01A8               	clrf	_isprint$3672
  5495  0C33  0229               	subwf	isprint@c,w
  5496  0C34  1803               	skipnc
  5497  0C35  2C3C               	goto	l6318
  5498  0C36  3020               	movlw	32
  5499  0C37  0229               	subwf	isprint@c,w
  5500  0C38  1C03               	skipc
  5501  0C39  2C3C               	goto	l6318
  5502  0C3A  01A8               	clrf	_isprint$3672
  5503  0C3B  0AA8               	incf	_isprint$3672,f
  5504  0C3C                     l6318:	
  5505  0C3C  0C28               	rrf	_isprint$3672,w
  5506  0C3D  0008               	return
  5507  0C3E                     __end_of_isprint:	
  5508  0C3E                     PL28:	
  5509  0C3E  3030               	movlw	48
  5510  0C3F  1283               	bcf	3,5	;RP0=0, select bank0
  5511  0C40  1303               	bcf	3,6	;RP1=0, select bank0
  5512  0C41  00A8               	movwf	?_lcd_put_byte
  5513  0C42  3400               	retlw	0
  5514                           
  5515                           	psect	text544
  5516  0C43                     __ptext544:	
  5517 ;; =============== function ___lltoft ends ============
  5518                           
  5519                           
  5520 ;; *************** function ___lbtoft *****************
  5521 ;; Defined at:
  5522 ;;		line 28 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbtoft.c"
  5523 ;; Parameters:    Size  Location     Type
  5524 ;;  c               1    wreg     unsigned char 
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;  c               1   19[BANK0 ] unsigned char 
  5527 ;; Return value:  Size  Location     Type
  5528 ;;                  3   16[BANK0 ] float 
  5529 ;; Registers used:
  5530 ;;		wreg, status,2, status,0, pclath, cstack
  5531 ;; Tracked objects:
  5532 ;;		On entry : 60/0
  5533 ;;		On exit  : 60/0
  5534 ;;		Unchanged: FFF9F/0
  5535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5536 ;;      Params:         0       3       0       0       0
  5537 ;;      Locals:         0       1       0       0       0
  5538 ;;      Temps:          0       0       0       0       0
  5539 ;;      Totals:         0       4       0       0       0
  5540 ;;Total ram usage:        4 bytes
  5541 ;; Hardware stack levels used:    1
  5542 ;; Hardware stack levels required when called:    4
  5543 ;; This function calls:
  5544 ;;		___ftpack
  5545 ;; This function is called by:
  5546 ;;		_main
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549  0C43                     ___lbtoft:	
  5550                           
  5551                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  5552                           ;___lbtoft@c stored from wreg
  5553  0C43  00B3               	movwf	___lbtoft@c
  5554  0C44  00A8               	movwf	?___ftpack
  5555  0C45  308E               	movlw	142
  5556  0C46  01A9               	clrf	?___ftpack+1
  5557  0C47  01AA               	clrf	?___ftpack+2
  5558  0C48  00AB               	movwf	?___ftpack+3
  5559  0C49  01AC               	clrf	?___ftpack+4
  5560  0C4A  2769               	fcall	___ftpack
  5561  0C4B  0828               	movf	?___ftpack,w
  5562  0C4C  00B0               	movwf	?___lbtoft
  5563  0C4D  0829               	movf	?___ftpack+1,w
  5564  0C4E  00B1               	movwf	?___lbtoft+1
  5565  0C4F  082A               	movf	?___ftpack+2,w
  5566  0C50  00B2               	movwf	?___lbtoft+2
  5567  0C51  0008               	return
  5568  0C52                     __end_of___lbtoft:	
  5569  0C52                     __ptext543:	
  5570 ;; =============== function _lcd_init ends ============
  5571                           
  5572                           
  5573 ;; *************** function ___lltoft *****************
  5574 ;; Defined at:
  5575 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lltoft.c"
  5576 ;; Parameters:    Size  Location     Type
  5577 ;;  c               4   16[BANK0 ] unsigned long 
  5578 ;; Auto vars:     Size  Location     Type
  5579 ;;  exp             1   20[BANK0 ] unsigned char 
  5580 ;; Return value:  Size  Location     Type
  5581 ;;                  3   16[BANK0 ] float 
  5582 ;; Registers used:
  5583 ;;		wreg, status,2, status,0, pclath, cstack
  5584 ;; Tracked objects:
  5585 ;;		On entry : 60/0
  5586 ;;		On exit  : 60/0
  5587 ;;		Unchanged: FFF9F/0
  5588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5589 ;;      Params:         0       4       0       0       0
  5590 ;;      Locals:         0       1       0       0       0
  5591 ;;      Temps:          0       0       0       0       0
  5592 ;;      Totals:         0       5       0       0       0
  5593 ;;Total ram usage:        5 bytes
  5594 ;; Hardware stack levels used:    1
  5595 ;; Hardware stack levels required when called:    4
  5596 ;; This function calls:
  5597 ;;		___ftpack
  5598 ;; This function is called by:
  5599 ;;		_printf
  5600 ;; This function uses a non-reentrant model
  5601 ;;
  5602  0C52                     ___lltoft:	
  5603                           
  5604                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5605  0C52  308E               	movlw	142
  5606  0C53  00B4               	movwf	___lltoft@exp
  5607  0C54                     l7064:	
  5608  0C54  30FF               	movlw	255
  5609  0C55  0533               	andwf	___lltoft@c+3,w
  5610  0C56  1903               	btfsc	3,2
  5611  0C57  2C5F               	goto	l7066
  5612  0C58  1003               	clrc
  5613  0C59  0CB3               	rrf	___lltoft@c+3,f
  5614  0C5A  0CB2               	rrf	___lltoft@c+2,f
  5615  0C5B  0CB1               	rrf	___lltoft@c+1,f
  5616  0C5C  0CB0               	rrf	___lltoft@c,f
  5617  0C5D  0AB4               	incf	___lltoft@exp,f
  5618  0C5E  2C54               	goto	l7064
  5619  0C5F                     l7066:	
  5620  0C5F  0830               	movf	___lltoft@c,w
  5621  0C60  00A8               	movwf	?___ftpack
  5622  0C61  0831               	movf	___lltoft@c+1,w
  5623  0C62  00A9               	movwf	?___ftpack+1
  5624  0C63  0832               	movf	___lltoft@c+2,w
  5625  0C64  00AA               	movwf	?___ftpack+2
  5626  0C65  0834               	movf	___lltoft@exp,w
  5627  0C66  00AB               	movwf	?___ftpack+3
  5628  0C67  01AC               	clrf	?___ftpack+4
  5629  0C68  2769               	fcall	___ftpack
  5630  0C69  0828               	movf	?___ftpack,w
  5631  0C6A  00B0               	movwf	?___lltoft
  5632  0C6B  0829               	movf	?___ftpack+1,w
  5633  0C6C  00B1               	movwf	?___lltoft+1
  5634  0C6D  082A               	movf	?___ftpack+2,w
  5635  0C6E  00B2               	movwf	?___lltoft+2
  5636  0C6F  0008               	return
  5637  0C70                     __end_of___lltoft:	
  5638  0C70                     __ptext546:	
  5639 ;; =============== function ___ftmul ends ============
  5640                           
  5641                           
  5642 ;; *************** function ___ftdiv *****************
  5643 ;; Defined at:
  5644 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;  f2              3   50[BANK0 ] float 
  5647 ;;  f1              3   53[BANK0 ] float 
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;  f3              3   60[BANK0 ] float 
  5650 ;;  sign            1   64[BANK0 ] unsigned char 
  5651 ;;  exp             1   63[BANK0 ] unsigned char 
  5652 ;;  cntr            1   59[BANK0 ] unsigned char 
  5653 ;; Return value:  Size  Location     Type
  5654 ;;                  3   50[BANK0 ] float 
  5655 ;; Registers used:
  5656 ;;		wreg, status,2, status,0, pclath, cstack
  5657 ;; Tracked objects:
  5658 ;;		On entry : 60/0
  5659 ;;		On exit  : 60/0
  5660 ;;		Unchanged: FFF9F/0
  5661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5662 ;;      Params:         0       6       0       0       0
  5663 ;;      Locals:         0       6       0       0       0
  5664 ;;      Temps:          0       3       0       0       0
  5665 ;;      Totals:         0      15       0       0       0
  5666 ;;Total ram usage:       15 bytes
  5667 ;; Hardware stack levels used:    1
  5668 ;; Hardware stack levels required when called:    4
  5669 ;; This function calls:
  5670 ;;		___ftpack
  5671 ;; This function is called by:
  5672 ;;		_main
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675  0C70                     ___ftdiv:	
  5676                           
  5677                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  5678  0C70  0855               	movf	___ftdiv@f1,w
  5679  0C71  00D8               	movwf	??___ftdiv
  5680  0C72  0856               	movf	___ftdiv@f1+1,w
  5681  0C73  00D9               	movwf	??___ftdiv+1
  5682  0C74  0857               	movf	___ftdiv@f1+2,w
  5683  0C75  00DA               	movwf	??___ftdiv+2
  5684  0C76  1003               	clrc
  5685  0C77  0D59               	rlf	??___ftdiv+1,w
  5686  0C78  0D5A               	rlf	??___ftdiv+2,w
  5687  0C79  00DF               	movwf	___ftdiv@exp
  5688  0C7A  08DF               	movf	___ftdiv@exp,f
  5689  0C7B  1D03               	skipz
  5690  0C7C  2C81               	goto	l6962
  5691  0C7D  01D2               	clrf	?___ftdiv
  5692  0C7E  01D3               	clrf	?___ftdiv+1
  5693  0C7F  01D4               	clrf	?___ftdiv+2
  5694  0C80  0008               	return
  5695  0C81                     l6962:	
  5696  0C81  0852               	movf	___ftdiv@f2,w
  5697  0C82  00D8               	movwf	??___ftdiv
  5698  0C83  0853               	movf	___ftdiv@f2+1,w
  5699  0C84  00D9               	movwf	??___ftdiv+1
  5700  0C85  0854               	movf	___ftdiv@f2+2,w
  5701  0C86  00DA               	movwf	??___ftdiv+2
  5702  0C87  1003               	clrc
  5703  0C88  0D59               	rlf	??___ftdiv+1,w
  5704  0C89  0D5A               	rlf	??___ftdiv+2,w
  5705  0C8A  00E0               	movwf	___ftdiv@sign
  5706  0C8B  08E0               	movf	___ftdiv@sign,f
  5707  0C8C  1D03               	skipz
  5708  0C8D  2C92               	goto	l3356
  5709  0C8E  01D2               	clrf	?___ftdiv
  5710  0C8F  01D3               	clrf	?___ftdiv+1
  5711  0C90  01D4               	clrf	?___ftdiv+2
  5712  0C91  0008               	return
  5713  0C92                     l3356:	
  5714  0C92  3089               	movlw	137
  5715  0C93  01DC               	clrf	___ftdiv@f3
  5716  0C94  01DD               	clrf	___ftdiv@f3+1
  5717  0C95  01DE               	clrf	___ftdiv@f3+2
  5718  0C96  0760               	addwf	___ftdiv@sign,w
  5719  0C97  00D8               	movwf	??___ftdiv
  5720  0C98  02DF               	subwf	___ftdiv@exp,f
  5721  0C99  0857               	movf	___ftdiv@f1+2,w
  5722  0C9A  00E0               	movwf	___ftdiv@sign
  5723  0C9B  0854               	movf	___ftdiv@f2+2,w
  5724  0C9C  06E0               	xorwf	___ftdiv@sign,f
  5725  0C9D  3080               	movlw	128
  5726  0C9E  05E0               	andwf	___ftdiv@sign,f
  5727  0C9F  3018               	movlw	24
  5728  0CA0  17D6               	bsf	___ftdiv@f1+1,7
  5729  0CA1  01D7               	clrf	___ftdiv@f1+2
  5730  0CA2  17D3               	bsf	___ftdiv@f2+1,7
  5731  0CA3  01D4               	clrf	___ftdiv@f2+2
  5732  0CA4  00DB               	movwf	___ftdiv@cntr
  5733  0CA5                     l6986:	
  5734  0CA5  1003               	clrc
  5735  0CA6  0DDC               	rlf	___ftdiv@f3,f
  5736  0CA7  0DDD               	rlf	___ftdiv@f3+1,f
  5737  0CA8  0DDE               	rlf	___ftdiv@f3+2,f
  5738  0CA9  0854               	movf	___ftdiv@f2+2,w
  5739  0CAA  0257               	subwf	___ftdiv@f1+2,w
  5740  0CAB  1D03               	skipz
  5741  0CAC  2CB3               	goto	u3865
  5742  0CAD  0853               	movf	___ftdiv@f2+1,w
  5743  0CAE  0256               	subwf	___ftdiv@f1+1,w
  5744  0CAF  1D03               	skipz
  5745  0CB0  2CB3               	goto	u3865
  5746  0CB1  0852               	movf	___ftdiv@f2,w
  5747  0CB2  0255               	subwf	___ftdiv@f1,w
  5748  0CB3                     u3865:	
  5749  0CB3  1C03               	skipc
  5750  0CB4  2CC1               	goto	L6
  5751  0CB5  0852               	movf	___ftdiv@f2,w
  5752  0CB6  02D5               	subwf	___ftdiv@f1,f
  5753  0CB7  0853               	movf	___ftdiv@f2+1,w
  5754  0CB8  1C03               	skipc
  5755  0CB9  0F53               	incfsz	___ftdiv@f2+1,w
  5756  0CBA  02D6               	subwf	___ftdiv@f1+1,f
  5757  0CBB  0854               	movf	___ftdiv@f2+2,w
  5758  0CBC  1C03               	skipc
  5759  0CBD  0A54               	incf	___ftdiv@f2+2,w
  5760  0CBE  02D7               	subwf	___ftdiv@f1+2,f
  5761  0CBF  145C               	bsf	___ftdiv@f3,0
  5762  0CC0  1003               	clrc
  5763  0CC1                     L6:	
  5764  0CC1  0DD5               	rlf	___ftdiv@f1,f
  5765  0CC2  0DD6               	rlf	___ftdiv@f1+1,f
  5766  0CC3  0DD7               	rlf	___ftdiv@f1+2,f
  5767  0CC4  0BDB               	decfsz	___ftdiv@cntr,f
  5768  0CC5  2CA5               	goto	l6986
  5769  0CC6  085C               	movf	___ftdiv@f3,w
  5770  0CC7  00A8               	movwf	?___ftpack
  5771  0CC8  085D               	movf	___ftdiv@f3+1,w
  5772  0CC9  00A9               	movwf	?___ftpack+1
  5773  0CCA  085E               	movf	___ftdiv@f3+2,w
  5774  0CCB  00AA               	movwf	?___ftpack+2
  5775  0CCC  085F               	movf	___ftdiv@exp,w
  5776  0CCD  00AB               	movwf	?___ftpack+3
  5777  0CCE  0860               	movf	___ftdiv@sign,w
  5778  0CCF  00AC               	movwf	?___ftpack+4
  5779  0CD0  2769               	fcall	___ftpack
  5780  0CD1  0828               	movf	?___ftpack,w
  5781  0CD2  00D2               	movwf	?___ftdiv
  5782  0CD3  0829               	movf	?___ftpack+1,w
  5783  0CD4  00D3               	movwf	?___ftdiv+1
  5784  0CD5  082A               	movf	?___ftpack+2,w
  5785  0CD6  00D4               	movwf	?___ftdiv+2
  5786  0CD7  0008               	return
  5787  0CD8                     __end_of___ftdiv:	
  5788  0CD8                     __ptext539:	
  5789 ;; =============== function ___ftsub ends ============
  5790                           
  5791                           
  5792 ;; *************** function _scale *****************
  5793 ;; Defined at:
  5794 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  5795 ;; Parameters:    Size  Location     Type
  5796 ;;  scl             1    wreg     char 
  5797 ;; Auto vars:     Size  Location     Type
  5798 ;;  scl             1   60[BANK0 ] char 
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  3   50[BANK0 ] char 
  5801 ;; Registers used:
  5802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5803 ;; Tracked objects:
  5804 ;;		On entry : 60/20
  5805 ;;		On exit  : 60/0
  5806 ;;		Unchanged: FFF9F/0
  5807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5808 ;;      Params:         0       3       0       0       0
  5809 ;;      Locals:         0       4       0       0       0
  5810 ;;      Temps:          0       4       0       0       0
  5811 ;;      Totals:         0      11       0       0       0
  5812 ;;Total ram usage:       11 bytes
  5813 ;; Hardware stack levels used:    1
  5814 ;; Hardware stack levels required when called:    5
  5815 ;; This function calls:
  5816 ;;		___awmod
  5817 ;;		___awdiv
  5818 ;;		___ftmul
  5819 ;;		___bmul
  5820 ;; This function is called by:
  5821 ;;		_printf
  5822 ;; This function uses a non-reentrant model
  5823 ;;
  5824  0CD8                     _scale:	
  5825                           
  5826                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5827                           ;scale@scl stored from wreg
  5828  0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  5829  0CD9  00DC               	movwf	scale@scl
  5830  0CDA  1FDC               	btfss	scale@scl,7
  5831  0CDB  2DA4               	goto	l7164
  5832  0CDC  09DC               	comf	scale@scl,f
  5833  0CDD  0ADC               	incf	scale@scl,f
  5834  0CDE  085C               	movf	scale@scl,w
  5835  0CDF  3A80               	xorlw	128
  5836  0CE0  3E12               	addlw	-238
  5837  0CE1  1C03               	skipc
  5838  0CE2  2D48               	goto	l7154
  5839  0CE3  300A               	movlw	10
  5840  0CE4  27CB  120A  158A   	fcall	PL15	;call to abstracted procedure
  5841  0CE7  26AF  120A  158A   	fcall	___awmod
  5842  0CEA  0829               	movf	?___awmod+1,w
  5843  0CEB  00B1               	movwf	?___awdiv+3
  5844  0CEC  0828               	movf	?___awmod,w
  5845  0CED  00B0               	movwf	?___awdiv+2
  5846  0CEE  266A  120A  158A   	fcall	___awdiv
  5847  0CF1  27E0               	fcall	PL20	;call to abstracted procedure
  5848  0CF2  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5849  0CF3  0084               	movwf	4
  5850  0CF4  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5851  0CF9  00C3               	movwf	?___ftmul
  5852  0CFA  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5853  0CFF  00C4               	movwf	?___ftmul+1
  5854  0D00  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5855  0D05  27E8  120A  158A   	fcall	PL22	;call to abstracted procedure
  5856  0D08  1BB0               	btfsc	?___awdiv+2,7
  5857  0D09  03B1               	decf	?___awdiv+3,f
  5858  0D0A  266A  120A  158A   	fcall	___awdiv
  5859  0D0D  27AF               	fcall	PL11	;call to abstracted procedure
  5860  0D0E  3E37               	addlw	low ((__npowers_-__stringbase+54))
  5861  0D0F  0084               	movwf	4
  5862  0D10  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5863  0D15  00C6               	movwf	?___ftmul+3
  5864  0D16  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5865  0D1B  00C7               	movwf	?___ftmul+4
  5866  0D1C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5867  0D21  00C8               	movwf	?___ftmul+5
  5868  0D22  26EC  120A  158A   	fcall	___ftmul
  5869  0D25  27BE  120A  158A   	fcall	PL13	;call to abstracted procedure
  5870  0D28  1BAA               	btfsc	?___awmod+2,7
  5871  0D29  03AB               	decf	?___awmod+3,f
  5872  0D2A  26AF  120A  158A   	fcall	___awmod
  5873  0D2D  27A7               	fcall	PL10	;call to abstracted procedure
  5874  0D2E  3E01               	addlw	low (__npowers_-__stringbase)
  5875  0D2F  0084               	movwf	4
  5876  0D30  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5877  0D35  00C3               	movwf	?___ftmul
  5878  0D36  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5879  0D3B  00C4               	movwf	?___ftmul+1
  5880  0D3C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5881  0D41  27F0  120A  158A   	fcall	PL23	;call to abstracted procedure
  5882  0D44  26EC  120A  158A   	fcall	___ftmul
  5883  0D47  2FB7               	ljmp	PL12	;call to abstracted procedure
  5884  0D48                     l7154:	
  5885  0D48  085C               	movf	scale@scl,w
  5886  0D49  3A80               	xorlw	128
  5887  0D4A  3E75               	addlw	-139
  5888  0D4B  1C03               	skipc
  5889  0D4C  2D8D               	goto	l7160
  5890  0D4D  300A               	movlw	10
  5891  0D4E  00A8               	movwf	?___awmod
  5892  0D4F  01A9               	clrf	?___awmod+1
  5893  0D50  085C               	movf	scale@scl,w
  5894  0D51  00AA               	movwf	?___awmod+2
  5895  0D52  01AB               	clrf	?___awmod+3
  5896  0D53  1BAA               	btfsc	?___awmod+2,7
  5897  0D54  03AB               	decf	?___awmod+3,f
  5898  0D55  26AF  120A  158A   	fcall	___awmod
  5899  0D58  27A7               	fcall	PL10	;call to abstracted procedure
  5900  0D59  3E01               	addlw	low (__npowers_-__stringbase)
  5901  0D5A  0084               	movwf	4
  5902  0D5B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5903  0D60  00C3               	movwf	?___ftmul
  5904  0D61  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5905  0D66  00C4               	movwf	?___ftmul+1
  5906  0D67  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5907  0D6C  27F8  120A  158A   	fcall	PL25	;call to abstracted procedure
  5908  0D6F  1BB0               	btfsc	?___awdiv+2,7
  5909  0D70  03B1               	decf	?___awdiv+3,f
  5910  0D71  266A  120A  158A   	fcall	___awdiv
  5911  0D74  27AF               	fcall	PL11	;call to abstracted procedure
  5912  0D75  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5913  0D76  0084               	movwf	4
  5914  0D77  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5915  0D7C  00C6               	movwf	?___ftmul+3
  5916  0D7D  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5917  0D82  00C7               	movwf	?___ftmul+4
  5918  0D83  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5919  0D88  00C8               	movwf	?___ftmul+5
  5920  0D89  26EC  120A  158A   	fcall	___ftmul
  5921  0D8C  2FB7               	ljmp	PL12	;call to abstracted procedure
  5922  0D8D                     l7160:	
  5923  0D8D  3003               	movlw	3
  5924  0D8E  00B1               	movwf	?___bmul
  5925  0D8F  085C               	movf	scale@scl,w
  5926  0D90  275B               	fcall	___bmul
  5927  0D91  3E01               	addlw	low (__npowers_-__stringbase)
  5928  0D92  0084               	movwf	4
  5929  0D93  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5930  0D98  00D2               	movwf	?_scale
  5931  0D99  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5932  0D9E  00D3               	movwf	?_scale+1
  5933  0D9F  160A  118A  2000   	fcall	stringdir
  5934  0DA2  00D4               	movwf	?_scale+2
  5935  0DA3  0008               	return
  5936  0DA4                     l7164:	
  5937  0DA4  085C               	movf	scale@scl,w
  5938  0DA5  3A80               	xorlw	128
  5939  0DA6  3E12               	addlw	-238
  5940  0DA7  1C03               	skipc
  5941  0DA8  2E0E               	goto	l7172
  5942  0DA9  300A               	movlw	10
  5943  0DAA  27CB  120A  158A   	fcall	PL15	;call to abstracted procedure
  5944  0DAD  26AF  120A  158A   	fcall	___awmod
  5945  0DB0  0829               	movf	?___awmod+1,w
  5946  0DB1  00B1               	movwf	?___awdiv+3
  5947  0DB2  0828               	movf	?___awmod,w
  5948  0DB3  00B0               	movwf	?___awdiv+2
  5949  0DB4  266A  120A  158A   	fcall	___awdiv
  5950  0DB7  27E0               	fcall	PL20	;call to abstracted procedure
  5951  0DB8  3E43               	addlw	low ((__powers_-__stringbase+27))
  5952  0DB9  0084               	movwf	4
  5953  0DBA  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5954  0DBF  00C3               	movwf	?___ftmul
  5955  0DC0  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5956  0DC5  00C4               	movwf	?___ftmul+1
  5957  0DC6  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5958  0DCB  27E8  120A  158A   	fcall	PL22	;call to abstracted procedure
  5959  0DCE  1BB0               	btfsc	?___awdiv+2,7
  5960  0DCF  03B1               	decf	?___awdiv+3,f
  5961  0DD0  266A  120A  158A   	fcall	___awdiv
  5962  0DD3  27AF               	fcall	PL11	;call to abstracted procedure
  5963  0DD4  3E5E               	addlw	low ((__powers_-__stringbase+54))
  5964  0DD5  0084               	movwf	4
  5965  0DD6  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5966  0DDB  00C6               	movwf	?___ftmul+3
  5967  0DDC  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5968  0DE1  00C7               	movwf	?___ftmul+4
  5969  0DE2  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5970  0DE7  00C8               	movwf	?___ftmul+5
  5971  0DE8  26EC  120A  158A   	fcall	___ftmul
  5972  0DEB  27BE  120A  158A   	fcall	PL13	;call to abstracted procedure
  5973  0DEE  1BAA               	btfsc	?___awmod+2,7
  5974  0DEF  03AB               	decf	?___awmod+3,f
  5975  0DF0  26AF  120A  158A   	fcall	___awmod
  5976  0DF3  27A7               	fcall	PL10	;call to abstracted procedure
  5977  0DF4  3E28               	addlw	low (__powers_-__stringbase)
  5978  0DF5  0084               	movwf	4
  5979  0DF6  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5980  0DFB  00C3               	movwf	?___ftmul
  5981  0DFC  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5982  0E01  00C4               	movwf	?___ftmul+1
  5983  0E02  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5984  0E07  27F0  120A  158A   	fcall	PL23	;call to abstracted procedure
  5985  0E0A  26EC  120A  158A   	fcall	___ftmul
  5986  0E0D  2FB7               	ljmp	PL12	;call to abstracted procedure
  5987  0E0E                     l7172:	
  5988  0E0E  085C               	movf	scale@scl,w
  5989  0E0F  3A80               	xorlw	128
  5990  0E10  3E75               	addlw	-139
  5991  0E11  1C03               	skipc
  5992  0E12  2E53               	goto	l7178
  5993  0E13  300A               	movlw	10
  5994  0E14  00A8               	movwf	?___awmod
  5995  0E15  01A9               	clrf	?___awmod+1
  5996  0E16  085C               	movf	scale@scl,w
  5997  0E17  00AA               	movwf	?___awmod+2
  5998  0E18  01AB               	clrf	?___awmod+3
  5999  0E19  1BAA               	btfsc	?___awmod+2,7
  6000  0E1A  03AB               	decf	?___awmod+3,f
  6001  0E1B  26AF  120A  158A   	fcall	___awmod
  6002  0E1E  27A7               	fcall	PL10	;call to abstracted procedure
  6003  0E1F  3E28               	addlw	low (__powers_-__stringbase)
  6004  0E20  0084               	movwf	4
  6005  0E21  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6006  0E26  00C3               	movwf	?___ftmul
  6007  0E27  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6008  0E2C  00C4               	movwf	?___ftmul+1
  6009  0E2D  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6010  0E32  27F8  120A  158A   	fcall	PL25	;call to abstracted procedure
  6011  0E35  1BB0               	btfsc	?___awdiv+2,7
  6012  0E36  03B1               	decf	?___awdiv+3,f
  6013  0E37  266A  120A  158A   	fcall	___awdiv
  6014  0E3A  27AF               	fcall	PL11	;call to abstracted procedure
  6015  0E3B  3E43               	addlw	low ((__powers_-__stringbase+27))
  6016  0E3C  0084               	movwf	4
  6017  0E3D  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6018  0E42  00C6               	movwf	?___ftmul+3
  6019  0E43  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6020  0E48  00C7               	movwf	?___ftmul+4
  6021  0E49  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6022  0E4E  00C8               	movwf	?___ftmul+5
  6023  0E4F  26EC  120A  158A   	fcall	___ftmul
  6024  0E52  2FB7               	ljmp	PL12	;call to abstracted procedure
  6025  0E53                     l7178:	
  6026  0E53  3003               	movlw	3
  6027  0E54  00B1               	movwf	?___bmul
  6028  0E55  085C               	movf	scale@scl,w
  6029  0E56  275B               	fcall	___bmul
  6030  0E57  3E28               	addlw	low (__powers_-__stringbase)
  6031  0E58  0084               	movwf	4
  6032  0E59  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6033  0E5E  00D2               	movwf	?_scale
  6034  0E5F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6035  0E64  00D3               	movwf	?_scale+1
  6036  0E65  160A  118A  2000   	fcall	stringdir
  6037  0E68  00D4               	movwf	?_scale+2
  6038  0E69  0008               	return
  6039  0E6A                     __end_of_scale:	
  6040  0E6A                     __ptext555:	
  6041 ;; =============== function ___llmod ends ============
  6042                           
  6043                           
  6044 ;; *************** function ___awdiv *****************
  6045 ;; Defined at:
  6046 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  6047 ;; Parameters:    Size  Location     Type
  6048 ;;  divisor         2   14[BANK0 ] int 
  6049 ;;  dividend        2   16[BANK0 ] int 
  6050 ;; Auto vars:     Size  Location     Type
  6051 ;;  quotient        2   20[BANK0 ] int 
  6052 ;;  sign            1   19[BANK0 ] unsigned char 
  6053 ;;  counter         1   18[BANK0 ] unsigned char 
  6054 ;; Return value:  Size  Location     Type
  6055 ;;                  2   14[BANK0 ] int 
  6056 ;; Registers used:
  6057 ;;		wreg, status,2, status,0
  6058 ;; Tracked objects:
  6059 ;;		On entry : 60/0
  6060 ;;		On exit  : 60/0
  6061 ;;		Unchanged: FFF9F/0
  6062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6063 ;;      Params:         0       4       0       0       0
  6064 ;;      Locals:         0       4       0       0       0
  6065 ;;      Temps:          0       0       0       0       0
  6066 ;;      Totals:         0       8       0       0       0
  6067 ;;Total ram usage:        8 bytes
  6068 ;; Hardware stack levels used:    1
  6069 ;; Hardware stack levels required when called:    3
  6070 ;; This function calls:
  6071 ;;		Nothing
  6072 ;; This function is called by:
  6073 ;;		_scale
  6074 ;;		_printf
  6075 ;; This function uses a non-reentrant model
  6076 ;;
  6077  0E6A                     ___awdiv:	
  6078                           
  6079                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6080  0E6A  01B3               	clrf	___awdiv@sign
  6081  0E6B  1FAF               	btfss	___awdiv@divisor+1,7
  6082  0E6C  2E74               	goto	l6576
  6083  0E6D  09AE               	comf	___awdiv@divisor,f
  6084  0E6E  09AF               	comf	___awdiv@divisor+1,f
  6085  0E6F  0AAE               	incf	___awdiv@divisor,f
  6086  0E70  1903               	skipnz
  6087  0E71  0AAF               	incf	___awdiv@divisor+1,f
  6088  0E72  01B3               	clrf	___awdiv@sign
  6089  0E73  0AB3               	incf	___awdiv@sign,f
  6090  0E74                     l6576:	
  6091  0E74  1FB1               	btfss	___awdiv@dividend+1,7
  6092  0E75  2E7D               	goto	l6582
  6093  0E76  09B0               	comf	___awdiv@dividend,f
  6094  0E77  09B1               	comf	___awdiv@dividend+1,f
  6095  0E78  0AB0               	incf	___awdiv@dividend,f
  6096  0E79  1903               	skipnz
  6097  0E7A  0AB1               	incf	___awdiv@dividend+1,f
  6098  0E7B  3001               	movlw	1
  6099  0E7C  06B3               	xorwf	___awdiv@sign,f
  6100  0E7D                     l6582:	
  6101  0E7D  01B4               	clrf	___awdiv@quotient
  6102  0E7E  01B5               	clrf	___awdiv@quotient+1
  6103  0E7F  082F               	movf	___awdiv@divisor+1,w
  6104  0E80  042E               	iorwf	___awdiv@divisor,w
  6105  0E81  1903               	skipnz
  6106  0E82  2EA2               	goto	l6604
  6107  0E83  01B2               	clrf	___awdiv@counter
  6108  0E84                     L15:	
  6109  0E84  0AB2               	incf	___awdiv@counter,f
  6110  0E85  1BAF               	btfsc	___awdiv@divisor+1,7
  6111  0E86  2E8B               	goto	l6592
  6112  0E87  1003               	clrc
  6113  0E88  0DAE               	rlf	___awdiv@divisor,f
  6114  0E89  0DAF               	rlf	___awdiv@divisor+1,f
  6115  0E8A  2E84               	goto	L15
  6116  0E8B                     l6592:	
  6117  0E8B  1003               	clrc
  6118  0E8C  0DB4               	rlf	___awdiv@quotient,f
  6119  0E8D  0DB5               	rlf	___awdiv@quotient+1,f
  6120  0E8E  082F               	movf	___awdiv@divisor+1,w
  6121  0E8F  0231               	subwf	___awdiv@dividend+1,w
  6122  0E90  1D03               	skipz
  6123  0E91  2E94               	goto	u2985
  6124  0E92  082E               	movf	___awdiv@divisor,w
  6125  0E93  0230               	subwf	___awdiv@dividend,w
  6126  0E94                     u2985:	
  6127  0E94  1C03               	skipc
  6128  0E95  2E9E               	goto	L16
  6129  0E96  082E               	movf	___awdiv@divisor,w
  6130  0E97  02B0               	subwf	___awdiv@dividend,f
  6131  0E98  082F               	movf	___awdiv@divisor+1,w
  6132  0E99  1C03               	skipc
  6133  0E9A  03B1               	decf	___awdiv@dividend+1,f
  6134  0E9B  02B1               	subwf	___awdiv@dividend+1,f
  6135  0E9C  1434               	bsf	___awdiv@quotient,0
  6136  0E9D  1003               	clrc
  6137  0E9E                     L16:	
  6138  0E9E  0CAF               	rrf	___awdiv@divisor+1,f
  6139  0E9F  0CAE               	rrf	___awdiv@divisor,f
  6140  0EA0  0BB2               	decfsz	___awdiv@counter,f
  6141  0EA1  2E8B               	goto	l6592
  6142  0EA2                     l6604:	
  6143  0EA2  0833               	movf	___awdiv@sign,w
  6144  0EA3  1903               	btfsc	3,2
  6145  0EA4  2EAA               	goto	l6608
  6146  0EA5  09B4               	comf	___awdiv@quotient,f
  6147  0EA6  09B5               	comf	___awdiv@quotient+1,f
  6148  0EA7  0AB4               	incf	___awdiv@quotient,f
  6149  0EA8  1903               	skipnz
  6150  0EA9  0AB5               	incf	___awdiv@quotient+1,f
  6151  0EAA                     l6608:	
  6152  0EAA  0835               	movf	___awdiv@quotient+1,w
  6153  0EAB  00AF               	movwf	?___awdiv+1
  6154  0EAC  0834               	movf	___awdiv@quotient,w
  6155  0EAD  00AE               	movwf	?___awdiv
  6156  0EAE  0008               	return
  6157  0EAF                     __end_of___awdiv:	
  6158  0EAF                     __ptext550:	
  6159 ;; =============== function _lcd_put_byte ends ============
  6160                           
  6161                           
  6162 ;; *************** function ___awmod *****************
  6163 ;; Defined at:
  6164 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6165 ;; Parameters:    Size  Location     Type
  6166 ;;  divisor         2    8[BANK0 ] int 
  6167 ;;  dividend        2   10[BANK0 ] int 
  6168 ;; Auto vars:     Size  Location     Type
  6169 ;;  sign            1   13[BANK0 ] unsigned char 
  6170 ;;  counter         1   12[BANK0 ] unsigned char 
  6171 ;; Return value:  Size  Location     Type
  6172 ;;                  2    8[BANK0 ] int 
  6173 ;; Registers used:
  6174 ;;		wreg, status,2, status,0
  6175 ;; Tracked objects:
  6176 ;;		On entry : 60/0
  6177 ;;		On exit  : 60/0
  6178 ;;		Unchanged: FFF9F/0
  6179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6180 ;;      Params:         0       4       0       0       0
  6181 ;;      Locals:         0       2       0       0       0
  6182 ;;      Temps:          0       0       0       0       0
  6183 ;;      Totals:         0       6       0       0       0
  6184 ;;Total ram usage:        6 bytes
  6185 ;; Hardware stack levels used:    1
  6186 ;; Hardware stack levels required when called:    3
  6187 ;; This function calls:
  6188 ;;		Nothing
  6189 ;; This function is called by:
  6190 ;;		_scale
  6191 ;; This function uses a non-reentrant model
  6192 ;;
  6193  0EAF                     ___awmod:	
  6194                           
  6195                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6196  0EAF  01AD               	clrf	___awmod@sign
  6197  0EB0  1FAB               	btfss	___awmod@dividend+1,7
  6198  0EB1  2EB9               	goto	l6694
  6199  0EB2  09AA               	comf	___awmod@dividend,f
  6200  0EB3  09AB               	comf	___awmod@dividend+1,f
  6201  0EB4  0AAA               	incf	___awmod@dividend,f
  6202  0EB5  1903               	skipnz
  6203  0EB6  0AAB               	incf	___awmod@dividend+1,f
  6204  0EB7  01AD               	clrf	___awmod@sign
  6205  0EB8  0AAD               	incf	___awmod@sign,f
  6206  0EB9                     l6694:	
  6207  0EB9  1FA9               	btfss	___awmod@divisor+1,7
  6208  0EBA  2EC0               	goto	l6698
  6209  0EBB  09A8               	comf	___awmod@divisor,f
  6210  0EBC  09A9               	comf	___awmod@divisor+1,f
  6211  0EBD  0AA8               	incf	___awmod@divisor,f
  6212  0EBE  1903               	skipnz
  6213  0EBF  0AA9               	incf	___awmod@divisor+1,f
  6214  0EC0                     l6698:	
  6215  0EC0  0829               	movf	___awmod@divisor+1,w
  6216  0EC1  0428               	iorwf	___awmod@divisor,w
  6217  0EC2  1903               	skipnz
  6218  0EC3  2EDF               	goto	l6714
  6219  0EC4  01AC               	clrf	___awmod@counter
  6220  0EC5                     L8:	
  6221  0EC5  0AAC               	incf	___awmod@counter,f
  6222  0EC6  1BA9               	btfsc	___awmod@divisor+1,7
  6223  0EC7  2ECC               	goto	l6706
  6224  0EC8  1003               	clrc
  6225  0EC9  0DA8               	rlf	___awmod@divisor,f
  6226  0ECA  0DA9               	rlf	___awmod@divisor+1,f
  6227  0ECB  2EC5               	goto	L8
  6228  0ECC                     l6706:	
  6229  0ECC  0829               	movf	___awmod@divisor+1,w
  6230  0ECD  022B               	subwf	___awmod@dividend+1,w
  6231  0ECE  1D03               	skipz
  6232  0ECF  2ED2               	goto	u3175
  6233  0ED0  0828               	movf	___awmod@divisor,w
  6234  0ED1  022A               	subwf	___awmod@dividend,w
  6235  0ED2                     u3175:	
  6236  0ED2  1C03               	skipc
  6237  0ED3  2EDB               	goto	L9
  6238  0ED4  0828               	movf	___awmod@divisor,w
  6239  0ED5  02AA               	subwf	___awmod@dividend,f
  6240  0ED6  0829               	movf	___awmod@divisor+1,w
  6241  0ED7  1C03               	skipc
  6242  0ED8  03AB               	decf	___awmod@dividend+1,f
  6243  0ED9  02AB               	subwf	___awmod@dividend+1,f
  6244  0EDA  1003               	clrc
  6245  0EDB                     L9:	
  6246  0EDB  0CA9               	rrf	___awmod@divisor+1,f
  6247  0EDC  0CA8               	rrf	___awmod@divisor,f
  6248  0EDD  0BAC               	decfsz	___awmod@counter,f
  6249  0EDE  2ECC               	goto	l6706
  6250  0EDF                     l6714:	
  6251  0EDF  082D               	movf	___awmod@sign,w
  6252  0EE0  1903               	btfsc	3,2
  6253  0EE1  2EE7               	goto	l6718
  6254  0EE2  09AA               	comf	___awmod@dividend,f
  6255  0EE3  09AB               	comf	___awmod@dividend+1,f
  6256  0EE4  0AAA               	incf	___awmod@dividend,f
  6257  0EE5  1903               	skipnz
  6258  0EE6  0AAB               	incf	___awmod@dividend+1,f
  6259  0EE7                     l6718:	
  6260  0EE7  082B               	movf	___awmod@dividend+1,w
  6261  0EE8  00A9               	movwf	?___awmod+1
  6262  0EE9  082A               	movf	___awmod@dividend,w
  6263  0EEA  00A8               	movwf	?___awmod
  6264  0EEB  0008               	return
  6265  0EEC                     __end_of___awmod:	
  6266  0EEC                     __ptext545:	
  6267 ;; =============== function ___lbtoft ends ============
  6268                           
  6269                           
  6270 ;; *************** function ___ftmul *****************
  6271 ;; Defined at:
  6272 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;  f1              3   35[BANK0 ] float 
  6275 ;;  f2              3   38[BANK0 ] float 
  6276 ;; Auto vars:     Size  Location     Type
  6277 ;;  f3_as_produc    3   45[BANK0 ] unsigned um
  6278 ;;  sign            1   49[BANK0 ] unsigned char 
  6279 ;;  cntr            1   48[BANK0 ] unsigned char 
  6280 ;;  exp             1   44[BANK0 ] unsigned char 
  6281 ;; Return value:  Size  Location     Type
  6282 ;;                  3   35[BANK0 ] float 
  6283 ;; Registers used:
  6284 ;;		wreg, status,2, status,0, pclath, cstack
  6285 ;; Tracked objects:
  6286 ;;		On entry : 60/0
  6287 ;;		On exit  : 60/0
  6288 ;;		Unchanged: FFF9F/0
  6289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6290 ;;      Params:         0       6       0       0       0
  6291 ;;      Locals:         0       6       0       0       0
  6292 ;;      Temps:          0       3       0       0       0
  6293 ;;      Totals:         0      15       0       0       0
  6294 ;;Total ram usage:       15 bytes
  6295 ;; Hardware stack levels used:    1
  6296 ;; Hardware stack levels required when called:    4
  6297 ;; This function calls:
  6298 ;;		___ftpack
  6299 ;; This function is called by:
  6300 ;;		_main
  6301 ;;		_fround
  6302 ;;		_scale
  6303 ;;		_printf
  6304 ;; This function uses a non-reentrant model
  6305 ;;
  6306  0EEC                     ___ftmul:	
  6307                           
  6308                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6309  0EEC  0843               	movf	___ftmul@f1,w
  6310  0EED  00C9               	movwf	??___ftmul
  6311  0EEE  0844               	movf	___ftmul@f1+1,w
  6312  0EEF  00CA               	movwf	??___ftmul+1
  6313  0EF0  0845               	movf	___ftmul@f1+2,w
  6314  0EF1  00CB               	movwf	??___ftmul+2
  6315  0EF2  1003               	clrc
  6316  0EF3  0D4A               	rlf	??___ftmul+1,w
  6317  0EF4  0D4B               	rlf	??___ftmul+2,w
  6318  0EF5  00CC               	movwf	___ftmul@exp
  6319  0EF6  08CC               	movf	___ftmul@exp,f
  6320  0EF7  1D03               	skipz
  6321  0EF8  2EFD               	goto	l7006
  6322  0EF9  01C3               	clrf	?___ftmul
  6323  0EFA  01C4               	clrf	?___ftmul+1
  6324  0EFB  01C5               	clrf	?___ftmul+2
  6325  0EFC  0008               	return
  6326  0EFD                     l7006:	
  6327  0EFD  0846               	movf	___ftmul@f2,w
  6328  0EFE  00C9               	movwf	??___ftmul
  6329  0EFF  0847               	movf	___ftmul@f2+1,w
  6330  0F00  00CA               	movwf	??___ftmul+1
  6331  0F01  0848               	movf	___ftmul@f2+2,w
  6332  0F02  00CB               	movwf	??___ftmul+2
  6333  0F03  1003               	clrc
  6334  0F04  0D4A               	rlf	??___ftmul+1,w
  6335  0F05  0D4B               	rlf	??___ftmul+2,w
  6336  0F06  00D1               	movwf	___ftmul@sign
  6337  0F07  08D1               	movf	___ftmul@sign,f
  6338  0F08  1D03               	skipz
  6339  0F09  2F0E               	goto	l7012
  6340  0F0A  01C3               	clrf	?___ftmul
  6341  0F0B  01C4               	clrf	?___ftmul+1
  6342  0F0C  01C5               	clrf	?___ftmul+2
  6343  0F0D  0008               	return
  6344  0F0E                     l7012:	
  6345  0F0E  0851               	movf	___ftmul@sign,w
  6346  0F0F  3E7B               	addlw	123
  6347  0F10  07CC               	addwf	___ftmul@exp,f
  6348  0F11  0845               	movf	___ftmul@f1+2,w
  6349  0F12  00D1               	movwf	___ftmul@sign
  6350  0F13  0848               	movf	___ftmul@f2+2,w
  6351  0F14  06D1               	xorwf	___ftmul@sign,f
  6352  0F15  3080               	movlw	128
  6353  0F16  05D1               	andwf	___ftmul@sign,f
  6354  0F17  3007               	movlw	7
  6355  0F18  17C4               	bsf	___ftmul@f1+1,7
  6356  0F19  17C7               	bsf	___ftmul@f2+1,7
  6357  0F1A  01C8               	clrf	___ftmul@f2+2
  6358  0F1B  01CD               	clrf	___ftmul@f3_as_product
  6359  0F1C  01CE               	clrf	___ftmul@f3_as_product+1
  6360  0F1D  01CF               	clrf	___ftmul@f3_as_product+2
  6361  0F1E  00D0               	movwf	___ftmul@cntr
  6362  0F1F                     l7030:	
  6363  0F1F  1C43               	btfss	___ftmul@f1,0
  6364  0F20  2F29               	goto	l7034
  6365  0F21  0846               	movf	___ftmul@f2,w
  6366  0F22  27D6  120A  158A   	fcall	PL18	;call to abstracted procedure
  6367  0F25  1803               	skipnc
  6368  0F26  0A48               	incf	___ftmul@f2+2,w
  6369  0F27  1D03               	btfss	3,2
  6370  0F28  07CF               	addwf	___ftmul@f3_as_product+2,f
  6371  0F29                     l7034:	
  6372  0F29  1003               	clrc
  6373  0F2A  0CC5               	rrf	___ftmul@f1+2,f
  6374  0F2B  0CC4               	rrf	___ftmul@f1+1,f
  6375  0F2C  0CC3               	rrf	___ftmul@f1,f
  6376  0F2D  1003               	clrc
  6377  0F2E  0DC6               	rlf	___ftmul@f2,f
  6378  0F2F  0DC7               	rlf	___ftmul@f2+1,f
  6379  0F30  0DC8               	rlf	___ftmul@f2+2,f
  6380  0F31  0BD0               	decfsz	___ftmul@cntr,f
  6381  0F32  2F1F               	goto	l7030
  6382  0F33  3009               	movlw	9
  6383  0F34  00D0               	movwf	___ftmul@cntr
  6384  0F35                     l7042:	
  6385  0F35  1C43               	btfss	___ftmul@f1,0
  6386  0F36  2F3F               	goto	l7046
  6387  0F37  0846               	movf	___ftmul@f2,w
  6388  0F38  27D6  120A  158A   	fcall	PL18	;call to abstracted procedure
  6389  0F3B  1803               	skipnc
  6390  0F3C  0A48               	incf	___ftmul@f2+2,w
  6391  0F3D  1D03               	btfss	3,2
  6392  0F3E  07CF               	addwf	___ftmul@f3_as_product+2,f
  6393  0F3F                     l7046:	
  6394  0F3F  1003               	clrc
  6395  0F40  0CC5               	rrf	___ftmul@f1+2,f
  6396  0F41  0CC4               	rrf	___ftmul@f1+1,f
  6397  0F42  0CC3               	rrf	___ftmul@f1,f
  6398  0F43  1003               	clrc
  6399  0F44  0CCF               	rrf	___ftmul@f3_as_product+2,f
  6400  0F45  0CCE               	rrf	___ftmul@f3_as_product+1,f
  6401  0F46  0CCD               	rrf	___ftmul@f3_as_product,f
  6402  0F47  0BD0               	decfsz	___ftmul@cntr,f
  6403  0F48  2F35               	goto	l7042
  6404  0F49  084D               	movf	___ftmul@f3_as_product,w
  6405  0F4A  00A8               	movwf	?___ftpack
  6406  0F4B  084E               	movf	___ftmul@f3_as_product+1,w
  6407  0F4C  00A9               	movwf	?___ftpack+1
  6408  0F4D  084F               	movf	___ftmul@f3_as_product+2,w
  6409  0F4E  00AA               	movwf	?___ftpack+2
  6410  0F4F  084C               	movf	___ftmul@exp,w
  6411  0F50  00AB               	movwf	?___ftpack+3
  6412  0F51  0851               	movf	___ftmul@sign,w
  6413  0F52  00AC               	movwf	?___ftpack+4
  6414  0F53  2769               	fcall	___ftpack
  6415  0F54  0828               	movf	?___ftpack,w
  6416  0F55  00C3               	movwf	?___ftmul
  6417  0F56  0829               	movf	?___ftpack+1,w
  6418  0F57  00C4               	movwf	?___ftmul+1
  6419  0F58  082A               	movf	?___ftpack+2,w
  6420  0F59  00C5               	movwf	?___ftmul+2
  6421  0F5A  0008               	return
  6422  0F5B                     __end_of___ftmul:	
  6423  0F5B                     __ptext561:	
  6424 ;; =============== function ___wmul ends ============
  6425                           
  6426                           
  6427 ;; *************** function ___bmul *****************
  6428 ;; Defined at:
  6429 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  6430 ;; Parameters:    Size  Location     Type
  6431 ;;  multiplier      1    wreg     unsigned char 
  6432 ;;  multiplicand    1   17[BANK0 ] unsigned char 
  6433 ;; Auto vars:     Size  Location     Type
  6434 ;;  multiplier      1   19[BANK0 ] unsigned char 
  6435 ;;  product         1   18[BANK0 ] unsigned char 
  6436 ;; Return value:  Size  Location     Type
  6437 ;;                  1    wreg      unsigned char 
  6438 ;; Registers used:
  6439 ;;		wreg, status,2, status,0
  6440 ;; Tracked objects:
  6441 ;;		On entry : 60/0
  6442 ;;		On exit  : 60/0
  6443 ;;		Unchanged: FFF9F/0
  6444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6445 ;;      Params:         0       1       0       0       0
  6446 ;;      Locals:         0       2       0       0       0
  6447 ;;      Temps:          0       0       0       0       0
  6448 ;;      Totals:         0       3       0       0       0
  6449 ;;Total ram usage:        3 bytes
  6450 ;; Hardware stack levels used:    1
  6451 ;; Hardware stack levels required when called:    3
  6452 ;; This function calls:
  6453 ;;		Nothing
  6454 ;; This function is called by:
  6455 ;;		_fround
  6456 ;;		_scale
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459  0F5B                     ___bmul:	
  6460                           
  6461                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6462                           ;___bmul@multiplier stored from wreg
  6463  0F5B  00B3               	movwf	___bmul@multiplier
  6464  0F5C  01B2               	clrf	___bmul@product
  6465  0F5D                     l6430:	
  6466  0F5D  0831               	movf	___bmul@multiplicand,w
  6467  0F5E  1833               	btfsc	___bmul@multiplier,0
  6468  0F5F  07B2               	addwf	___bmul@product,f
  6469  0F60  1003               	clrc
  6470  0F61  0DB1               	rlf	___bmul@multiplicand,f
  6471  0F62  1003               	clrc
  6472  0F63  0CB3               	rrf	___bmul@multiplier,f
  6473  0F64  08B3               	movf	___bmul@multiplier,f
  6474  0F65  1D03               	skipz
  6475  0F66  2F5D               	goto	l6430
  6476  0F67  0832               	movf	___bmul@product,w
  6477  0F68  0008               	return
  6478  0F69                     __end_of___bmul:	
  6479  0F69                     __ptext557:	
  6480 ;; =============== function ___fttol ends ============
  6481                           
  6482                           
  6483 ;; *************** function ___ftpack *****************
  6484 ;; Defined at:
  6485 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  6486 ;; Parameters:    Size  Location     Type
  6487 ;;  arg             3    8[BANK0 ] unsigned um
  6488 ;;  exp             1   11[BANK0 ] unsigned char 
  6489 ;;  sign            1   12[BANK0 ] unsigned char 
  6490 ;; Auto vars:     Size  Location     Type
  6491 ;;		None
  6492 ;; Return value:  Size  Location     Type
  6493 ;;                  3    8[BANK0 ] float 
  6494 ;; Registers used:
  6495 ;;		wreg, status,2, status,0
  6496 ;; Tracked objects:
  6497 ;;		On entry : 60/0
  6498 ;;		On exit  : 60/0
  6499 ;;		Unchanged: FFF9F/0
  6500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6501 ;;      Params:         0       5       0       0       0
  6502 ;;      Locals:         0       0       0       0       0
  6503 ;;      Temps:          0       3       0       0       0
  6504 ;;      Totals:         0       8       0       0       0
  6505 ;;Total ram usage:        8 bytes
  6506 ;; Hardware stack levels used:    1
  6507 ;; Hardware stack levels required when called:    3
  6508 ;; This function calls:
  6509 ;;		Nothing
  6510 ;; This function is called by:
  6511 ;;		___ftadd
  6512 ;;		___ftdiv
  6513 ;;		___ftmul
  6514 ;;		___lbtoft
  6515 ;;		___lltoft
  6516 ;; This function uses a non-reentrant model
  6517 ;;
  6518  0F69                     ___ftpack:	
  6519                           
  6520                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6521  0F69  082B               	movf	___ftpack@exp,w
  6522  0F6A  1903               	btfsc	3,2
  6523  0F6B  2F71               	goto	l6506
  6524  0F6C  082A               	movf	___ftpack@arg+2,w
  6525  0F6D  0429               	iorwf	___ftpack@arg+1,w
  6526  0F6E  0428               	iorwf	___ftpack@arg,w
  6527  0F6F  1D03               	skipz
  6528  0F70  2F7A               	goto	l6512
  6529  0F71                     l6506:	
  6530  0F71  01A8               	clrf	?___ftpack
  6531  0F72  01A9               	clrf	?___ftpack+1
  6532  0F73  01AA               	clrf	?___ftpack+2
  6533  0F74  0008               	return
  6534  0F75                     l6510:	
  6535  0F75  0AAB               	incf	___ftpack@exp,f
  6536  0F76  1003               	clrc
  6537  0F77  0CAA               	rrf	___ftpack@arg+2,f
  6538  0F78  0CA9               	rrf	___ftpack@arg+1,f
  6539  0F79  0CA8               	rrf	___ftpack@arg,f
  6540  0F7A                     l6512:	
  6541  0F7A  30FE               	movlw	254
  6542  0F7B  052A               	andwf	___ftpack@arg+2,w
  6543  0F7C  1903               	btfsc	3,2
  6544  0F7D  2F89               	goto	l6516
  6545  0F7E  2F75               	goto	l6510
  6546  0F7F                     l6514:	
  6547  0F7F  0AAB               	incf	___ftpack@exp,f
  6548  0F80  0AA8               	incf	___ftpack@arg,f
  6549  0F81  1903               	skipnz
  6550  0F82  0AA9               	incf	___ftpack@arg+1,f
  6551  0F83  1903               	skipnz
  6552  0F84  0AAA               	incf	___ftpack@arg+2,f
  6553  0F85  1003               	clrc
  6554  0F86  0CAA               	rrf	___ftpack@arg+2,f
  6555  0F87  0CA9               	rrf	___ftpack@arg+1,f
  6556  0F88  0CA8               	rrf	___ftpack@arg,f
  6557  0F89                     l6516:	
  6558  0F89  30FF               	movlw	255
  6559  0F8A  052A               	andwf	___ftpack@arg+2,w
  6560  0F8B  1903               	btfsc	3,2
  6561  0F8C  2F93               	goto	l6520
  6562  0F8D  2F7F               	goto	l6514
  6563  0F8E                     l6518:	
  6564  0F8E  03AB               	decf	___ftpack@exp,f
  6565  0F8F  1003               	clrc
  6566  0F90  0DA8               	rlf	___ftpack@arg,f
  6567  0F91  0DA9               	rlf	___ftpack@arg+1,f
  6568  0F92  0DAA               	rlf	___ftpack@arg+2,f
  6569  0F93                     l6520:	
  6570  0F93  1FA9               	btfss	___ftpack@arg+1,7
  6571  0F94  2F8E               	goto	l6518
  6572  0F95  1C2B               	btfss	___ftpack@exp,0
  6573  0F96  13A9               	bcf	___ftpack@arg+1,7
  6574  0F97  1003               	clrc
  6575  0F98  0CAB               	rrf	___ftpack@exp,f
  6576  0F99  082B               	movf	___ftpack@exp,w
  6577  0F9A  00AF               	movwf	??___ftpack+2
  6578  0F9B  01AE               	clrf	??___ftpack+1
  6579  0F9C  01AD               	clrf	??___ftpack
  6580  0F9D  082D               	movf	??___ftpack,w
  6581  0F9E  04A8               	iorwf	___ftpack@arg,f
  6582  0F9F  082E               	movf	??___ftpack+1,w
  6583  0FA0  04A9               	iorwf	___ftpack@arg+1,f
  6584  0FA1  082F               	movf	??___ftpack+2,w
  6585  0FA2  04AA               	iorwf	___ftpack@arg+2,f
  6586  0FA3  082C               	movf	___ftpack@sign,w
  6587  0FA4  1D03               	skipz
  6588  0FA5  17AA               	bsf	___ftpack@arg+2,7
  6589  0FA6  0008               	return
  6590  0FA7                     __end_of___ftpack:	
  6591  0FA7                     PL10:	
  6592  0FA7  0828               	movf	?___awmod,w
  6593  0FA8  00D5               	movwf	??_scale
  6594  0FA9  0829               	movf	?___awmod+1,w
  6595  0FAA  00D6               	movwf	??_scale+1
  6596  0FAB  0855               	movf	??_scale,w
  6597  0FAC  0755               	addwf	??_scale,w
  6598  0FAD  0755               	addwf	??_scale,w
  6599  0FAE  0008               	return
  6600  0FAF                     PL11:	
  6601  0FAF  082E               	movf	?___awdiv,w
  6602  0FB0  00D7               	movwf	??_scale+2
  6603  0FB1  082F               	movf	?___awdiv+1,w
  6604  0FB2  00D8               	movwf	??_scale+3
  6605  0FB3  0857               	movf	??_scale+2,w
  6606  0FB4  0757               	addwf	??_scale+2,w
  6607  0FB5  0757               	addwf	??_scale+2,w
  6608  0FB6  0008               	return
  6609  0FB7                     PL12:	
  6610  0FB7  0843               	movf	?___ftmul,w
  6611  0FB8  00D2               	movwf	?_scale
  6612  0FB9  0844               	movf	?___ftmul+1,w
  6613  0FBA  00D3               	movwf	?_scale+1
  6614  0FBB  0845               	movf	?___ftmul+2,w
  6615  0FBC  00D4               	movwf	?_scale+2
  6616  0FBD  0008               	return
  6617  0FBE                     PL13:	
  6618  0FBE  0843               	movf	?___ftmul,w
  6619  0FBF  00D9               	movwf	_scale$4112
  6620  0FC0  0844               	movf	?___ftmul+1,w
  6621  0FC1  00DA               	movwf	_scale$4112+1
  6622  0FC2  0845               	movf	?___ftmul+2,w
  6623  0FC3  00DB               	movwf	_scale$4112+2
  6624  0FC4  300A               	movlw	10
  6625  0FC5  00A8               	movwf	?___awmod
  6626  0FC6  01A9               	clrf	?___awmod+1
  6627  0FC7  085C               	movf	scale@scl,w
  6628  0FC8  00AA               	movwf	?___awmod+2
  6629  0FC9  01AB               	clrf	?___awmod+3
  6630  0FCA  0008               	return
  6631  0FCB                     PL15:	
  6632  0FCB  00AE               	movwf	?___awdiv
  6633  0FCC  01AF               	clrf	?___awdiv+1
  6634  0FCD  085C               	movf	scale@scl,w
  6635  0FCE  00AA               	movwf	?___awmod+2
  6636  0FCF  01AB               	clrf	?___awmod+3
  6637  0FD0  1BAA               	btfsc	?___awmod+2,7
  6638  0FD1  03AB               	decf	?___awmod+3,f
  6639  0FD2  3064               	movlw	100
  6640  0FD3  00A8               	movwf	?___awmod
  6641  0FD4  01A9               	clrf	?___awmod+1
  6642  0FD5  0008               	return
  6643  0FD6                     PL18:	
  6644  0FD6  07CD               	addwf	___ftmul@f3_as_product,f
  6645  0FD7  0847               	movf	___ftmul@f2+1,w
  6646  0FD8  1103               	clrz
  6647  0FD9  1803               	skipnc
  6648  0FDA  0A47               	incf	___ftmul@f2+1,w
  6649  0FDB  1D03               	btfss	3,2
  6650  0FDC  07CE               	addwf	___ftmul@f3_as_product+1,f
  6651  0FDD  0848               	movf	___ftmul@f2+2,w
  6652  0FDE  1103               	clrz
  6653  0FDF  0008               	return
  6654  0FE0                     PL20:	
  6655  0FE0  082E               	movf	?___awdiv,w
  6656  0FE1  00D5               	movwf	??_scale
  6657  0FE2  082F               	movf	?___awdiv+1,w
  6658  0FE3  00D6               	movwf	??_scale+1
  6659  0FE4  0855               	movf	??_scale,w
  6660  0FE5  0755               	addwf	??_scale,w
  6661  0FE6  0755               	addwf	??_scale,w
  6662  0FE7  0008               	return
  6663  0FE8                     PL22:	
  6664  0FE8  00C5               	movwf	?___ftmul+2
  6665  0FE9  3064               	movlw	100
  6666  0FEA  00AE               	movwf	?___awdiv
  6667  0FEB  01AF               	clrf	?___awdiv+1
  6668  0FEC  085C               	movf	scale@scl,w
  6669  0FED  00B0               	movwf	?___awdiv+2
  6670  0FEE  01B1               	clrf	?___awdiv+3
  6671  0FEF  0008               	return
  6672  0FF0                     PL23:	
  6673  0FF0  00C5               	movwf	?___ftmul+2
  6674  0FF1  0859               	movf	_scale$4112,w
  6675  0FF2  00C6               	movwf	?___ftmul+3
  6676  0FF3  085A               	movf	_scale$4112+1,w
  6677  0FF4  00C7               	movwf	?___ftmul+4
  6678  0FF5  085B               	movf	_scale$4112+2,w
  6679  0FF6  00C8               	movwf	?___ftmul+5
  6680  0FF7  0008               	return
  6681  0FF8                     PL25:	
  6682  0FF8  00C5               	movwf	?___ftmul+2
  6683  0FF9  300A               	movlw	10
  6684  0FFA  00AE               	movwf	?___awdiv
  6685  0FFB  01AF               	clrf	?___awdiv+1
  6686  0FFC  085C               	movf	scale@scl,w
  6687  0FFD  00B0               	movwf	?___awdiv+2
  6688  0FFE  01B1               	clrf	?___awdiv+3
  6689  0FFF  0008               	return
  6690                           
  6691                           	psect	text562
  6692  0834                     __ptext562:	
  6693 ;; =============== function ___bmul ends ============
  6694                           
  6695                           
  6696 ;; *************** function __div_to_l_ *****************
  6697 ;; Defined at:
  6698 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fldivl.c"
  6699 ;; Parameters:    Size  Location     Type
  6700 ;;  f1              3    8[BANK0 ] unsigned char 
  6701 ;;  f2              3   11[BANK0 ] unsigned char 
  6702 ;; Auto vars:     Size  Location     Type
  6703 ;;  quot            4   22[BANK0 ] unsigned long 
  6704 ;;  exp1            1   27[BANK0 ] unsigned char 
  6705 ;;  cntr            1   26[BANK0 ] unsigned char 
  6706 ;; Return value:  Size  Location     Type
  6707 ;;                  4    8[BANK0 ] unsigned long 
  6708 ;; Registers used:
  6709 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6710 ;; Tracked objects:
  6711 ;;		On entry : 0/0
  6712 ;;		On exit  : 60/0
  6713 ;;		Unchanged: FFE9F/0
  6714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6715 ;;      Params:         0       6       0       0       0
  6716 ;;      Locals:         0       6       0       0       0
  6717 ;;      Temps:          0       8       0       0       0
  6718 ;;      Totals:         0      20       0       0       0
  6719 ;;Total ram usage:       20 bytes
  6720 ;; Hardware stack levels used:    1
  6721 ;; Hardware stack levels required when called:    3
  6722 ;; This function calls:
  6723 ;;		Nothing
  6724 ;; This function is called by:
  6725 ;;		_printf
  6726 ;; This function uses a non-reentrant model
  6727 ;;
  6728  0834                     __div_to_l_:	
  6729                           
  6730                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  6731  0834  3028               	movlw	low __div_to_l_@f1
  6732  0835  0084               	movwf	4
  6733  0836  1383               	bcf	3,7	;select IRP bank0
  6734  0837  0800               	movf	0,w
  6735  0838  1283               	bcf	3,5	;RP0=0, select bank0
  6736  0839  1303               	bcf	3,6	;RP1=0, select bank0
  6737  083A  00AE               	movwf	??__div_to_l_
  6738  083B  0A84               	incf	4,f
  6739  083C  0800               	movf	0,w
  6740  083D  00AF               	movwf	??__div_to_l_+1
  6741  083E  0A84               	incf	4,f
  6742  083F  0800               	movf	0,w
  6743  0840  00B0               	movwf	??__div_to_l_+2
  6744  0841  0A84               	incf	4,f
  6745  0842  0800               	movf	0,w
  6746  0843  00B1               	movwf	??__div_to_l_+3
  6747  0844  1003               	clrc
  6748  0845  0D30               	rlf	??__div_to_l_+2,w
  6749  0846  0D31               	rlf	??__div_to_l_+3,w
  6750  0847  00BB               	movwf	__div_to_l_@exp1
  6751  0848  08BB               	movf	__div_to_l_@exp1,f
  6752  0849  1D03               	skipz
  6753  084A  2850               	goto	l6386
  6754  084B                     l6384:	
  6755  084B  01A8               	clrf	?__div_to_l_
  6756  084C  01A9               	clrf	?__div_to_l_+1
  6757  084D  01AA               	clrf	?__div_to_l_+2
  6758  084E  01AB               	clrf	?__div_to_l_+3
  6759  084F  0008               	return
  6760  0850                     l6386:	
  6761  0850  302B               	movlw	low __div_to_l_@f2
  6762  0851  20F3  120A  158A   	fcall	PL2	;call to abstracted procedure
  6763  0854  1003               	clrc
  6764  0855  0D30               	rlf	??__div_to_l_+2,w
  6765  0856  0D31               	rlf	??__div_to_l_+3,w
  6766  0857  00BA               	movwf	__div_to_l_@cntr
  6767  0858  08BA               	movf	__div_to_l_@cntr,f
  6768  0859  1903               	btfsc	3,2
  6769  085A  284B               	goto	l6384
  6770  085B  3028               	movlw	low __div_to_l_@f1
  6771  085C  0084               	movwf	4
  6772  085D  3080               	movlw	128
  6773  085E  0A84               	incf	4,f
  6774  085F  0A84               	incf	4,f
  6775  0860  0480               	iorwf	0,f
  6776  0861  3028               	movlw	low __div_to_l_@f1
  6777  0862  0A84               	incf	4,f
  6778  0863  0084               	movwf	4
  6779  0864  302B               	movlw	low __div_to_l_@f2
  6780  0865  0A84               	incf	4,f
  6781  0866  0A84               	incf	4,f
  6782  0867  0A84               	incf	4,f
  6783  0868  0180               	clrf	0
  6784  0869  0084               	movwf	4
  6785  086A  3080               	movlw	128
  6786  086B  0A84               	incf	4,f
  6787  086C  0A84               	incf	4,f
  6788  086D  0480               	iorwf	0,f
  6789  086E  302B               	movlw	low __div_to_l_@f2
  6790  086F  0A84               	incf	4,f
  6791  0870  0084               	movwf	4
  6792  0871  307F               	movlw	127
  6793  0872  0A84               	incf	4,f
  6794  0873  0A84               	incf	4,f
  6795  0874  0A84               	incf	4,f
  6796  0875  0180               	clrf	0
  6797  0876  01B6               	clrf	__div_to_l_@quot
  6798  0877  01B7               	clrf	__div_to_l_@quot+1
  6799  0878  01B8               	clrf	__div_to_l_@quot+2
  6800  0879  01B9               	clrf	__div_to_l_@quot+3
  6801  087A  02BB               	subwf	__div_to_l_@exp1,f
  6802  087B  30A0               	movlw	160
  6803  087C  073A               	addwf	__div_to_l_@cntr,w
  6804  087D  00AE               	movwf	??__div_to_l_
  6805  087E  02BB               	subwf	__div_to_l_@exp1,f
  6806  087F  3020               	movlw	32
  6807  0880  00BA               	movwf	__div_to_l_@cntr
  6808  0881                     l6400:	
  6809  0881  302B               	movlw	low __div_to_l_@f2
  6810  0882  1003               	clrc
  6811  0883  0DB6               	rlf	__div_to_l_@quot,f
  6812  0884  0DB7               	rlf	__div_to_l_@quot+1,f
  6813  0885  0DB8               	rlf	__div_to_l_@quot+2,f
  6814  0886  0DB9               	rlf	__div_to_l_@quot+3,f
  6815  0887  20F3  120A  158A   	fcall	PL2	;call to abstracted procedure
  6816  088A  3028               	movlw	low __div_to_l_@f1
  6817  088B  0084               	movwf	4
  6818  088C  0800               	movf	0,w
  6819  088D  00B2               	movwf	??__div_to_l_+4
  6820  088E  0A84               	incf	4,f
  6821  088F  0800               	movf	0,w
  6822  0890  00B3               	movwf	??__div_to_l_+5
  6823  0891  0A84               	incf	4,f
  6824  0892  0800               	movf	0,w
  6825  0893  00B4               	movwf	??__div_to_l_+6
  6826  0894  0A84               	incf	4,f
  6827  0895  0800               	movf	0,w
  6828  0896  00B5               	movwf	??__div_to_l_+7
  6829  0897  0831               	movf	??__div_to_l_+3,w
  6830  0898  0235               	subwf	??__div_to_l_+7,w
  6831  0899  1D03               	skipz
  6832  089A  28A5               	goto	u2615
  6833  089B  0830               	movf	??__div_to_l_+2,w
  6834  089C  0234               	subwf	??__div_to_l_+6,w
  6835  089D  1D03               	skipz
  6836  089E  28A5               	goto	u2615
  6837  089F  082F               	movf	??__div_to_l_+1,w
  6838  08A0  0233               	subwf	??__div_to_l_+5,w
  6839  08A1  1D03               	skipz
  6840  08A2  28A5               	goto	u2615
  6841  08A3  082E               	movf	??__div_to_l_,w
  6842  08A4  0232               	subwf	??__div_to_l_+4,w
  6843  08A5                     u2615:	
  6844  08A5  1C03               	skipc
  6845  08A6  28C1               	goto	l3556
  6846  08A7  302B               	movlw	low __div_to_l_@f2
  6847  08A8  20F3  120A  158A   	fcall	PL2	;call to abstracted procedure
  6848  08AB  3028               	movlw	low __div_to_l_@f1
  6849  08AC  0084               	movwf	4
  6850  08AD  082E               	movf	??__div_to_l_,w
  6851  08AE  0280               	subwf	0,f
  6852  08AF  0A84               	incf	4,f
  6853  08B0  082F               	movf	??__div_to_l_+1,w
  6854  08B1  1C03               	skipc
  6855  08B2  0F2F               	incfsz	??__div_to_l_+1,w
  6856  08B3  0280               	subwf	0,f
  6857  08B4  0A84               	incf	4,f
  6858  08B5  0830               	movf	??__div_to_l_+2,w
  6859  08B6  1C03               	skipc
  6860  08B7  0F30               	incfsz	??__div_to_l_+2,w
  6861  08B8  0280               	subwf	0,f
  6862  08B9  0A84               	incf	4,f
  6863  08BA  0831               	movf	??__div_to_l_+3,w
  6864  08BB  1C03               	skipc
  6865  08BC  0A31               	incf	??__div_to_l_+3,w
  6866  08BD  0280               	subwf	0,f
  6867  08BE  3003               	movlw	3
  6868  08BF  0284               	subwf	4,f
  6869  08C0  1436               	bsf	__div_to_l_@quot,0
  6870  08C1                     l3556:	
  6871  08C1  3028               	movlw	low __div_to_l_@f1
  6872  08C2  0084               	movwf	4
  6873  08C3  1003               	clrc
  6874  08C4  0D80               	rlf	0,f
  6875  08C5  0A84               	incf	4,f
  6876  08C6  0D80               	rlf	0,f
  6877  08C7  0A84               	incf	4,f
  6878  08C8  0D80               	rlf	0,f
  6879  08C9  0A84               	incf	4,f
  6880  08CA  0D80               	rlf	0,f
  6881  08CB  0BBA               	decfsz	__div_to_l_@cntr,f
  6882  08CC  2881               	goto	l6400
  6883  08CD  1FBB               	btfss	__div_to_l_@exp1,7
  6884  08CE  28DC               	goto	l6418
  6885  08CF  083B               	movf	__div_to_l_@exp1,w
  6886  08D0  3A80               	xorlw	128
  6887  08D1  3E9F               	addlw	159
  6888  08D2  1C03               	btfss	3,0
  6889  08D3  284B               	goto	l6384
  6890  08D4                     l6414:	
  6891  08D4  1003               	clrc
  6892  08D5  0CB9               	rrf	__div_to_l_@quot+3,f
  6893  08D6  0CB8               	rrf	__div_to_l_@quot+2,f
  6894  08D7  0CB7               	rrf	__div_to_l_@quot+1,f
  6895  08D8  0CB6               	rrf	__div_to_l_@quot,f
  6896  08D9  0FBB               	incfsz	__div_to_l_@exp1,f
  6897  08DA  28D4               	goto	l6414
  6898  08DB  28EA               	goto	l6424
  6899  08DC                     l6418:	
  6900  08DC  3020               	movlw	32
  6901  08DD  023B               	subwf	__div_to_l_@exp1,w
  6902  08DE  1803               	btfsc	3,0
  6903  08DF  284B               	goto	l6384
  6904  08E0                     l3564:	
  6905  08E0  08BB               	movf	__div_to_l_@exp1,f
  6906  08E1  1903               	btfsc	3,2
  6907  08E2  28EA               	goto	l6424
  6908  08E3  1003               	clrc
  6909  08E4  0DB6               	rlf	__div_to_l_@quot,f
  6910  08E5  0DB7               	rlf	__div_to_l_@quot+1,f
  6911  08E6  0DB8               	rlf	__div_to_l_@quot+2,f
  6912  08E7  0DB9               	rlf	__div_to_l_@quot+3,f
  6913  08E8  03BB               	decf	__div_to_l_@exp1,f
  6914  08E9  28E0               	goto	l3564
  6915  08EA                     l6424:	
  6916  08EA  0839               	movf	__div_to_l_@quot+3,w
  6917  08EB  00AB               	movwf	?__div_to_l_+3
  6918  08EC  0838               	movf	__div_to_l_@quot+2,w
  6919  08ED  00AA               	movwf	?__div_to_l_+2
  6920  08EE  0837               	movf	__div_to_l_@quot+1,w
  6921  08EF  00A9               	movwf	?__div_to_l_+1
  6922  08F0  0836               	movf	__div_to_l_@quot,w
  6923  08F1  00A8               	movwf	?__div_to_l_
  6924  08F2  0008               	return
  6925  08F3                     __end_of__div_to_l_:	
  6926  08F3                     PL2:	
  6927  08F3  0084               	movwf	4
  6928  08F4  0800               	movf	0,w
  6929  08F5  00AE               	movwf	??__div_to_l_
  6930  08F6  0A84               	incf	4,f
  6931  08F7  0800               	movf	0,w
  6932  08F8  00AF               	movwf	??__div_to_l_+1
  6933  08F9  0A84               	incf	4,f
  6934  08FA  0800               	movf	0,w
  6935  08FB  00B0               	movwf	??__div_to_l_+2
  6936  08FC  0A84               	incf	4,f
  6937  08FD  0800               	movf	0,w
  6938  08FE  00B1               	movwf	??__div_to_l_+3
  6939  08FF  0008               	return
  6940                           
  6941                           	psect	text566
  6942  15C2                     __ptext566:	
  6943 ;; =============== function _isprint ends ============
  6944                           
  6945                           
  6946 ;; *************** function _ngat *****************
  6947 ;; Defined at:
  6948 ;;		line 57 in file "C:\Online Class\HK6\Practice_Micro\tmr0 counter\tmr0 ct.c"
  6949 ;; Parameters:    Size  Location     Type
  6950 ;;		None
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;		None
  6953 ;; Return value:  Size  Location     Type
  6954 ;;		None               void
  6955 ;; Registers used:
  6956 ;;		wreg, status,2, status,0, pclath, cstack
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 60/0
  6960 ;;		Unchanged: FFF9F/0
  6961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6962 ;;      Params:         0       0       0       0       0
  6963 ;;      Locals:         0       0       0       0       0
  6964 ;;      Temps:          0       2       0       0       0
  6965 ;;      Totals:         0       2       0       0       0
  6966 ;;Total ram usage:        2 bytes
  6967 ;; Hardware stack levels used:    1
  6968 ;; Hardware stack levels required when called:    2
  6969 ;; This function calls:
  6970 ;;		i1___ftadd
  6971 ;; This function is called by:
  6972 ;;		Interrupt level 1
  6973 ;; This function uses a non-reentrant model
  6974 ;;
  6975  15C2                     _ngat:	
  6976                           
  6977                           ;tmr0 ct.c: 58: if(T0IE&&T0IF)
  6978  15C2  1A8B               	btfsc	11,5
  6979  15C3  1D0B               	btfss	11,2
  6980  15C4  2DDA               	goto	i1l1055
  6981                           
  6982                           ;tmr0 ct.c: 59: {
  6983                           ;tmr0 ct.c: 60: dem++;
  6984  15C5  3080               	movlw	128
  6985  15C6  01F8               	clrf	?i1___ftadd
  6986  15C7  00F9               	movwf	?i1___ftadd+1
  6987  15C8  303F               	movlw	63
  6988  15C9  00FA               	movwf	?i1___ftadd+2
  6989  15CA  1683               	bsf	3,5	;RP0=1, select bank1
  6990  15CB  0844               	movf	_dem^(0+128),w
  6991  15CC  00FB               	movwf	?i1___ftadd+3
  6992  15CD  0845               	movf	(_dem+1)^(0+128),w
  6993  15CE  00FC               	movwf	?i1___ftadd+4
  6994  15CF  0846               	movf	(_dem+2)^(0+128),w
  6995  15D0  00FD               	movwf	?i1___ftadd+5
  6996  15D1  25E2               	fcall	i1___ftadd
  6997  15D2  0878               	movf	?i1___ftadd,w
  6998  15D3  1683               	bsf	3,5	;RP0=1, select bank1
  6999  15D4  00C4               	movwf	_dem^(0+128)
  7000  15D5  0879               	movf	?i1___ftadd+1,w
  7001  15D6  00C5               	movwf	(_dem+1)^(0+128)
  7002  15D7  087A               	movf	?i1___ftadd+2,w
  7003  15D8  00C6               	movwf	(_dem+2)^(0+128)
  7004                           
  7005                           ;tmr0 ct.c: 61: T0IF=0;
  7006  15D9  110B               	bcf	11,2
  7007  15DA                     i1l1055:	
  7008  15DA  1283               	bcf	3,5	;RP0=0, select bank0
  7009  15DB  0827               	movf	??_ngat+1,w
  7010  15DC  008A               	movwf	10
  7011  15DD  0E26               	swapf	??_ngat^0,w
  7012  15DE  0083               	movwf	3
  7013  15DF  0EFE               	swapf	126,f
  7014  15E0  0E7E               	swapf	126,w
  7015  15E1  0009               	retfie
  7016  15E2                     __end_of_ngat:	
  7017  15E2                     __ptext567:	
  7018 ;; =============== function _ngat ends ============
  7019                           
  7020                           
  7021 ;; *************** function i1___ftadd *****************
  7022 ;; Defined at:
  7023 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  7024 ;; Parameters:    Size  Location     Type
  7025 ;;  __ftadd         3    8[COMMON] float 
  7026 ;;  __ftadd         3   11[COMMON] float 
  7027 ;; Auto vars:     Size  Location     Type
  7028 ;;  __ftadd         1    5[BANK0 ] unsigned char 
  7029 ;;  __ftadd         1    4[BANK0 ] unsigned char 
  7030 ;;  __ftadd         1    3[BANK0 ] unsigned char 
  7031 ;; Return value:  Size  Location     Type
  7032 ;;                  3    8[COMMON] float 
  7033 ;; Registers used:
  7034 ;;		wreg, status,2, status,0, pclath, cstack
  7035 ;; Tracked objects:
  7036 ;;		On entry : 60/20
  7037 ;;		On exit  : 60/0
  7038 ;;		Unchanged: FFF9F/0
  7039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7040 ;;      Params:         6       0       0       0       0
  7041 ;;      Locals:         0       3       0       0       0
  7042 ;;      Temps:          0       3       0       0       0
  7043 ;;      Totals:         6       6       0       0       0
  7044 ;;Total ram usage:       12 bytes
  7045 ;; Hardware stack levels used:    1
  7046 ;; Hardware stack levels required when called:    1
  7047 ;; This function calls:
  7048 ;;		i1___ftpack
  7049 ;; This function is called by:
  7050 ;;		_ngat
  7051 ;; This function uses a non-reentrant model
  7052 ;;
  7053  15E2                     i1___ftadd:	
  7054                           
  7055                           ; Regs used in i1___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7056  15E2  0878               	movf	i1___ftadd@f1,w
  7057  15E3  1283               	bcf	3,5	;RP0=0, select bank0
  7058  15E4  00A0               	movwf	??i1___ftadd
  7059  15E5  0879               	movf	i1___ftadd@f1+1,w
  7060  15E6  00A1               	movwf	??i1___ftadd+1
  7061  15E7  087A               	movf	i1___ftadd@f1+2,w
  7062  15E8  00A2               	movwf	??i1___ftadd+2
  7063  15E9  1003               	clrc
  7064  15EA  0D21               	rlf	??i1___ftadd+1,w
  7065  15EB  0D22               	rlf	??i1___ftadd+2,w
  7066  15EC  00A5               	movwf	i1___ftadd@exp1
  7067  15ED  087B               	movf	i1___ftadd@f2,w
  7068  15EE  00A0               	movwf	??i1___ftadd
  7069  15EF  087C               	movf	i1___ftadd@f2+1,w
  7070  15F0  00A1               	movwf	??i1___ftadd+1
  7071  15F1  087D               	movf	i1___ftadd@f2+2,w
  7072  15F2  00A2               	movwf	??i1___ftadd+2
  7073  15F3  1003               	clrc
  7074  15F4  0D21               	rlf	??i1___ftadd+1,w
  7075  15F5  0D22               	rlf	??i1___ftadd+2,w
  7076  15F6  00A4               	movwf	i1___ftadd@exp2
  7077  15F7  0825               	movf	i1___ftadd@exp1,w
  7078  15F8  1903               	btfsc	3,2
  7079  15F9  2E06               	goto	i1l6730
  7080  15FA  0824               	movf	i1___ftadd@exp2,w
  7081  15FB  0225               	subwf	i1___ftadd@exp1,w
  7082  15FC  0824               	movf	i1___ftadd@exp2,w
  7083  15FD  1803               	skipnc
  7084  15FE  2E0E               	goto	L20
  7085  15FF  00A0               	movwf	??i1___ftadd
  7086  1600  0825               	movf	i1___ftadd@exp1,w
  7087  1601  02A0               	subwf	??i1___ftadd,f
  7088  1602  3019               	movlw	25
  7089  1603  0220               	subwf	??i1___ftadd,w
  7090  1604  1C03               	skipc
  7091  1605  2E0D               	goto	i1l6734
  7092  1606                     i1l6730:	
  7093  1606  087B               	movf	i1___ftadd@f2,w
  7094  1607  00F8               	movwf	?i1___ftadd
  7095  1608  087C               	movf	i1___ftadd@f2+1,w
  7096  1609  00F9               	movwf	?i1___ftadd+1
  7097  160A  087D               	movf	i1___ftadd@f2+2,w
  7098  160B  00FA               	movwf	?i1___ftadd+2
  7099  160C  0008               	return
  7100  160D                     i1l6734:	
  7101  160D  0824               	movf	i1___ftadd@exp2,w
  7102  160E                     L20:	
  7103  160E  1903               	btfsc	3,2
  7104  160F  0008               	return
  7105  1610  0825               	movf	i1___ftadd@exp1,w
  7106  1611  0224               	subwf	i1___ftadd@exp2,w
  7107  1612  1803               	skipnc
  7108  1613  2E1C               	goto	i1l6740
  7109  1614  0825               	movf	i1___ftadd@exp1,w
  7110  1615  00A0               	movwf	??i1___ftadd
  7111  1616  0824               	movf	i1___ftadd@exp2,w
  7112  1617  02A0               	subwf	??i1___ftadd,f
  7113  1618  3019               	movlw	25
  7114  1619  0220               	subwf	??i1___ftadd,w
  7115  161A  1803               	btfsc	3,0
  7116  161B  0008               	return
  7117  161C                     i1l6740:	
  7118  161C  3006               	movlw	6
  7119  161D  00A3               	movwf	i1___ftadd@sign
  7120  161E  1BFA               	btfsc	i1___ftadd@f1+2,7
  7121  161F  17A3               	bsf	i1___ftadd@sign,7
  7122  1620  1BFD               	btfsc	i1___ftadd@f2+2,7
  7123  1621  1723               	bsf	i1___ftadd@sign,6
  7124  1622  17F9               	bsf	i1___ftadd@f1+1,7
  7125  1623  01FA               	clrf	i1___ftadd@f1+2
  7126  1624  17FC               	bsf	i1___ftadd@f2+1,7
  7127  1625  01FD               	clrf	i1___ftadd@f2+2
  7128  1626  0824               	movf	i1___ftadd@exp2,w
  7129  1627  0225               	subwf	i1___ftadd@exp1,w
  7130  1628  1803               	skipnc
  7131  1629  2E43               	goto	i1l6762
  7132  162A                     i1l6752:	
  7133  162A  1003               	clrc
  7134  162B  0DFB               	rlf	i1___ftadd@f2,f
  7135  162C  0DFC               	rlf	i1___ftadd@f2+1,f
  7136  162D  0DFD               	rlf	i1___ftadd@f2+2,f
  7137  162E  03A4               	decf	i1___ftadd@exp2,f
  7138  162F  0824               	movf	i1___ftadd@exp2,w
  7139  1630  0625               	xorwf	i1___ftadd@exp1,w
  7140  1631  1903               	skipnz
  7141  1632  2E3E               	goto	i1l6760
  7142  1633  03A3               	decf	i1___ftadd@sign,f
  7143  1634  0823               	movf	i1___ftadd@sign,w
  7144  1635  3907               	andlw	7
  7145  1636  1903               	btfsc	3,2
  7146  1637  2E3E               	goto	i1l6760
  7147  1638  2E2A               	goto	i1l6752
  7148  1639                     i1l6758:	
  7149  1639  1003               	clrc
  7150  163A  0CFA               	rrf	i1___ftadd@f1+2,f
  7151  163B  0CF9               	rrf	i1___ftadd@f1+1,f
  7152  163C  0CF8               	rrf	i1___ftadd@f1,f
  7153  163D  0AA5               	incf	i1___ftadd@exp1,f
  7154  163E                     i1l6760:	
  7155  163E  0825               	movf	i1___ftadd@exp1,w
  7156  163F  0624               	xorwf	i1___ftadd@exp2,w
  7157  1640  1903               	btfsc	3,2
  7158  1641  2E5F               	goto	i1l3327
  7159  1642  2E39               	goto	i1l6758
  7160  1643                     i1l6762:	
  7161  1643  0825               	movf	i1___ftadd@exp1,w
  7162  1644  0224               	subwf	i1___ftadd@exp2,w
  7163  1645  1803               	skipnc
  7164  1646  2E5F               	goto	i1l3327
  7165  1647                     i1l6764:	
  7166  1647  1003               	clrc
  7167  1648  0DF8               	rlf	i1___ftadd@f1,f
  7168  1649  0DF9               	rlf	i1___ftadd@f1+1,f
  7169  164A  0DFA               	rlf	i1___ftadd@f1+2,f
  7170  164B  03A5               	decf	i1___ftadd@exp1,f
  7171  164C  0824               	movf	i1___ftadd@exp2,w
  7172  164D  0625               	xorwf	i1___ftadd@exp1,w
  7173  164E  1903               	skipnz
  7174  164F  2E5B               	goto	i1l6772
  7175  1650  03A3               	decf	i1___ftadd@sign,f
  7176  1651  0823               	movf	i1___ftadd@sign,w
  7177  1652  3907               	andlw	7
  7178  1653  1903               	btfsc	3,2
  7179  1654  2E5B               	goto	i1l6772
  7180  1655  2E47               	goto	i1l6764
  7181  1656                     i1l6770:	
  7182  1656  1003               	clrc
  7183  1657  0CFD               	rrf	i1___ftadd@f2+2,f
  7184  1658  0CFC               	rrf	i1___ftadd@f2+1,f
  7185  1659  0CFB               	rrf	i1___ftadd@f2,f
  7186  165A  0AA4               	incf	i1___ftadd@exp2,f
  7187  165B                     i1l6772:	
  7188  165B  0825               	movf	i1___ftadd@exp1,w
  7189  165C  0624               	xorwf	i1___ftadd@exp2,w
  7190  165D  1D03               	skipz
  7191  165E  2E56               	goto	i1l6770
  7192  165F                     i1l3327:	
  7193  165F  1FA3               	btfss	i1___ftadd@sign,7
  7194  1660  2E6A               	goto	i1l6778
  7195  1661  30FF               	movlw	255
  7196  1662  06F8               	xorwf	i1___ftadd@f1,f
  7197  1663  06F9               	xorwf	i1___ftadd@f1+1,f
  7198  1664  06FA               	xorwf	i1___ftadd@f1+2,f
  7199  1665  0AF8               	incf	i1___ftadd@f1,f
  7200  1666  1903               	skipnz
  7201  1667  0AF9               	incf	i1___ftadd@f1+1,f
  7202  1668  1903               	skipnz
  7203  1669  0AFA               	incf	i1___ftadd@f1+2,f
  7204  166A                     i1l6778:	
  7205  166A  1F23               	btfss	i1___ftadd@sign,6
  7206  166B  2E75               	goto	i1l6784
  7207  166C  30FF               	movlw	255
  7208  166D  06FB               	xorwf	i1___ftadd@f2,f
  7209  166E  06FC               	xorwf	i1___ftadd@f2+1,f
  7210  166F  06FD               	xorwf	i1___ftadd@f2+2,f
  7211  1670  0AFB               	incf	i1___ftadd@f2,f
  7212  1671  1903               	skipnz
  7213  1672  0AFC               	incf	i1___ftadd@f2+1,f
  7214  1673  1903               	skipnz
  7215  1674  0AFD               	incf	i1___ftadd@f2+2,f
  7216  1675                     i1l6784:	
  7217  1675  01A3               	clrf	i1___ftadd@sign
  7218  1676  0878               	movf	i1___ftadd@f1,w
  7219  1677  07FB               	addwf	i1___ftadd@f2,f
  7220  1678  0879               	movf	i1___ftadd@f1+1,w
  7221  1679  1103               	clrz
  7222  167A  1803               	skipnc
  7223  167B  0A79               	incf	i1___ftadd@f1+1,w
  7224  167C  1D03               	btfss	3,2
  7225  167D  07FC               	addwf	i1___ftadd@f2+1,f
  7226  167E  087A               	movf	i1___ftadd@f1+2,w
  7227  167F  1103               	clrz
  7228  1680  1803               	skipnc
  7229  1681  0A7A               	incf	i1___ftadd@f1+2,w
  7230  1682  1D03               	btfss	3,2
  7231  1683  07FD               	addwf	i1___ftadd@f2+2,f
  7232  1684  1FFD               	btfss	i1___ftadd@f2+2,7
  7233  1685  2E91               	goto	i1l6796
  7234  1686  30FF               	movlw	255
  7235  1687  06FB               	xorwf	i1___ftadd@f2,f
  7236  1688  06FC               	xorwf	i1___ftadd@f2+1,f
  7237  1689  06FD               	xorwf	i1___ftadd@f2+2,f
  7238  168A  0AFB               	incf	i1___ftadd@f2,f
  7239  168B  1903               	skipnz
  7240  168C  0AFC               	incf	i1___ftadd@f2+1,f
  7241  168D  1903               	skipnz
  7242  168E  0AFD               	incf	i1___ftadd@f2+2,f
  7243  168F  01A3               	clrf	i1___ftadd@sign
  7244  1690  0AA3               	incf	i1___ftadd@sign,f
  7245  1691                     i1l6796:	
  7246  1691  087B               	movf	i1___ftadd@f2,w
  7247  1692  00F0               	movwf	?i1___ftpack
  7248  1693  087C               	movf	i1___ftadd@f2+1,w
  7249  1694  00F1               	movwf	?i1___ftpack+1
  7250  1695  087D               	movf	i1___ftadd@f2+2,w
  7251  1696  00F2               	movwf	?i1___ftpack+2
  7252  1697  0825               	movf	i1___ftadd@exp1,w
  7253  1698  00F3               	movwf	?i1___ftpack+3
  7254  1699  0823               	movf	i1___ftadd@sign,w
  7255  169A  00F4               	movwf	?i1___ftpack+4
  7256  169B  26A3               	fcall	i1___ftpack
  7257  169C  0870               	movf	?i1___ftpack,w
  7258  169D  00F8               	movwf	?i1___ftadd
  7259  169E  0871               	movf	?i1___ftpack+1,w
  7260  169F  00F9               	movwf	?i1___ftadd+1
  7261  16A0  0872               	movf	?i1___ftpack+2,w
  7262  16A1  00FA               	movwf	?i1___ftadd+2
  7263  16A2  0008               	return
  7264  16A3                     __end_ofi1___ftadd:	
  7265  16A3                     __ptext568:	
  7266 ;; =============== function i1___ftadd ends ============
  7267                           
  7268                           
  7269 ;; *************** function i1___ftpack *****************
  7270 ;; Defined at:
  7271 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  7272 ;; Parameters:    Size  Location     Type
  7273 ;;  __ftpack        3    0[COMMON] unsigned um
  7274 ;;  __ftpack        1    3[COMMON] unsigned char 
  7275 ;;  __ftpack        1    4[COMMON] unsigned char 
  7276 ;; Auto vars:     Size  Location     Type
  7277 ;;		None
  7278 ;; Return value:  Size  Location     Type
  7279 ;;                  3    0[COMMON] float 
  7280 ;; Registers used:
  7281 ;;		wreg, status,2, status,0
  7282 ;; Tracked objects:
  7283 ;;		On entry : 60/0
  7284 ;;		On exit  : 60/0
  7285 ;;		Unchanged: FFF9F/0
  7286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7287 ;;      Params:         5       0       0       0       0
  7288 ;;      Locals:         0       0       0       0       0
  7289 ;;      Temps:          3       0       0       0       0
  7290 ;;      Totals:         8       0       0       0       0
  7291 ;;Total ram usage:        8 bytes
  7292 ;; Hardware stack levels used:    1
  7293 ;; This function calls:
  7294 ;;		Nothing
  7295 ;; This function is called by:
  7296 ;;		i1___ftadd
  7297 ;; This function uses a non-reentrant model
  7298 ;;
  7299  16A3                     i1___ftpack:	
  7300                           
  7301                           ; Regs used in i1___ftpack: [wreg+status,2+status,0]
  7302  16A3  0873               	movf	i1___ftpack@exp,w
  7303  16A4  1903               	btfsc	3,2
  7304  16A5  2EAB               	goto	i1l6804
  7305  16A6  0872               	movf	i1___ftpack@arg+2,w
  7306  16A7  0471               	iorwf	i1___ftpack@arg+1,w
  7307  16A8  0470               	iorwf	i1___ftpack@arg,w
  7308  16A9  1D03               	skipz
  7309  16AA  2EB4               	goto	i1l6810
  7310  16AB                     i1l6804:	
  7311  16AB  01F0               	clrf	?i1___ftpack
  7312  16AC  01F1               	clrf	?i1___ftpack+1
  7313  16AD  01F2               	clrf	?i1___ftpack+2
  7314  16AE  0008               	return
  7315  16AF                     i1l6808:	
  7316  16AF  0AF3               	incf	i1___ftpack@exp,f
  7317  16B0  1003               	clrc
  7318  16B1  0CF2               	rrf	i1___ftpack@arg+2,f
  7319  16B2  0CF1               	rrf	i1___ftpack@arg+1,f
  7320  16B3  0CF0               	rrf	i1___ftpack@arg,f
  7321  16B4                     i1l6810:	
  7322  16B4  30FE               	movlw	254
  7323  16B5  0572               	andwf	i1___ftpack@arg+2,w
  7324  16B6  1903               	btfsc	3,2
  7325  16B7  2EC3               	goto	i1l6814
  7326  16B8  2EAF               	goto	i1l6808
  7327  16B9                     i1l6812:	
  7328  16B9  0AF3               	incf	i1___ftpack@exp,f
  7329  16BA  0AF0               	incf	i1___ftpack@arg,f
  7330  16BB  1903               	skipnz
  7331  16BC  0AF1               	incf	i1___ftpack@arg+1,f
  7332  16BD  1903               	skipnz
  7333  16BE  0AF2               	incf	i1___ftpack@arg+2,f
  7334  16BF  1003               	clrc
  7335  16C0  0CF2               	rrf	i1___ftpack@arg+2,f
  7336  16C1  0CF1               	rrf	i1___ftpack@arg+1,f
  7337  16C2  0CF0               	rrf	i1___ftpack@arg,f
  7338  16C3                     i1l6814:	
  7339  16C3  30FF               	movlw	255
  7340  16C4  0572               	andwf	i1___ftpack@arg+2,w
  7341  16C5  1903               	btfsc	3,2
  7342  16C6  2ECD               	goto	i1l6818
  7343  16C7  2EB9               	goto	i1l6812
  7344  16C8                     i1l6816:	
  7345  16C8  03F3               	decf	i1___ftpack@exp,f
  7346  16C9  1003               	clrc
  7347  16CA  0DF0               	rlf	i1___ftpack@arg,f
  7348  16CB  0DF1               	rlf	i1___ftpack@arg+1,f
  7349  16CC  0DF2               	rlf	i1___ftpack@arg+2,f
  7350  16CD                     i1l6818:	
  7351  16CD  1FF1               	btfss	i1___ftpack@arg+1,7
  7352  16CE  2EC8               	goto	i1l6816
  7353  16CF  1C73               	btfss	i1___ftpack@exp,0
  7354  16D0  13F1               	bcf	i1___ftpack@arg+1,7
  7355  16D1  1003               	clrc
  7356  16D2  0CF3               	rrf	i1___ftpack@exp,f
  7357  16D3  0873               	movf	i1___ftpack@exp,w
  7358  16D4  00F7               	movwf	??i1___ftpack+2
  7359  16D5  01F6               	clrf	??i1___ftpack+1
  7360  16D6  01F5               	clrf	??i1___ftpack
  7361  16D7  0875               	movf	??i1___ftpack,w
  7362  16D8  04F0               	iorwf	i1___ftpack@arg,f
  7363  16D9  0876               	movf	??i1___ftpack+1,w
  7364  16DA  04F1               	iorwf	i1___ftpack@arg+1,f
  7365  16DB  0877               	movf	??i1___ftpack+2,w
  7366  16DC  04F2               	iorwf	i1___ftpack@arg+2,f
  7367  16DD  0874               	movf	i1___ftpack@sign,w
  7368  16DE  1D03               	skipz
  7369  16DF  17F2               	bsf	i1___ftpack@arg+2,7
  7370  16E0  0008               	return
  7371  16E1                     __end_ofi1___ftpack:	
  7372                           
  7373                           	psect	intentry
  7374  0004                     __pintentry:	
  7375                           ; Regs used in _ngat: [wreg+status,2+status,0+pclath+cstack]
  7376                           
  7377  0004                     interrupt_function:	
  7378  007E                     saved_w	set	btemp
  7379  0004  00FE               	movwf	btemp
  7380  0005  0E03               	swapf	3,w
  7381  0006  1283               	bcf	3,5	;RP0=0, select bank0
  7382  0007  1303               	bcf	3,6	;RP1=0, select bank0
  7383  0008  00A6               	movwf	??_ngat
  7384  0009  080A               	movf	10,w
  7385  000A  00A7               	movwf	??_ngat+1
  7386  000B  160A  118A  2DC2   	ljmp	_ngat
  7387                           
  7388                           	psect	text569
  7389  0000                     __ptext569:	
  7390 ;; =============== function i1___ftpack ends ============
  7391                           
  7392  007E                     btemp	set	126	;btemp
  7393  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu Apr 14 10:12:54 2022

                    pc 0002             i1___ftpack 16A3         ___bmul@product 0032           ___awdiv@sign 0033  
                   _kq 00C7                     fsr 0004    ___wmul@multiplicand 002A           ___ftadd@exp1 005D  
         ___ftadd@exp2 005C          ?_lcd_put_byte 0028           ___ftadd@sign 005B           i1___ftadd@f1 0078  
         i1___ftadd@f2 007B                    _GIE 005F                    _RD1 0041                    _RD2 0042  
                  _RD3 0043                    _RD4 0044                    _RD5 0045                    _RD6 0046  
                  _RD7 0047                    _PSA 040B                    _dem 00C4                    _tam 00D0  
                  _rpm 00CA                    fsr0 0004                    _sum 00CD                    indf 0000  
         ___awmod@sign 002D           ___ftdiv@cntr 005B           ___ftdiv@sign 0060                   l1051 0000  
                 l2111 0000                   l2122 0000                   l2114 0000                   l2202 009B  
                 l2145 0000                   l2241 0365                   l2263 0494                   l3305 0000  
                 l3253 0000                   l3430 0000                   l3263 0000                   l3327 06CB  
                 l3248 0000                   l3416 0000                   l3521 0634                   l3514 0000  
                 l3426 0000                   l3506 0000                   l3356 0C92                   l3269 0000  
                 l3445 0000                   l3349 0000                   l3383 0529                   l3391 0000  
                 l3296 0A11                   l7000 0000                   l3299 0000                   l3564 08E0  
                 l3556 08C1                   l3484 0000                   l7020 0000                   l7012 0F0E  
                 l3557 0000                   l6310 0000                   l7030 0F1F                   l7022 0000  
                 l7014 0000                   l7006 0EFD                   l7102 0B47                   l7110 0000  
                 l6312 0000                   l6400 0881                   l7040 0000                   l7024 0000  
                 l7016 0000                   l7112 0A59                   l7120 0000                   l7200 0A89  
                 l6330 04D4                   l6322 0000                   l6402 0000                   l7050 0000  
                 l7042 0F35                   l7034 0F29                   l7026 0000                   l7018 0000  
                 l7106 0B53                   l7114 0A5A                   l7130 098B                   l6324 0000  
                 l7052 0000                   l7036 0000                   l7028 0000                   l7060 0000  
                 l7116 0000                   l7108 0000                   l7124 0000                   l7204 0A90  
                 l7300 01D2                   l7220 0039                   l6318 0C3C                   l6350 0000  
                 l6342 0000                   l6334 0000                   l6414 08D4                   l6406 0000  
                 l6430 0F5D                   l6510 0F75                   l6502 0000                   l7046 0F3F  
                 l7038 0000                   l7070 0000                   l7118 0A63                   l7134 0000  
                 l7142 0000                   l7206 0000                   l7230 0000                   l7222 0000  
                 l7214 0026                   l6352 05FF                   l6344 0000                   l6336 05DD  
                 l6424 08EA                   l6416 0000                   l6408 0000                   l6520 0F93  
                 l6512 0F7A                   l6504 0000                   l7048 0000                   l7056 0000  
                 l7064 0C54                   l7080 0000                   l7072 0000                   l7160 0D8D  
                 l7400 0420                   l7320 0000                   l7312 020E                   l7232 0000  
                 l7240 0097                   l7224 0000                   l7216 0000                   l7208 0000  
                 l6370 0000                   l6362 0000                   l6354 0000                   l6346 0000  
                 l6338 05E2                   l6418 08DC                   l6450 04E0                   l6514 0F7F  
                 l6506 0F71                   l6530 0000                   l6602 0000                   l7066 0C5F  
                 l7090 0B23                   l7082 0B0B                   l7074 0000                   l7138 09DF  
                 l7154 0D48                   l7146 0000                   l7410 0445                   l7322 0000  
                 l7242 0000                   l7226 005F                   l6372 0630                   l6348 0000  
                 l6436 0000                   l6428 0000                   l6452 0000                   l6444 0000  
                 l6460 0000                   l6524 0000                   l6516 0F89                   l6540 0000  
                 l6532 04F9                   l6604 0EA2                   l6620 055A                   l6612 0000  
                 l7076 0000                   l7172 0E0E                   l7164 0DA4                   l7404 0438  
                 l7340 0000                   l7324 024F                   l7308 01FD                   l7236 0000  
                 l6358 0000                   l6382 0000                   l6438 0000                   l6454 0000  
                 l6446 04D8                   l6470 0000                   l6462 0000                   l6526 0000  
                 l6518 0F8E                   l6550 051D                   l6542 0000                   l6534 04FE  
                 l6606 0000                   l7094 0B2F                   l7086 0B17                   l7078 0000  
                 l7182 0000                   l7190 0A6C                   l7430 048B                   l7422 0477  
                 l7350 02F2                   l7342 02C0                   l7334 0292                   l7326 0000  
                 l7318 0000                   l7270 0000                   l7262 0000                   l7254 00BA  
                 l7246 009D                   l7238 006E                   l6368 0628                   l6392 0000  
                 l6384 084B                   l6464 0000                   l6480 0A1E                   l6528 0000  
                 l6560 0533                   l6552 0000                   l6544 0000                   l6536 0000  
                 l6608 0EAA                   l6632 0000                   l6640 0000                   l6712 0000  
                 l7184 0000                   l7192 0A72                   l7424 047A                   l7416 045B  
                 l7344 0000                   l7328 0290                   l7280 0000                   l7272 0000  
                 l7264 00F6                   l7256 0000                   l7248 00AE                   l7440 0000  
                 l6378 063E                   l6394 0000                   l6386 0850                   l6474 0000  
                 l6466 0A0B                   l6490 0000                   l6562 0000                   l6554 0525  
                 l6538 0000                   l6570 0000                   l6626 0000                   l6650 0000  
                 l6706 0ECC                   l6714 0EDF                   l7098 0B3B                   l7178 0E53  
                 l7194 0A79                   l7426 047E                   l7418 045E                   l7370 0330  
                 l7362 02FF                   l7274 0000                   l7266 0000                   l7258 0000  
                 l7434 0014                   l7450 0000                   l7442 0000                   l6396 0000  
                 l6492 0000                   l6484 0000                   l6564 0541                   l6580 0000  
                 l6628 057F                   l6652 0000                   l6644 04AA                   l6660 0000  
                 l6716 0000                   l7196 0A7D                   l7188 0000                   l7428 0000  
                 l7380 0388                   l7372 0345                   l7364 032C                   l7356 02E3  
                 l7348 02DF                   l7292 018D                   l7284 0153                   l7276 0000  
                 l7460 0000                   l7452 0000                   l7444 0000                   l7436 0000  
                 l6398 0000                   l6478 0000                   l6486 0000                   l6582 0E7D  
                 l6574 0000                   l6670 059C                   l6662 0000                   l6718 0EE7  
                 l6830 0000                   l6910 0000                   l7358 02F8                   l7286 0000  
                 l7278 0000                   l7390 0403                   l7470 0000                   l7462 0000  
                 l7454 16F5                   l7446 0000                   l7438 0000                   l6496 0A38  
                 l6488 0A24                   l6592 0E8B                   l6584 0000                   l6576 0E74  
                 l6568 0000                   l6648 04B9                   l6680 0000                   l6672 0000  
                 l6840 0000                   l6832 0000                   l6920 06B3                   l6904 0000  
                 l7376 0354                   l7368 0000                   l7288 0000                   l7296 019F  
                 l7472 0000                   l7464 0000                   l7456 0000                   l7448 0000  
                 l6498 0000                   l6594 0000                   l6682 05C7                   l6850 0000  
                 l6842 0B82                   l6922 0000                   l6914 06A5                   l6906 0000  
                 l7386 0000                   l7378 0000                   l7466 0000                   l7458 0000  
                 l6676 0000                   l6692 0000                   l6860 0000                   l6852 0000  
                 l6844 0B91                   l6836 0000                   l6828 0000                   l6940 06E1  
                 l6932 0000                   l6916 06AA                   l6908 0696                   l7396 040F  
                 l7388 03F5                   l7468 0000                   l6598 0000                   l6694 0EB9  
                 l6686 0000                   l6862 0000                   l6854 0BCA                   l6846 0BA1  
                 l6838 0000                   l6870 0000                   l6950 0000                   l6942 0000  
                 l6934 06D6                   l6926 06C2                   l6918 06AF                   l6688 0000  
                 l6856 0BD7                   l6848 0000                   l6872 0000                   l6864 0000  
                 l6952 06FD                   l6944 0000                   l6928 06C7                   l6880 0000  
                 l6698 0EC0                   l6858 0BE6                   l6874 0000                   l6866 0000  
                 l6938 0000                   l6890 0679                   l6882 0000                   l6970 0000  
                 l6962 0C81                   l6868 0000                   l6948 0000                   l6892 0000  
                 l6980 0000                   l6972 0000                   l6956 0000                   l6886 0672  
                 l6878 0000                   l6990 0000                   l6982 0000                   l6974 0000  
                 l6896 0688                   l6984 0000                   l6976 0000                   l6968 0000  
                 l6898 0000                   l6994 0000                   l6986 0CA5                   l6978 0000  
                 l6996 0000                   STR_1 1087                   STR_2 107C                   _T0IE 005D  
                 _T0IF 005A                   _T0CS 040D                   _T0SE 040C                   u3035 0568  
                 u3115 05AF                   u3500 0B8E                   u2525 060E                   u2615 08A5  
                 u3175 0ED2                   u3600 0BE3                   u3520 0B9E                   u4305 01DC  
                 u4250 0000                   u3620 0BF3                   u3540 0BAC                   u4335 01FB  
                 u4255 010C                   u3560 0BC7                   u3480 0B7F                   u4505 0430  
                 u4425 0339                   u3634 0BF6                   u3554 0BAF                   u4435 034F  
                 u4355 02B9                   u3580 0BD4                   u2870 0000                   u4295 01A9  
                 u4607 173A                   u4617 0AAB                   u4545 0451                   u2875 0502  
                 u4707 0C29                   u4627 0ABE                   u4555 0469                   u4395 02EC  
                 u4717 0B67                   u4637 0AD1                   u4727 0B6E                   u4647 0AE6  
                 u4495 041A                   u2985 0E94                   u4737 0BB1                   u3865 0CB3  
                 u4657 0AF5                   u4747 0BB8                   u4667 0B04                   u4757 0BF8  
                 u4677 0C10                   u4767 0BFF                   u4687 0C17                   u4697 0C22  
                 _TMR0 0001                   _main 16E1                   _ngat 15C2           ___ftpack@arg 0028  
         ___ftpack@exp 002B           lcd_busy@busy 0029                   btemp 007E                   start 000E  
    ___bmul@multiplier 0033           ___ftmul@cntr 0050           ___ftmul@sign 0051           ___fttol@exp1 0042  
         ___fttol@lval 003E         ??_lcd_put_byte 0029                  ?_main 0070                  ?_ngat 0070  
      __end_of___awdiv 0EAF        __end_of___lbdiv 0A20        __end_of___ftadd 0711        __end_of___awmod 0EEC  
      __end_of___lbmod 0A3C        __end_of___ftdiv 0CD8        __end_of___ftneg 064F                  _ANSEL 0188  
      __end_of___lldiv 05D0        __end_of___ftmul 0F5B        ___awdiv@divisor 002E        __end_of___llmod 0588  
      __end_of___ftsub 0727        __end_of___fttol 054A        ___awdiv@counter 0032         i1___ftadd@exp1 0025  
       i1___ftadd@exp2 0024                  _TRISD 0088         i1___ftadd@sign 0023           ___lltoft@exp 0034  
                _scale 0CD8        __end_of_isdigit 04D6          ___ftpack@sign 002C                  _putch 0495  
      __end_of_isprint 0C3E                  pclath 000A                  status 0003                  wtemp0 007E  
   __size_ofi1___ftadd 00C1        ___lbdiv@divisor 002D        ___lbdiv@counter 002F         i1___ftpack@arg 0070  
       i1___ftpack@exp 0073           __end_of_main 1800           __end_of_ngat 15E2            ?i1___ftpack 0070  
        lcd_gotoxy@col 002E          lcd_gotoxy@row 002D                 ??_main 00C1          ___fttol@sign1 003D  
               ??_ngat 0026   __size_of__tdiv_to_l_ 0077       ___llmod@dividend 0039                 ?_scale 0052  
     ___awdiv@dividend 0030                 ?_putch 0070       __end_of___ftpack 0FA7                 _ANSELH 0189  
     __end_of___lbtoft 0C52       __end_of___lltoft 0C70                 i1l1055 15DA                 i1l3327 165F  
               i1l6302 0000                 i1l6308 0000                 i1l6800 0000                 i1l6810 16B4  
               i1l6802 0000                 i1l6730 1606                 i1l6722 0000                 i1l6812 16B9  
               i1l6804 16AB                 i1l6740 161C                 i1l6724 0000                 i1l6822 0000  
               i1l6814 16C3                 i1l6750 0000                 i1l6742 0000                 i1l6734 160D  
               i1l6726 0000                 i1l6824 0000                 i1l6816 16C8                 i1l6808 16AF  
               i1l6760 163E                 i1l6752 162A                 i1l6736 0000                 i1l6826 0000  
               i1l6818 16CD                 i1l6770 1656                 i1l6754 0000                 i1l6762 1643  
               i1l6772 165B                 i1l6764 1647                 i1l6748 0000                 i1l6782 0000  
               i1l6766 0000                 i1l6758 1639                 i1l6792 0000                 i1l6784 1675  
               i1l6776 0000                 i1l6794 0000                 i1l6786 0000                 i1l6778 166A  
               i1l6796 1691                 i1l6788 0000                 _TRISA4 042C                 _TRISD1 0441  
               _TRISD2 0442                 _TRISD3 0443                 _TRISD4 0444                 _TRISD5 0445  
               _TRISD6 0446                 _TRISD7 0447       __end_of_lcd_busy 0C30       __end_of_lcd_init 0B5A  
     __end_of_lcd_putc 0A99                 ___bmul 0F5B                 ___ftge 049B                 ___wmul 04D6  
            ??___awdiv 0032              ??___lbdiv 002E              ??___ftadd 0058              ??___awmod 002C  
            ??___lbmod 0029              ??___ftdiv 0058              ??___ftneg 002B              ??___lldiv 0030  
            ??___ftmul 0049              ??___llmod 003D              ??___ftsub 0064              ??___fttol 003A  
               _fround 0900       ___awdiv@quotient 0034        ___awmod@divisor 0028        ___awmod@counter 002C  
               _printf 0011          lcd_put_byte@b 0028  ___ftmul@f3_as_product 004D      __end_ofi1___ftadd 16A3  
            ??_isdigit 0028                 saved_w 007E              ??_isprint 0028       ___lbdiv@dividend 002E  
  __size_ofi1___ftpack 003E        ___lbmod@divisor 0028        ___lbmod@counter 002B   __end_of_lcd_put_byte 0C05  
           ___ftadd@f1 0052             ___ftadd@f2 0055             ___ftge@ff1 0028             ___ftge@ff2 002B  
      i1___ftpack@sign 0074             ___ftdiv@f1 0055             ___ftdiv@f2 0052             ___ftdiv@f3 005C  
           ___ftneg@f1 0028             ___lbtoft@c 0033    ___bmul@multiplicand 0031             ___ftmul@f1 0043  
           ___ftmul@f2 0046             ___ftsub@f1 0061             ___ftsub@f2 005E             ___fttol@f1 0036  
       __pcstackCOMMON 0070             ___lltoft@c 0030          __end_of_scale 0E6A          __end_of_putch 049B  
     ___lbdiv@quotient 0030             __div_to_l_ 0834      lcd_gotoxy@address 002F        __div_to_l_@exp1 003B  
      __div_to_l_@cntr 003A                ??_scale 0055        __div_to_l_@quot 0036                ??_putch 0031  
           __pbssBANK1 00C4          __div_to_l_@f1 0028          __div_to_l_@f2 002B             __pmaintext 16E1  
              ?___bmul 0031                ?___ftge 0028                ?___wmul 0028             __pintentry 0004  
              ?_fround 005E              ?___ftpack 0028              ?___lbtoft 0030                ?_printf 00A0  
            ?___lltoft 0030             _lcd_gotoxy 0A52              ?_lcd_busy 0070              ?_lcd_init 0070  
            ?_lcd_putc 0070             _scale$4112 0059        __size_of___bmul 000E        __size_of___ftge 002C  
         ??i1___ftpack 0075                ___awdiv 0E6A                ___lbdiv 0A05                ___ftadd 064F  
              ___awmod 0EAF                ___lbmod 0A20                ___ftdiv 0C70                ___ftneg 0647  
              ___lldiv 0588        __size_of___wmul 0019                ___ftmul 0EEC                ___llmod 054A  
              ___ftsub 0711                ___fttol 04EF             ??___ftpack 002D             ??___lbtoft 0033  
      __size_of_fround 0105             ??___lltoft 0034        __size_of_printf 0484            ?__div_to_l_ 0028  
              _dpowers 1054                _isdigit 04C7       ___awmod@dividend 002A                _isprint 0C30  
__size_of_lcd_put_byte 00AB             ??_lcd_busy 0028             ??_lcd_init 002D             ??_lcd_putc 0030  
 end_of_initialization 07C6         lcd_put_byte@rs 002B     __end_ofi1___ftpack 16E1        ___lldiv@divisor 0028  
      ___lldiv@counter 0034                printf@c 00C0                printf@f 00B6         __tdiv_to_l_@f1 0028  
       __tdiv_to_l_@f2 002B          ??__tdiv_to_l_ 002E           _lcd_put_byte 0B5A       ___lbmod@dividend 002A  
          ?_lcd_gotoxy 002D              i1___ftadd 15E2            ___lbmod@rem 002C            printf@integ 00AD  
          ___ftdiv@exp 005F            printf@width 00B7    __size_of__div_to_l_ 00BF            ___ftmul@exp 004C  
       __end_of___bmul 0F69         __end_of___ftge 04C7         __end_of___wmul 04EF         __end_of_fround 0A05  
       __end_of_printf 0495    start_initialization 07B6    __end_of__tdiv_to_l_ 0647             ?i1___ftadd 0078  
      ___llmod@divisor 0035        ___llmod@counter 003D               ??___bmul 0032               ??___ftge 002E  
  __size_of_lcd_gotoxy 0018               ??___wmul 002C               ??_fround 0061               ??_printf 00A3  
           fround@prec 0067      __size_of___ftpack 003E      __size_of___lbtoft 000F      __size_of___lltoft 001E  
        __pcstackBANK0 0020          __pcstackBANK1 00A0           _isdigit$3669 0028      __size_of_lcd_busy 002B  
    __size_of_lcd_init 00C1      __size_of_lcd_putc 002F               ?___awdiv 002E               ?___lbdiv 002D  
             ?___ftadd 0052               ?___awmod 0028              __ptext540 0900              __ptext541 0A52  
            __ptext550 0EAF              __ptext542 0A99              __ptext551 0588              __ptext543 0C52  
            __ptext535 0011              __ptext560 04D6              __ptext552 049B              __ptext544 0C43  
            __ptext536 0495              __ptext561 0F5B              __ptext553 0647              __ptext545 0EEC  
            __ptext537 0A6A              __ptext562 0834              __ptext554 054A              __ptext546 0C70  
            __ptext538 0711              __ptext563 05D0              __ptext555 0E6A              __ptext547 064F  
            __ptext539 0CD8               ?___lbmod 0028              __ptext564 04C7              __ptext556 04EF  
            __ptext548 0C05              __ptext565 0C30              __ptext557 0F69              __ptext549 0B5A  
            __ptext566 15C2              __ptext558 0A20              __ptext567 15E2              __ptext559 0A05  
            __ptext568 16A3              __ptext569 0000               ?___ftdiv 0052               ?___ftneg 0028  
             ?___lldiv 0028               ?___ftmul 0043               ?___llmod 0035               ?___ftsub 005E  
            __npowers_ 1006               ?___fttol 0036              __pstrings 1000            __tdiv_to_l_ 05D0  
         ??__div_to_l_ 002E               ?_isdigit 0070               ?_isprint 0070            ??i1___ftadd 0020  
       __size_of_scale 0192         __size_of_putch 0006      interrupt_function 0004         ___wmul@product 002C  
   __end_of__div_to_l_ 08F3            __stringbase 1005      ___wmul@multiplier 0028             printf@_val 00B0  
           printf@flag 00B4             printf@fval 00BB             printf@prec 00BE              lcd_putc@c 0030  
         ??_lcd_gotoxy 002E       lcd_put_byte@temp 002C             putch@ki_tu 0031           _isprint$3672 0028  
   __end_of_lcd_gotoxy 0A6A       __size_of___awdiv 0045       __size_of___lbdiv 001B       __size_of___ftadd 00C2  
     __size_of___awmod 003D       __size_of___lbmod 001C       __size_of___ftdiv 0068       __size_of___ftneg 0008  
     __size_of___lldiv 0048       __size_of___ftmul 006F       __size_of___llmod 003E       __size_of___ftsub 0016  
     __size_of___fttol 005B               ___ftpack 0F69               ___lbtoft 0C43            _fround$4110 0064  
          _fround$4111 0061               ___lltoft 0C52       __size_of_isdigit 000F       __size_of_isprint 000E  
             __powers_ 102D               _lcd_busy 0C05               _lcd_init 0A99               _lcd_putc 0A6A  
        __size_of_main 011F          __size_of_ngat 0020              printf@exp 00B9               isdigit@c 0029  
             scale@scl 005C               intlevel1 0000       __tdiv_to_l_@exp1 0036       __tdiv_to_l_@cntr 0035  
     __tdiv_to_l_@quot 0031       ___lldiv@dividend 002C               isprint@c 0029              stringcode 1000  
             printf@ap 00AC           ?__tdiv_to_l_ 0028            _printf$3161 00A8       ___lldiv@quotient 0030  
             stringdir 1000               stringtab 1000  
