

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Thu May 05 07:29:52 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,delta=2
    12                           	psect	text519,local,class=CODE,delta=2
    13                           	psect	text524,local,class=CODE,delta=2
    14                           	psect	text525,local,class=CODE,delta=2
    15                           	psect	text529,local,class=CODE,delta=2
    16                           	psect	text530,local,class=CODE,delta=2
    17                           	psect	text545,local,class=CODE,delta=2
    18                           	psect	text549,local,class=CODE,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text550,local,class=CODE,delta=2
    21                           	psect	pa_nodes,global,class=CODE,delta=2
    22                           	dabs	1,0x7E,2
    23  000A                     	;#
    24                           
    25                           	psect	config
    26  2007  E3E2               	dw	58338	;#
    27                           
    28                           	psect	strings
    29  1000                     __pstrings:	
    30  1000                     stringtab:	
    31                           ;	global	stringdir,stringtab,__stringbase
    32                           
    33  1000                     stringcode:	
    34                           ;	String table - string pointers are 1 byte each
    35                           
    36  1000                     stringdir:	
    37  1000  3010               	movlw	high stringdir
    38  1001  008A               	movwf	10
    39  1002  0804               	movf	4,w
    40  1003  0A84               	incf	4,f
    41  1004  0782               	addwf	2,f
    42  1005                     __stringbase:	
    43  1005  3400               	retlw	0
    44  1006                     __npowers_:	
    45  1006  3400               	retlw	0
    46  1007  3480               	retlw	128
    47  1008  343F               	retlw	63
    48  1009  34CD               	retlw	205
    49  100A  34CC               	retlw	204
    50  100B  343D               	retlw	61
    51  100C  34D7               	retlw	215
    52  100D  3423               	retlw	35
    53  100E  343C               	retlw	60
    54  100F  3412               	retlw	18
    55  1010  3483               	retlw	131
    56  1011  343A               	retlw	58
    57  1012  34B7               	retlw	183
    58  1013  34D1               	retlw	209
    59  1014  3438               	retlw	56
    60  1015  34C6               	retlw	198
    61  1016  3427               	retlw	39
    62  1017  3437               	retlw	55
    63  1018  3438               	retlw	56
    64  1019  3486               	retlw	134
    65  101A  3435               	retlw	53
    66  101B  34C0               	retlw	192
    67  101C  34D6               	retlw	214
    68  101D  3433               	retlw	51
    69  101E  34CC               	retlw	204
    70  101F  342B               	retlw	43
    71  1020  3432               	retlw	50
    72  1021  3470               	retlw	112
    73  1022  3489               	retlw	137
    74  1023  3430               	retlw	48
    75  1024  34E7               	retlw	231
    76  1025  34DB               	retlw	219
    77  1026  342E               	retlw	46
    78  1027  34E5               	retlw	229
    79  1028  343C               	retlw	60
    80  1029  341E               	retlw	30
    81  102A  3442               	retlw	66
    82  102B  34A2               	retlw	162
    83  102C  340D               	retlw	13
    84  102D                     __powers_:	
    85  102D  3400               	retlw	0
    86  102E  3480               	retlw	128
    87  102F  343F               	retlw	63
    88  1030  3400               	retlw	0
    89  1031  3420               	retlw	32
    90  1032  3441               	retlw	65
    91  1033  3400               	retlw	0
    92  1034  34C8               	retlw	200
    93  1035  3442               	retlw	66
    94  1036  3400               	retlw	0
    95  1037  347A               	retlw	122
    96  1038  3444               	retlw	68
    97  1039  3440               	retlw	64
    98  103A  341C               	retlw	28
    99  103B  3446               	retlw	70
   100  103C  3450               	retlw	80
   101  103D  34C3               	retlw	195
   102  103E  3447               	retlw	71
   103  103F  3424               	retlw	36
   104  1040  3474               	retlw	116
   105  1041  3449               	retlw	73
   106  1042  3497               	retlw	151
   107  1043  3418               	retlw	24
   108  1044  344B               	retlw	75
   109  1045  34BC               	retlw	188
   110  1046  34BE               	retlw	190
   111  1047  344C               	retlw	76
   112  1048  346B               	retlw	107
   113  1049  346E               	retlw	110
   114  104A  344E               	retlw	78
   115  104B  3403               	retlw	3
   116  104C  3415               	retlw	21
   117  104D  3450               	retlw	80
   118  104E  3479               	retlw	121
   119  104F  34AD               	retlw	173
   120  1050  3460               	retlw	96
   121  1051  34F3               	retlw	243
   122  1052  3449               	retlw	73
   123  1053  3471               	retlw	113
   124  1054                     _dpowers:	
   125  1054  3401               	retlw	1
   126  1055  3400               	retlw	0
   127  1056  3400               	retlw	0
   128  1057  3400               	retlw	0
   129  1058  340A               	retlw	10
   130  1059  3400               	retlw	0
   131  105A  3400               	retlw	0
   132  105B  3400               	retlw	0
   133  105C  3464               	retlw	100
   134  105D  3400               	retlw	0
   135  105E  3400               	retlw	0
   136  105F  3400               	retlw	0
   137  1060  34E8               	retlw	232
   138  1061  3403               	retlw	3
   139  1062  3400               	retlw	0
   140  1063  3400               	retlw	0
   141  1064  3410               	retlw	16
   142  1065  3427               	retlw	39
   143  1066  3400               	retlw	0
   144  1067  3400               	retlw	0
   145  1068  34A0               	retlw	160
   146  1069  3486               	retlw	134
   147  106A  3401               	retlw	1
   148  106B  3400               	retlw	0
   149  106C  3440               	retlw	64
   150  106D  3442               	retlw	66
   151  106E  340F               	retlw	15
   152  106F  3400               	retlw	0
   153  1070  3480               	retlw	128
   154  1071  3496               	retlw	150
   155  1072  3498               	retlw	152
   156  1073  3400               	retlw	0
   157  1074  3400               	retlw	0
   158  1075  34E1               	retlw	225
   159  1076  34F5               	retlw	245
   160  1077  3405               	retlw	5
   161  1078  3400               	retlw	0
   162  1079  34CA               	retlw	202
   163  107A  349A               	retlw	154
   164  107B  343B               	retlw	59
   165  0015                     _CCPR1	set	21
   166  0016                     _CCPR1H	set	22
   167  0015                     _CCPR1L	set	21
   168  000F                     _TMR1H	set	15
   169  000E                     _TMR1L	set	14
   170  0062                     _CCP1IF	set	98
   171  00B8                     _CCP1M0	set	184
   172  00B9                     _CCP1M1	set	185
   173  00BA                     _CCP1M2	set	186
   174  00BB                     _CCP1M3	set	187
   175  005F                     _GIE	set	95
   176  005E                     _PEIE	set	94
   177  0041                     _RD1	set	65
   178  0042                     _RD2	set	66
   179  0043                     _RD3	set	67
   180  0044                     _RD4	set	68
   181  0045                     _RD5	set	69
   182  0046                     _RD6	set	70
   183  0047                     _RD7	set	71
   184  0084                     _T1CKPS0	set	132
   185  0085                     _T1CKPS1	set	133
   186  0082                     _T1SYNC	set	130
   187  0081                     _TMR1CS	set	129
   188  0086                     _TMR1GE	set	134
   189  0080                     _TMR1ON	set	128
   190  0088                     _TRISD	set	136
   191  0462                     _CCP1IE	set	1122
   192  043A                     _TRISC2	set	1082
   193  0441                     _TRISD1	set	1089
   194  0442                     _TRISD2	set	1090
   195  0443                     _TRISD3	set	1091
   196  0444                     _TRISD4	set	1092
   197  0445                     _TRISD5	set	1093
   198  0446                     _TRISD6	set	1094
   199  0447                     _TRISD7	set	1095
   200  0188                     _ANSEL	set	392
   201  0189                     _ANSELH	set	393
   202  107C                     STR_1:	
   203  107C  3466               	retlw	102	;'f'
   204  107D  3472               	retlw	114	;'r'
   205  107E  3465               	retlw	101	;'e'
   206  107F  343A               	retlw	58	;':'
   207  1080  3420               	retlw	32	;' '
   208  1081  3425               	retlw	37	;'%'
   209  1082  3436               	retlw	54	;'6'
   210  1083  342E               	retlw	46	;'.'
   211  1084  3431               	retlw	49	;'1'
   212  1085  3466               	retlw	102	;'f'
   213  1086  3400               	retlw	0
   214  1087                     STR_2:	
   215  1087  3425               	retlw	37	;'%'
   216  1088  3436               	retlw	54	;'6'
   217  1089  3475               	retlw	117	;'u'
   218  108A  3400               	retlw	0
   219                           
   220                           	psect	cinit
   221  07BA                     start_initialization:	
   222                           
   223                           ; Clear objects allocated to BANK0
   224  07BA  01DF               	clrf	__pbssBANK0& (0+127)
   225  07BB  01E0               	clrf	(__pbssBANK0+1)& (0+127)
   226  07BC  01E1               	clrf	(__pbssBANK0+2)& (0+127)
   227  07BD  01E2               	clrf	(__pbssBANK0+3)& (0+127)
   228  07BE  01E3               	clrf	(__pbssBANK0+4)& (0+127)
   229  07BF  01E4               	clrf	(__pbssBANK0+5)& (0+127)
   230  07C0  01E5               	clrf	(__pbssBANK0+6)& (0+127)
   231  07C1  01E6               	clrf	(__pbssBANK0+7)& (0+127)
   232  07C2  01E7               	clrf	(__pbssBANK0+8)& (0+127)
   233  07C3  01E8               	clrf	(__pbssBANK0+9)& (0+127)
   234  07C4  01E9               	clrf	(__pbssBANK0+10)& (0+127)
   235  07C5                     end_of_initialization:	
   236                           ;End of C runtime variable initialization code
   237                           
   238  07C5  0183               	clrf	3
   239  07C6  120A  158A  2805   	ljmp	_main	;jump to C main() function
   240                           
   241                           	psect	bssBANK0
   242  005F                     __pbssBANK0:	
   243  005F                     _ccp_old:	
   244  005F                     	ds	4
   245  0063                     _fre:	
   246  0063                     	ds	3
   247  0066                     _dem:	
   248  0066                     	ds	4
   249                           
   250                           	psect	cstackBANK1
   251  00A0                     __pcstackBANK1:	
   252  00A0                     _printf$3152:	
   253                           
   254                           ; 4 bytes @ 0x0
   255  00A0                     	ds	4
   256  00A4                     printf@ap:	
   257                           
   258                           ; 1 bytes @ 0x4
   259  00A4                     	ds	1
   260  00A5                     printf@integ:	
   261                           
   262                           ; 3 bytes @ 0x5
   263  00A5                     	ds	3
   264  00A8                     printf@flag:	
   265                           
   266                           ; 2 bytes @ 0x8
   267  00A8                     	ds	2
   268  00AA                     printf@f:	
   269                           
   270                           ; 1 bytes @ 0xA
   271  00AA                     	ds	1
   272  00AB                     printf@_val:	
   273                           
   274                           ; 4 bytes @ 0xB
   275  00AB                     	ds	4
   276  00AF                     printf@width:	
   277                           
   278                           ; 2 bytes @ 0xF
   279  00AF                     	ds	2
   280  00B1                     printf@exp:	
   281                           
   282                           ; 2 bytes @ 0x11
   283  00B1                     	ds	2
   284  00B3                     printf@fval:	
   285                           
   286                           ; 3 bytes @ 0x13
   287  00B3                     	ds	3
   288  00B6                     printf@prec:	
   289                           
   290                           ; 2 bytes @ 0x16
   291  00B6                     	ds	2
   292  00B8                     printf@c:	
   293                           
   294                           ; 1 bytes @ 0x18
   295  00B8                     	ds	1
   296                           
   297                           	psect	cstackCOMMON
   298  0070                     __pcstackCOMMON:	
   299  0070                     ?_isprint:	
   300  0070                     ?_isdigit:	
   301                           ; 1 bit 
   302                           
   303  0070                     ?_lcd_init:	
   304                           ; 1 bit 
   305                           
   306  0070                     ?_lcd_putc:	
   307                           ; 0 bytes @ 0x0
   308                           
   309  0070                     ?_putch:	
   310                           ; 0 bytes @ 0x0
   311                           
   312  0070                     ?_ngat:	
   313                           ; 0 bytes @ 0x0
   314                           
   315  0070                     ??_ngat:	
   316                           ; 0 bytes @ 0x0
   317                           
   318  0070                     ?_lcd_busy:	
   319                           ; 0 bytes @ 0x0
   320                           
   321  0070                     ?_main:	
   322                           ; 1 bytes @ 0x0
   323                           
   324                           
   325                           ; 2 bytes @ 0x0
   326  0070                     	ds	2
   327  0072                     ?_lcd_put_byte:	
   328  0072                     ??_lcd_busy:	
   329                           ; 0 bytes @ 0x2
   330                           
   331  0072                     ??_isprint:	
   332                           ; 0 bytes @ 0x2
   333                           
   334  0072                     ??_isdigit:	
   335                           ; 0 bytes @ 0x2
   336                           
   337  0072                     ?___ftge:	
   338                           ; 0 bytes @ 0x2
   339                           
   340  0072                     ?___lbmod:	
   341                           ; 1 bit 
   342                           
   343  0072                     ?___wmul:	
   344                           ; 1 bytes @ 0x2
   345                           
   346  0072                     ?___awmod:	
   347                           ; 2 bytes @ 0x2
   348                           
   349  0072                     ?___ftpack:	
   350                           ; 2 bytes @ 0x2
   351                           
   352  0072                     ?___ftneg:	
   353                           ; 3 bytes @ 0x2
   354                           
   355  0072                     ?__tdiv_to_l_:	
   356                           ; 3 bytes @ 0x2
   357                           
   358  0072                     ?__div_to_l_:	
   359                           ; 4 bytes @ 0x2
   360                           
   361  0072                     ?___lldiv:	
   362                           ; 4 bytes @ 0x2
   363                           
   364  0072                     lcd_put_byte@b:	
   365                           ; 4 bytes @ 0x2
   366                           
   367  0072                     _isdigit$3660:	
   368                           ; 1 bytes @ 0x2
   369                           
   370  0072                     _isprint$3663:	
   371                           ; 1 bytes @ 0x2
   372                           
   373  0072                     ___lbmod@divisor:	
   374                           ; 1 bytes @ 0x2
   375                           
   376  0072                     ___wmul@multiplier:	
   377                           ; 1 bytes @ 0x2
   378                           
   379  0072                     ___awmod@divisor:	
   380                           ; 2 bytes @ 0x2
   381                           
   382  0072                     ___ftneg@f1:	
   383                           ; 2 bytes @ 0x2
   384                           
   385  0072                     ___ftge@ff1:	
   386                           ; 3 bytes @ 0x2
   387                           
   388  0072                     __tdiv_to_l_@f1:	
   389                           ; 3 bytes @ 0x2
   390                           
   391  0072                     __div_to_l_@f1:	
   392                           ; 3 bytes @ 0x2
   393                           
   394  0072                     ___ftpack@arg:	
   395                           ; 3 bytes @ 0x2
   396                           
   397  0072                     ___lldiv@divisor:	
   398                           ; 3 bytes @ 0x2
   399                           
   400                           
   401                           ; 4 bytes @ 0x2
   402  0072                     	ds	1
   403  0073                     ??_lcd_put_byte:	
   404  0073                     ??___lbmod:	
   405                           ; 0 bytes @ 0x3
   406                           
   407  0073                     lcd_busy@busy:	
   408                           ; 0 bytes @ 0x3
   409                           
   410  0073                     isdigit@c:	
   411                           ; 1 bytes @ 0x3
   412                           
   413  0073                     isprint@c:	
   414                           ; 1 bytes @ 0x3
   415                           
   416                           
   417                           ; 1 bytes @ 0x3
   418  0073                     	ds	1
   419  0074                     ___lbmod@dividend:	
   420  0074                     ___wmul@multiplicand:	
   421                           ; 1 bytes @ 0x4
   422                           
   423  0074                     ___awmod@dividend:	
   424                           ; 2 bytes @ 0x4
   425                           
   426                           
   427                           ; 2 bytes @ 0x4
   428  0074                     	ds	1
   429  0075                     ??___ftneg:	
   430  0075                     lcd_put_byte@rs:	
   431                           ; 0 bytes @ 0x5
   432                           
   433  0075                     ___lbmod@counter:	
   434                           ; 1 bytes @ 0x5
   435                           
   436  0075                     ___ftpack@exp:	
   437                           ; 1 bytes @ 0x5
   438                           
   439  0075                     ___ftge@ff2:	
   440                           ; 1 bytes @ 0x5
   441                           
   442  0075                     __tdiv_to_l_@f2:	
   443                           ; 3 bytes @ 0x5
   444                           
   445  0075                     __div_to_l_@f2:	
   446                           ; 3 bytes @ 0x5
   447                           
   448                           
   449                           ; 3 bytes @ 0x5
   450  0075                     	ds	1
   451  0076                     ??___wmul:	
   452  0076                     ??___awmod:	
   453                           ; 0 bytes @ 0x6
   454                           
   455  0076                     lcd_put_byte@temp:	
   456                           ; 0 bytes @ 0x6
   457                           
   458  0076                     ___lbmod@rem:	
   459                           ; 1 bytes @ 0x6
   460                           
   461  0076                     ___awmod@counter:	
   462                           ; 1 bytes @ 0x6
   463                           
   464  0076                     ___ftpack@sign:	
   465                           ; 1 bytes @ 0x6
   466                           
   467  0076                     ___wmul@product:	
   468                           ; 1 bytes @ 0x6
   469                           
   470  0076                     ___lldiv@dividend:	
   471                           ; 2 bytes @ 0x6
   472                           
   473                           
   474                           ; 4 bytes @ 0x6
   475  0076                     	ds	1
   476  0077                     ?_lcd_gotoxy:	
   477  0077                     ??___ftpack:	
   478                           ; 0 bytes @ 0x7
   479                           
   480  0077                     ??_lcd_init:	
   481                           ; 0 bytes @ 0x7
   482                           
   483  0077                     ?___lbdiv:	
   484                           ; 0 bytes @ 0x7
   485                           
   486  0077                     lcd_gotoxy@row:	
   487                           ; 1 bytes @ 0x7
   488                           
   489  0077                     ___lbdiv@divisor:	
   490                           ; 1 bytes @ 0x7
   491                           
   492  0077                     ___awmod@sign:	
   493                           ; 1 bytes @ 0x7
   494                           
   495                           
   496                           ; 1 bytes @ 0x7
   497  0077                     	ds	1
   498  0078                     ??_lcd_gotoxy:	
   499  0078                     ??__tdiv_to_l_:	
   500                           ; 0 bytes @ 0x8
   501                           
   502  0078                     ??___lbdiv:	
   503                           ; 0 bytes @ 0x8
   504                           
   505  0078                     ??___ftge:	
   506                           ; 0 bytes @ 0x8
   507                           
   508  0078                     ?___awdiv:	
   509                           ; 0 bytes @ 0x8
   510                           
   511  0078                     lcd_gotoxy@col:	
   512                           ; 2 bytes @ 0x8
   513                           
   514  0078                     ___lbdiv@dividend:	
   515                           ; 1 bytes @ 0x8
   516                           
   517  0078                     ___awdiv@divisor:	
   518                           ; 1 bytes @ 0x8
   519                           
   520                           
   521                           ; 2 bytes @ 0x8
   522  0078                     	ds	1
   523  0079                     lcd_gotoxy@address:	
   524  0079                     ___lbdiv@counter:	
   525                           ; 1 bytes @ 0x9
   526                           
   527                           
   528                           ; 1 bytes @ 0x9
   529  0079                     	ds	1
   530  007A                     ??_lcd_putc:	
   531  007A                     ??___llmod:	
   532                           ; 0 bytes @ 0xA
   533                           
   534  007A                     ??___lldiv:	
   535                           ; 0 bytes @ 0xA
   536                           
   537  007A                     ??___lltoft:	
   538                           ; 0 bytes @ 0xA
   539                           
   540  007A                     lcd_putc@c:	
   541                           ; 0 bytes @ 0xA
   542                           
   543  007A                     ___lbdiv@quotient:	
   544                           ; 1 bytes @ 0xA
   545                           
   546  007A                     ___llmod@counter:	
   547                           ; 1 bytes @ 0xA
   548                           
   549  007A                     ___lltoft@exp:	
   550                           ; 1 bytes @ 0xA
   551                           
   552  007A                     ___awdiv@dividend:	
   553                           ; 1 bytes @ 0xA
   554                           
   555                           
   556                           ; 2 bytes @ 0xA
   557  007A                     	ds	1
   558  007B                     ??_putch:	
   559  007B                     ?___bmul:	
   560                           ; 0 bytes @ 0xB
   561                           
   562  007B                     putch@c:	
   563                           ; 1 bytes @ 0xB
   564                           
   565  007B                     ___bmul@multiplicand:	
   566                           ; 1 bytes @ 0xB
   567                           
   568                           
   569                           ; 1 bytes @ 0xB
   570  007B                     	ds	1
   571  007C                     ??_main:	
   572  007C                     ??_fround:	
   573                           ; 0 bytes @ 0xC
   574                           
   575  007C                     ??___bmul:	
   576                           ; 0 bytes @ 0xC
   577                           
   578  007C                     ??___ftsub:	
   579                           ; 0 bytes @ 0xC
   580                           
   581  007C                     ??___awdiv:	
   582                           ; 0 bytes @ 0xC
   583                           
   584                           
   585                           	psect	cstackBANK0
   586  0020                     __pcstackBANK0:	
   587                           ; 0 bytes @ 0xC
   588                           
   589  0020                     ??__div_to_l_:	
   590  0020                     ?___lltoft:	
   591                           ; 0 bytes @ 0x0
   592                           
   593  0020                     ___bmul@product:	
   594                           ; 3 bytes @ 0x0
   595                           
   596  0020                     ___awdiv@counter:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0020                     ___lldiv@quotient:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0020                     ___lltoft@c:	
   603                           ; 4 bytes @ 0x0
   604                           
   605  0020                     __tdiv_to_l_@quot:	
   606                           ; 4 bytes @ 0x0
   607                           
   608                           
   609                           ; 4 bytes @ 0x0
   610  0020                     	ds	1
   611  0021                     ___bmul@multiplier:	
   612  0021                     ___awdiv@sign:	
   613                           ; 1 bytes @ 0x1
   614                           
   615                           
   616                           ; 1 bytes @ 0x1
   617  0021                     	ds	1
   618  0022                     ___awdiv@quotient:	
   619                           
   620                           ; 2 bytes @ 0x2
   621  0022                     	ds	2
   622  0024                     ?___ftdiv:	
   623  0024                     ?___fttol:	
   624                           ; 3 bytes @ 0x4
   625                           
   626  0024                     ___lldiv@counter:	
   627                           ; 4 bytes @ 0x4
   628                           
   629  0024                     __tdiv_to_l_@cntr:	
   630                           ; 1 bytes @ 0x4
   631                           
   632  0024                     ___ftdiv@f2:	
   633                           ; 1 bytes @ 0x4
   634                           
   635  0024                     ___fttol@f1:	
   636                           ; 3 bytes @ 0x4
   637                           
   638                           
   639                           ; 3 bytes @ 0x4
   640  0024                     	ds	1
   641  0025                     ?___llmod:	
   642  0025                     __tdiv_to_l_@exp1:	
   643                           ; 4 bytes @ 0x5
   644                           
   645  0025                     ___llmod@divisor:	
   646                           ; 1 bytes @ 0x5
   647                           
   648                           
   649                           ; 4 bytes @ 0x5
   650  0025                     	ds	2
   651  0027                     ___ftdiv@f1:	
   652                           
   653                           ; 3 bytes @ 0x7
   654  0027                     	ds	1
   655  0028                     ??___fttol:	
   656  0028                     __div_to_l_@quot:	
   657                           ; 0 bytes @ 0x8
   658                           
   659                           
   660                           ; 4 bytes @ 0x8
   661  0028                     	ds	1
   662  0029                     ___llmod@dividend:	
   663                           
   664                           ; 4 bytes @ 0x9
   665  0029                     	ds	1
   666  002A                     ??___ftdiv:	
   667                           
   668                           ; 0 bytes @ 0xA
   669  002A                     	ds	1
   670  002B                     ___fttol@sign1:	
   671                           
   672                           ; 1 bytes @ 0xB
   673  002B                     	ds	1
   674  002C                     __div_to_l_@cntr:	
   675  002C                     ___fttol@lval:	
   676                           ; 1 bytes @ 0xC
   677                           
   678                           
   679                           ; 4 bytes @ 0xC
   680  002C                     	ds	1
   681  002D                     ___ftdiv@cntr:	
   682  002D                     __div_to_l_@exp1:	
   683                           ; 1 bytes @ 0xD
   684                           
   685                           
   686                           ; 1 bytes @ 0xD
   687  002D                     	ds	1
   688  002E                     ___ftdiv@f3:	
   689                           
   690                           ; 3 bytes @ 0xE
   691  002E                     	ds	2
   692  0030                     ___fttol@exp1:	
   693                           
   694                           ; 1 bytes @ 0x10
   695  0030                     	ds	1
   696  0031                     ?___ftmul:	
   697  0031                     ___ftdiv@exp:	
   698                           ; 3 bytes @ 0x11
   699                           
   700  0031                     ___ftmul@f1:	
   701                           ; 1 bytes @ 0x11
   702                           
   703                           
   704                           ; 3 bytes @ 0x11
   705  0031                     	ds	1
   706  0032                     ___ftdiv@sign:	
   707                           
   708                           ; 1 bytes @ 0x12
   709  0032                     	ds	2
   710  0034                     ___ftmul@f2:	
   711                           
   712                           ; 3 bytes @ 0x14
   713  0034                     	ds	3
   714  0037                     ??___ftmul:	
   715                           
   716                           ; 0 bytes @ 0x17
   717  0037                     	ds	3
   718  003A                     ___ftmul@exp:	
   719                           
   720                           ; 1 bytes @ 0x1A
   721  003A                     	ds	1
   722  003B                     ___ftmul@f3_as_product:	
   723                           
   724                           ; 3 bytes @ 0x1B
   725  003B                     	ds	3
   726  003E                     ___ftmul@cntr:	
   727                           
   728                           ; 1 bytes @ 0x1E
   729  003E                     	ds	1
   730  003F                     ___ftmul@sign:	
   731                           
   732                           ; 1 bytes @ 0x1F
   733  003F                     	ds	1
   734  0040                     ?_scale:	
   735  0040                     ?___ftadd:	
   736                           ; 3 bytes @ 0x20
   737                           
   738  0040                     ___ftadd@f1:	
   739                           ; 3 bytes @ 0x20
   740                           
   741                           
   742                           ; 3 bytes @ 0x20
   743  0040                     	ds	3
   744  0043                     ??_scale:	
   745  0043                     ___ftadd@f2:	
   746                           ; 0 bytes @ 0x23
   747                           
   748                           
   749                           ; 3 bytes @ 0x23
   750  0043                     	ds	3
   751  0046                     ??___ftadd:	
   752                           
   753                           ; 0 bytes @ 0x26
   754  0046                     	ds	1
   755  0047                     _scale$4104:	
   756                           
   757                           ; 3 bytes @ 0x27
   758  0047                     	ds	2
   759  0049                     ___ftadd@sign:	
   760                           
   761                           ; 1 bytes @ 0x29
   762  0049                     	ds	1
   763  004A                     scale@scl:	
   764  004A                     ___ftadd@exp2:	
   765                           ; 1 bytes @ 0x2A
   766                           
   767                           
   768                           ; 1 bytes @ 0x2A
   769  004A                     	ds	1
   770  004B                     ___ftadd@exp1:	
   771                           
   772                           ; 1 bytes @ 0x2B
   773  004B                     	ds	1
   774  004C                     ?_fround:	
   775  004C                     ?___ftsub:	
   776                           ; 3 bytes @ 0x2C
   777                           
   778  004C                     ___ftsub@f2:	
   779                           ; 3 bytes @ 0x2C
   780                           
   781                           
   782                           ; 3 bytes @ 0x2C
   783  004C                     	ds	3
   784  004F                     ___ftsub@f1:	
   785  004F                     _fround$4103:	
   786                           ; 3 bytes @ 0x2F
   787                           
   788                           
   789                           ; 3 bytes @ 0x2F
   790  004F                     	ds	3
   791  0052                     _fround$4102:	
   792                           
   793                           ; 3 bytes @ 0x32
   794  0052                     	ds	3
   795  0055                     fround@prec:	
   796                           
   797                           ; 1 bytes @ 0x35
   798  0055                     	ds	1
   799  0056                     ?_printf:	
   800                           
   801                           ; 2 bytes @ 0x36
   802  0056                     	ds	4
   803  005A                     ??_printf:	
   804                           
   805                           ; 0 bytes @ 0x3A
   806  005A                     	ds	5
   807                           
   808                           	psect	maintext
   809  0805                     __pmaintext:	
   810 ;;Data sizes: Strings 15, constant 118, data 0, bss 11, persistent 0 stack 0
   811 ;;Auto spaces:   Size  Autos    Used
   812 ;; COMMON          14     12      12
   813 ;; BANK0           80     63      74
   814 ;; BANK1           80     25      25
   815 ;; BANK3           96      0       0
   816 ;; BANK2           96      0       0
   817 ;;
   818 ;; Pointer list with targets:
   819 ;; ?___ftpack	float  size(1) Largest target is 4
   820 ;;		 -> dem(BANK0[4]), 
   821 ;;
   822 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   823 ;;
   824 ;; ?___llmod	unsigned long  size(1) Largest target is 4
   825 ;;		 -> dem(BANK0[4]), 
   826 ;;
   827 ;; ?___ftsub	float  size(1) Largest target is 0
   828 ;;
   829 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
   830 ;;
   831 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
   832 ;;
   833 ;; ?___fttol	long  size(1) Largest target is 4
   834 ;;		 -> dem(BANK0[4]), 
   835 ;;
   836 ;; ?___ftadd	float  size(1) Largest target is 4
   837 ;;		 -> dem(BANK0[4]), 
   838 ;;
   839 ;; ?___ftneg	float  size(1) Largest target is 4
   840 ;;		 -> dem(BANK0[4]), 
   841 ;;
   842 ;; ?___awmod	int  size(2) Largest target is 40
   843 ;;		 -> dpowers(CODE[40]), dem(BANK0[4]), 
   844 ;;
   845 ;; ?___awdiv	int  size(1) Largest target is 0
   846 ;;
   847 ;; ?_scale	int  size(1) Largest target is 0
   848 ;;
   849 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   850 ;;
   851 ;; ?_fround	unsigned int  size(1) Largest target is 0
   852 ;;
   853 ;; ?___ftmul	float  size(1) Largest target is 0
   854 ;;
   855 ;; ?___lltoft	float  size(1) Largest target is 0
   856 ;;
   857 ;; ?___ftdiv	float  size(1) Largest target is 0
   858 ;;
   859 ;; printf@f	PTR const unsigned char  size(1) Largest target is 11
   860 ;;		 -> STR_2(CODE[4]), STR_1(CODE[11]), 
   861 ;;
   862 ;; ?_printf	int  size(1) Largest target is 4
   863 ;;		 -> dem(BANK0[4]), 
   864 ;;
   865 ;; printf@ap	PTR void [1] size(1) Largest target is 2
   866 ;;		 -> ?_printf(BANK0[2]), 
   867 ;;
   868 ;; S3141$_cp	PTR const unsigned char  size(1) Largest target is 0
   869 ;;
   870 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   871 ;;
   872 ;;
   873 ;; Critical Paths under _main in COMMON
   874 ;;
   875 ;;   _printf->_putch
   876 ;;   _printf->___awdiv
   877 ;;   _putch->_lcd_putc
   878 ;;   _lcd_putc->_lcd_gotoxy
   879 ;;   _scale->___awdiv
   880 ;;   _scale->___bmul
   881 ;;   _fround->___bmul
   882 ;;   _lcd_gotoxy->_lcd_put_byte
   883 ;;   _lcd_init->_lcd_put_byte
   884 ;;   ___lltoft->___ftpack
   885 ;;   ___ftmul->___awdiv
   886 ;;   ___ftmul->___bmul
   887 ;;   ___ftdiv->___lltoft
   888 ;;   ___ftadd->___bmul
   889 ;;   ___llmod->___lldiv
   890 ;;   ___awdiv->___awmod
   891 ;;   ___fttol->___awdiv
   892 ;;   ___fttol->___bmul
   893 ;;   ___lbdiv->___lbmod
   894 ;;   ___bmul->___lbdiv
   895 ;;
   896 ;; Critical Paths under _ngat in COMMON
   897 ;;
   898 ;;   None.
   899 ;;
   900 ;; Critical Paths under _main in BANK0
   901 ;;
   902 ;;   _main->_printf
   903 ;;   _printf->_fround
   904 ;;   ___ftsub->___ftadd
   905 ;;   _scale->___ftmul
   906 ;;   _fround->___ftadd
   907 ;;   ___ftmul->___fttol
   908 ;;   ___ftdiv->___lltoft
   909 ;;   ___ftadd->___ftmul
   910 ;;   ___llmod->___lldiv
   911 ;;   ___fttol->___awdiv
   912 ;;
   913 ;; Critical Paths under _ngat in BANK0
   914 ;;
   915 ;;   None.
   916 ;;
   917 ;; Critical Paths under _main in BANK1
   918 ;;
   919 ;;   _main->_printf
   920 ;;
   921 ;; Critical Paths under _ngat in BANK1
   922 ;;
   923 ;;   None.
   924 ;;
   925 ;; Critical Paths under _main in BANK3
   926 ;;
   927 ;;   None.
   928 ;;
   929 ;; Critical Paths under _ngat in BANK3
   930 ;;
   931 ;;   None.
   932 ;;
   933 ;; Critical Paths under _main in BANK2
   934 ;;
   935 ;;   None.
   936 ;;
   937 ;; Critical Paths under _ngat in BANK2
   938 ;;
   939 ;;   None.
   940 ;;
   941 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   942 ;;
   943 ;;
   944 ;;Call Graph Tables:
   945 ;;
   946 ;; ---------------------------------------------------------------------------------
   947 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   948 ;; ---------------------------------------------------------------------------------
   949 ;; (0) _main                                                 0     0      0   12131
   950 ;;                           _lcd_init
   951 ;;                           ___lltoft
   952 ;;                            ___ftdiv
   953 ;;                         _lcd_gotoxy
   954 ;;                             _printf
   955 ;; ---------------------------------------------------------------------------------
   956 ;; (1) _printf                                              38    34      4   10807
   957 ;;                                             54 BANK0      9     5      4
   958 ;;                                              0 BANK1     25    25      0
   959 ;;                              _putch
   960 ;;                            _isdigit
   961 ;;                             ___wmul
   962 ;;                             ___ftge
   963 ;;                            ___ftneg
   964 ;;                            ___awdiv
   965 ;;                              _scale
   966 ;;                            ___ftmul
   967 ;;                             _fround
   968 ;;                            ___ftadd
   969 ;;                            ___fttol
   970 ;;                         __div_to_l_
   971 ;;                        __tdiv_to_l_
   972 ;;                           ___lltoft
   973 ;;                            ___ftsub
   974 ;;                            ___lldiv
   975 ;;                            ___llmod
   976 ;; ---------------------------------------------------------------------------------
   977 ;; (2) _putch                                                1     1      0     713
   978 ;;                                             11 COMMON     1     1      0
   979 ;;                           _lcd_putc
   980 ;; ---------------------------------------------------------------------------------
   981 ;; (3) _lcd_putc                                             1     1      0     691
   982 ;;                                             10 COMMON     1     1      0
   983 ;;                       _lcd_put_byte
   984 ;;                           _lcd_busy
   985 ;;                         _lcd_gotoxy
   986 ;;                            _isprint
   987 ;; ---------------------------------------------------------------------------------
   988 ;; (2) ___ftsub                                              6     0      6    1094
   989 ;;                                             44 BANK0      6     0      6
   990 ;;                            ___ftadd
   991 ;;                           ___lltoft (ARG)
   992 ;; ---------------------------------------------------------------------------------
   993 ;; (2) _scale                                               14    11      3    1688
   994 ;;                                             32 BANK0     11     8      3
   995 ;;                            ___awmod
   996 ;;                            ___awdiv
   997 ;;                            ___ftmul
   998 ;;                             ___bmul
   999 ;;                            ___fttol (ARG)
  1000 ;; ---------------------------------------------------------------------------------
  1001 ;; (2) _fround                                              13    10      3    1215
  1002 ;;                                             44 BANK0     10     7      3
  1003 ;;                            ___lbmod
  1004 ;;                             ___bmul
  1005 ;;                            ___lbdiv
  1006 ;;                            ___ftmul
  1007 ;;                            ___ftadd (ARG)
  1008 ;; ---------------------------------------------------------------------------------
  1009 ;; (4) _lcd_gotoxy                                           3     2      1     313
  1010 ;;                                              7 COMMON     3     2      1
  1011 ;;                       _lcd_put_byte
  1012 ;;                           _lcd_busy
  1013 ;; ---------------------------------------------------------------------------------
  1014 ;; (1) _lcd_init                                             4     4      0     244
  1015 ;;                                              7 COMMON     3     3      0
  1016 ;;                       _lcd_put_byte
  1017 ;;                           _lcd_busy
  1018 ;; ---------------------------------------------------------------------------------
  1019 ;; (2) ___lltoft                                             5     1      4     278
  1020 ;;                                             10 COMMON     1     1      0
  1021 ;;                                              0 BANK0      4     0      4
  1022 ;;                           ___ftpack
  1023 ;; ---------------------------------------------------------------------------------
  1024 ;; (3) ___ftmul                                             15     9      6     535
  1025 ;;                                             17 BANK0     15     9      6
  1026 ;;                           ___ftpack
  1027 ;;                            ___fttol (ARG)
  1028 ;;                            ___awdiv (ARG)
  1029 ;;                            ___awmod (ARG)
  1030 ;;                             ___bmul (ARG)
  1031 ;;                            ___lbdiv (ARG)
  1032 ;;                            ___lbmod (ARG)
  1033 ;; ---------------------------------------------------------------------------------
  1034 ;; (1) ___ftdiv                                             15     9      6     489
  1035 ;;                                              4 BANK0     15     9      6
  1036 ;;                           ___ftpack
  1037 ;;                           ___lltoft (ARG)
  1038 ;; ---------------------------------------------------------------------------------
  1039 ;; (3) ___ftadd                                             12     6      6    1049
  1040 ;;                                             32 BANK0     12     6      6
  1041 ;;                           ___ftpack
  1042 ;;                            ___lbmod (ARG)
  1043 ;;                             ___bmul (ARG)
  1044 ;;                            ___lbdiv (ARG)
  1045 ;;                            ___ftmul (ARG)
  1046 ;; ---------------------------------------------------------------------------------
  1047 ;; (5) _lcd_busy                                             2     2      0      23
  1048 ;;                                              2 COMMON     2     2      0
  1049 ;; ---------------------------------------------------------------------------------
  1050 ;; (5) _lcd_put_byte                                         5     4      1     221
  1051 ;;                                              2 COMMON     5     4      1
  1052 ;; ---------------------------------------------------------------------------------
  1053 ;; (3) ___awmod                                              6     2      4     296
  1054 ;;                                              2 COMMON     6     2      4
  1055 ;; ---------------------------------------------------------------------------------
  1056 ;; (2) ___lldiv                                             13     5      8     162
  1057 ;;                                              2 COMMON     8     0      8
  1058 ;;                                              0 BANK0      5     5      0
  1059 ;; ---------------------------------------------------------------------------------
  1060 ;; (2) ___ftge                                               6     0      6     136
  1061 ;;                                              2 COMMON     6     0      6
  1062 ;; ---------------------------------------------------------------------------------
  1063 ;; (2) ___ftneg                                              3     0      3      45
  1064 ;;                                              2 COMMON     3     0      3
  1065 ;; ---------------------------------------------------------------------------------
  1066 ;; (2) ___llmod                                              9     1      8     159
  1067 ;;                                             10 COMMON     1     1      0
  1068 ;;                                              5 BANK0      8     0      8
  1069 ;;                            ___lldiv (ARG)
  1070 ;; ---------------------------------------------------------------------------------
  1071 ;; (3) ___awdiv                                              8     4      4     300
  1072 ;;                                              8 COMMON     4     0      4
  1073 ;;                                              0 BANK0      4     4      0
  1074 ;;                            ___awmod (ARG)
  1075 ;; ---------------------------------------------------------------------------------
  1076 ;; (2) ___fttol                                             13     9      4     252
  1077 ;;                                              4 BANK0     13     9      4
  1078 ;;                           ___ftpack (ARG)
  1079 ;;                            ___awmod (ARG)
  1080 ;;                            ___awdiv (ARG)
  1081 ;;                             ___bmul (ARG)
  1082 ;; ---------------------------------------------------------------------------------
  1083 ;; (4) ___ftpack                                             8     3      5     209
  1084 ;;                                              2 COMMON     8     3      5
  1085 ;; ---------------------------------------------------------------------------------
  1086 ;; (3) ___lbmod                                              5     4      1     159
  1087 ;;                                              2 COMMON     5     4      1
  1088 ;; ---------------------------------------------------------------------------------
  1089 ;; (3) ___lbdiv                                              4     3      1     162
  1090 ;;                                              7 COMMON     4     3      1
  1091 ;;                            ___lbmod (ARG)
  1092 ;; ---------------------------------------------------------------------------------
  1093 ;; (2) ___wmul                                               6     2      4      92
  1094 ;;                                              2 COMMON     6     2      4
  1095 ;; ---------------------------------------------------------------------------------
  1096 ;; (3) ___bmul                                               3     2      1      68
  1097 ;;                                             11 COMMON     1     0      1
  1098 ;;                                              0 BANK0      2     2      0
  1099 ;;                            ___lbmod (ARG)
  1100 ;;                            ___lbdiv (ARG)
  1101 ;; ---------------------------------------------------------------------------------
  1102 ;; (2) __div_to_l_                                          20    14      6     446
  1103 ;;                                              2 COMMON     6     0      6
  1104 ;;                                              0 BANK0     14    14      0
  1105 ;; ---------------------------------------------------------------------------------
  1106 ;; (2) __tdiv_to_l_                                         15     9      6     303
  1107 ;;                                              2 COMMON     9     3      6
  1108 ;;                                              0 BANK0      6     6      0
  1109 ;; ---------------------------------------------------------------------------------
  1110 ;; (2) _isdigit                                              2     2      0      68
  1111 ;;                                              2 COMMON     2     2      0
  1112 ;; ---------------------------------------------------------------------------------
  1113 ;; (4) _isprint                                              2     2      0      68
  1114 ;;                                              2 COMMON     2     2      0
  1115 ;; ---------------------------------------------------------------------------------
  1116 ;; Estimated maximum stack depth 5
  1117 ;; ---------------------------------------------------------------------------------
  1118 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1119 ;; ---------------------------------------------------------------------------------
  1120 ;; (6) _ngat                                                 2     2      0       0
  1121 ;;                                              0 COMMON     2     2      0
  1122 ;; ---------------------------------------------------------------------------------
  1123 ;; Estimated maximum stack depth 6
  1124 ;; ---------------------------------------------------------------------------------
  1125 ;; Call Graph Graphs:
  1126 ;; _main (ROOT)
  1127 ;;   _lcd_init
  1128 ;;     _lcd_put_byte
  1129 ;;     _lcd_busy
  1130 ;;   ___lltoft
  1131 ;;     ___ftpack
  1132 ;;   ___ftdiv
  1133 ;;     ___ftpack
  1134 ;;     ___lltoft (ARG)
  1135 ;;       ___ftpack
  1136 ;;   _lcd_gotoxy
  1137 ;;     _lcd_put_byte
  1138 ;;     _lcd_busy
  1139 ;;   _printf
  1140 ;;     _putch
  1141 ;;       _lcd_putc
  1142 ;;         _lcd_put_byte
  1143 ;;         _lcd_busy
  1144 ;;         _lcd_gotoxy
  1145 ;;           _lcd_put_byte
  1146 ;;           _lcd_busy
  1147 ;;         _isprint
  1148 ;;     _isdigit
  1149 ;;     ___wmul
  1150 ;;     ___ftge
  1151 ;;     ___ftneg
  1152 ;;     ___awdiv
  1153 ;;       ___awmod (ARG)
  1154 ;;     _scale
  1155 ;;       ___awmod
  1156 ;;       ___awdiv
  1157 ;;         ___awmod (ARG)
  1158 ;;       ___ftmul
  1159 ;;         ___ftpack
  1160 ;;         ___fttol (ARG)
  1161 ;;           ___ftpack (ARG)
  1162 ;;           ___awmod (ARG)
  1163 ;;           ___awdiv (ARG)
  1164 ;;             ___awmod (ARG)
  1165 ;;           ___bmul (ARG)
  1166 ;;             ___lbmod (ARG)
  1167 ;;             ___lbdiv (ARG)
  1168 ;;               ___lbmod (ARG)
  1169 ;;         ___awdiv (ARG)
  1170 ;;           ___awmod (ARG)
  1171 ;;         ___awmod (ARG)
  1172 ;;         ___bmul (ARG)
  1173 ;;           ___lbmod (ARG)
  1174 ;;           ___lbdiv (ARG)
  1175 ;;             ___lbmod (ARG)
  1176 ;;         ___lbdiv (ARG)
  1177 ;;           ___lbmod (ARG)
  1178 ;;         ___lbmod (ARG)
  1179 ;;       ___bmul
  1180 ;;         ___lbmod (ARG)
  1181 ;;         ___lbdiv (ARG)
  1182 ;;           ___lbmod (ARG)
  1183 ;;       ___fttol (ARG)
  1184 ;;         ___ftpack (ARG)
  1185 ;;         ___awmod (ARG)
  1186 ;;         ___awdiv (ARG)
  1187 ;;           ___awmod (ARG)
  1188 ;;         ___bmul (ARG)
  1189 ;;           ___lbmod (ARG)
  1190 ;;           ___lbdiv (ARG)
  1191 ;;             ___lbmod (ARG)
  1192 ;;     ___ftmul
  1193 ;;       ___ftpack
  1194 ;;       ___fttol (ARG)
  1195 ;;         ___ftpack (ARG)
  1196 ;;         ___awmod (ARG)
  1197 ;;         ___awdiv (ARG)
  1198 ;;           ___awmod (ARG)
  1199 ;;         ___bmul (ARG)
  1200 ;;           ___lbmod (ARG)
  1201 ;;           ___lbdiv (ARG)
  1202 ;;             ___lbmod (ARG)
  1203 ;;       ___awdiv (ARG)
  1204 ;;         ___awmod (ARG)
  1205 ;;       ___awmod (ARG)
  1206 ;;       ___bmul (ARG)
  1207 ;;         ___lbmod (ARG)
  1208 ;;         ___lbdiv (ARG)
  1209 ;;           ___lbmod (ARG)
  1210 ;;       ___lbdiv (ARG)
  1211 ;;         ___lbmod (ARG)
  1212 ;;       ___lbmod (ARG)
  1213 ;;     _fround
  1214 ;;       ___lbmod
  1215 ;;       ___bmul
  1216 ;;         ___lbmod (ARG)
  1217 ;;         ___lbdiv (ARG)
  1218 ;;           ___lbmod (ARG)
  1219 ;;       ___lbdiv
  1220 ;;         ___lbmod (ARG)
  1221 ;;       ___ftmul
  1222 ;;         ___ftpack
  1223 ;;         ___fttol (ARG)
  1224 ;;           ___ftpack (ARG)
  1225 ;;           ___awmod (ARG)
  1226 ;;           ___awdiv (ARG)
  1227 ;;             ___awmod (ARG)
  1228 ;;           ___bmul (ARG)
  1229 ;;             ___lbmod (ARG)
  1230 ;;             ___lbdiv (ARG)
  1231 ;;               ___lbmod (ARG)
  1232 ;;         ___awdiv (ARG)
  1233 ;;           ___awmod (ARG)
  1234 ;;         ___awmod (ARG)
  1235 ;;         ___bmul (ARG)
  1236 ;;           ___lbmod (ARG)
  1237 ;;           ___lbdiv (ARG)
  1238 ;;             ___lbmod (ARG)
  1239 ;;         ___lbdiv (ARG)
  1240 ;;           ___lbmod (ARG)
  1241 ;;         ___lbmod (ARG)
  1242 ;;       ___ftadd (ARG)
  1243 ;;         ___ftpack
  1244 ;;         ___lbmod (ARG)
  1245 ;;         ___bmul (ARG)
  1246 ;;           ___lbmod (ARG)
  1247 ;;           ___lbdiv (ARG)
  1248 ;;             ___lbmod (ARG)
  1249 ;;         ___lbdiv (ARG)
  1250 ;;           ___lbmod (ARG)
  1251 ;;         ___ftmul (ARG)
  1252 ;;           ___ftpack
  1253 ;;           ___fttol (ARG)
  1254 ;;             ___ftpack (ARG)
  1255 ;;             ___awmod (ARG)
  1256 ;;             ___awdiv (ARG)
  1257 ;;               ___awmod (ARG)
  1258 ;;             ___bmul (ARG)
  1259 ;;               ___lbmod (ARG)
  1260 ;;               ___lbdiv (ARG)
  1261 ;;                 ___lbmod (ARG)
  1262 ;;           ___awdiv (ARG)
  1263 ;;             ___awmod (ARG)
  1264 ;;           ___awmod (ARG)
  1265 ;;           ___bmul (ARG)
  1266 ;;             ___lbmod (ARG)
  1267 ;;             ___lbdiv (ARG)
  1268 ;;               ___lbmod (ARG)
  1269 ;;           ___lbdiv (ARG)
  1270 ;;             ___lbmod (ARG)
  1271 ;;           ___lbmod (ARG)
  1272 ;;     ___ftadd
  1273 ;;       ___ftpack
  1274 ;;       ___lbmod (ARG)
  1275 ;;       ___bmul (ARG)
  1276 ;;         ___lbmod (ARG)
  1277 ;;         ___lbdiv (ARG)
  1278 ;;           ___lbmod (ARG)
  1279 ;;       ___lbdiv (ARG)
  1280 ;;         ___lbmod (ARG)
  1281 ;;       ___ftmul (ARG)
  1282 ;;         ___ftpack
  1283 ;;         ___fttol (ARG)
  1284 ;;           ___ftpack (ARG)
  1285 ;;           ___awmod (ARG)
  1286 ;;           ___awdiv (ARG)
  1287 ;;             ___awmod (ARG)
  1288 ;;           ___bmul (ARG)
  1289 ;;             ___lbmod (ARG)
  1290 ;;             ___lbdiv (ARG)
  1291 ;;               ___lbmod (ARG)
  1292 ;;         ___awdiv (ARG)
  1293 ;;           ___awmod (ARG)
  1294 ;;         ___awmod (ARG)
  1295 ;;         ___bmul (ARG)
  1296 ;;           ___lbmod (ARG)
  1297 ;;           ___lbdiv (ARG)
  1298 ;;             ___lbmod (ARG)
  1299 ;;         ___lbdiv (ARG)
  1300 ;;           ___lbmod (ARG)
  1301 ;;         ___lbmod (ARG)
  1302 ;;     ___fttol
  1303 ;;       ___ftpack (ARG)
  1304 ;;       ___awmod (ARG)
  1305 ;;       ___awdiv (ARG)
  1306 ;;         ___awmod (ARG)
  1307 ;;       ___bmul (ARG)
  1308 ;;         ___lbmod (ARG)
  1309 ;;         ___lbdiv (ARG)
  1310 ;;           ___lbmod (ARG)
  1311 ;;     __div_to_l_
  1312 ;;     __tdiv_to_l_
  1313 ;;     ___lltoft
  1314 ;;       ___ftpack
  1315 ;;     ___ftsub
  1316 ;;       ___ftadd
  1317 ;;         ___ftpack
  1318 ;;         ___lbmod (ARG)
  1319 ;;         ___bmul (ARG)
  1320 ;;           ___lbmod (ARG)
  1321 ;;           ___lbdiv (ARG)
  1322 ;;             ___lbmod (ARG)
  1323 ;;         ___lbdiv (ARG)
  1324 ;;           ___lbmod (ARG)
  1325 ;;         ___ftmul (ARG)
  1326 ;;           ___ftpack
  1327 ;;           ___fttol (ARG)
  1328 ;;             ___ftpack (ARG)
  1329 ;;             ___awmod (ARG)
  1330 ;;             ___awdiv (ARG)
  1331 ;;               ___awmod (ARG)
  1332 ;;             ___bmul (ARG)
  1333 ;;               ___lbmod (ARG)
  1334 ;;               ___lbdiv (ARG)
  1335 ;;                 ___lbmod (ARG)
  1336 ;;           ___awdiv (ARG)
  1337 ;;             ___awmod (ARG)
  1338 ;;           ___awmod (ARG)
  1339 ;;           ___bmul (ARG)
  1340 ;;             ___lbmod (ARG)
  1341 ;;             ___lbdiv (ARG)
  1342 ;;               ___lbmod (ARG)
  1343 ;;           ___lbdiv (ARG)
  1344 ;;             ___lbmod (ARG)
  1345 ;;           ___lbmod (ARG)
  1346 ;;       ___lltoft (ARG)
  1347 ;;         ___ftpack
  1348 ;;     ___lldiv
  1349 ;;     ___llmod
  1350 ;;       ___lldiv (ARG)
  1351 ;;
  1352 ;; _ngat (ROOT)
  1353 ;;
  1354 ;; Address spaces:
  1355 ;;Name               Size   Autos  Total    Cost      Usage
  1356 ;;BITCOMMON            E      0       0       0        0.0%
  1357 ;;EEDATA             100      0       0       0        0.0%
  1358 ;;NULL                 0      0       0       0        0.0%
  1359 ;;CODE                 0      0       0       0        0.0%
  1360 ;;COMMON               E      C       C       1       85.7%
  1361 ;;BITSFR0              0      0       0       1        0.0%
  1362 ;;SFR0                 0      0       0       1        0.0%
  1363 ;;BITSFR1              0      0       0       2        0.0%
  1364 ;;SFR1                 0      0       0       2        0.0%
  1365 ;;STACK                0      0       5       2        0.0%
  1366 ;;ABS                  0      0      6F       3        0.0%
  1367 ;;BITBANK0            50      0       0       4        0.0%
  1368 ;;BITSFR3              0      0       0       4        0.0%
  1369 ;;SFR3                 0      0       0       4        0.0%
  1370 ;;BANK0               50     3F      4A       5       92.5%
  1371 ;;BITSFR2              0      0       0       5        0.0%
  1372 ;;SFR2                 0      0       0       5        0.0%
  1373 ;;BITBANK1            50      0       0       6        0.0%
  1374 ;;BANK1               50     19      19       7       31.3%
  1375 ;;BITBANK3            60      0       0       8        0.0%
  1376 ;;BANK3               60      0       0       9        0.0%
  1377 ;;BITBANK2            60      0       0      10        0.0%
  1378 ;;BANK2               60      0       0      11        0.0%
  1379 ;;DATA                 0      0      74      12        0.0%
  1380                           
  1381                           
  1382 ;; *************** function _main *****************
  1383 ;; Defined at:
  1384 ;;		line 15 in file "C:\Online Class\HK6\Practice_Micro\CCP\ccp.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;		None
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;		None
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  2  2136[COMMON] int 
  1391 ;; Registers used:
  1392 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : 17F/0
  1395 ;;		On exit  : 60/20
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1398 ;;      Params:         0       0       0       0       0
  1399 ;;      Locals:         0       0       0       0       0
  1400 ;;      Temps:          0       0       0       0       0
  1401 ;;      Totals:         0       0       0       0       0
  1402 ;;Total ram usage:        0 bytes
  1403 ;; Hardware stack levels required when called:    6
  1404 ;; This function calls:
  1405 ;;		_lcd_init
  1406 ;;		___lltoft
  1407 ;;		___ftdiv
  1408 ;;		_lcd_gotoxy
  1409 ;;		_printf
  1410 ;; This function is called by:
  1411 ;;		Startup code after reset
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414  0805                     _main:	
  1415                           
  1416                           ;ccp.c: 16: lcd_init();
  1417                           
  1418                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1419  0805  120A  158A  22E5   	fcall	_lcd_init
      +       120A  158A         
  1420                           
  1421                           ;ccp.c: 17: ANSEL = ANSELH = 0;
  1422  080A  1683               	bsf	3,5	;RP0=1, select bank3
  1423  080B  1703               	bsf	3,6	;RP1=1, select bank3
  1424  080C  0189               	clrf	9	;volatile
  1425  080D  0188               	clrf	8	;volatile
  1426                           
  1427                           ;ccp.c: 19: TRISC2=1;
  1428  080E  1303               	bcf	3,6	;RP1=0, select bank1
  1429  080F  1507               	bsf	7,2
  1430                           
  1431                           ;ccp.c: 20: TRISD=0X00;
  1432  0810  0188               	clrf	8	;volatile
  1433                           
  1434                           ;ccp.c: 23: TMR1ON=1;
  1435  0811  1283               	bcf	3,5	;RP0=0, select bank0
  1436  0812  1410               	bsf	16,0
  1437                           
  1438                           ;ccp.c: 24: TMR1GE=0;
  1439  0813  1310               	bcf	16,6
  1440                           
  1441                           ;ccp.c: 26: TMR1CS=0;
  1442  0814  1090               	bcf	16,1
  1443                           
  1444                           ;ccp.c: 27: T1CKPS1=0;
  1445  0815  1290               	bcf	16,5
  1446                           
  1447                           ;ccp.c: 28: T1CKPS0=0;
  1448  0816  1210               	bcf	16,4
  1449                           
  1450                           ;ccp.c: 29: T1SYNC=1;
  1451  0817  1510               	bsf	16,2
  1452                           
  1453                           ;ccp.c: 31: TMR1H=0;
  1454  0818  018F               	clrf	15	;volatile
  1455                           
  1456                           ;ccp.c: 32: TMR1L=0;
  1457  0819  018E               	clrf	14	;volatile
  1458                           
  1459                           ;ccp.c: 35: CCP1M3 = 0;
  1460  081A  1197               	bcf	23,3
  1461                           
  1462                           ;ccp.c: 36: CCP1M2 = 1;
  1463  081B  1517               	bsf	23,2
  1464                           
  1465                           ;ccp.c: 37: CCP1M1 = 0;
  1466  081C  1097               	bcf	23,1
  1467                           
  1468                           ;ccp.c: 38: CCP1M0 = 1;
  1469  081D  1417               	bsf	23,0
  1470                           
  1471                           ;ccp.c: 40: CCPR1H=CCPR1L=0;
  1472  081E  0195               	clrf	21	;volatile
  1473  081F  0196               	clrf	22	;volatile
  1474                           
  1475                           ;ccp.c: 43: CCP1IE=1;
  1476  0820  1683               	bsf	3,5	;RP0=1, select bank1
  1477  0821  150C               	bsf	12,2
  1478                           
  1479                           ;ccp.c: 44: CCP1IF=0;
  1480  0822  1283               	bcf	3,5	;RP0=0, select bank0
  1481  0823  110C               	bcf	12,2
  1482                           
  1483                           ;ccp.c: 45: PEIE=1;
  1484  0824  170B               	bsf	11,6
  1485                           
  1486                           ;ccp.c: 46: GIE=1;
  1487  0825  178B               	bsf	11,7
  1488                           
  1489                           ;ccp.c: 48: TRISD=0X00;
  1490  0826  1683               	bsf	3,5	;RP0=1, select bank1
  1491  0827  0188               	clrf	8	;volatile
  1492  0828                     l2137:	
  1493                           ;ccp.c: 51: while(1)
  1494                           
  1495                           
  1496                           ;ccp.c: 52: {
  1497                           ;ccp.c: 54: fre = 1.0/(dem/5000000.0);
  1498  0828  3097               	movlw	151
  1499  0829  1283               	bcf	3,5	;RP0=0, select bank0
  1500  082A  00A4               	movwf	?___ftdiv
  1501  082B  3098               	movlw	152
  1502  082C  00A5               	movwf	?___ftdiv+1
  1503  082D  304A               	movlw	74
  1504  082E  00A6               	movwf	?___ftdiv+2
  1505  082F  0869               	movf	_dem+3,w
  1506  0830  00A3               	movwf	?___lltoft+3
  1507  0831  0868               	movf	_dem+2,w
  1508  0832  00A2               	movwf	?___lltoft+2
  1509  0833  0867               	movf	_dem+1,w
  1510  0834  00A1               	movwf	?___lltoft+1
  1511  0835  0866               	movf	_dem,w
  1512  0836  00A0               	movwf	?___lltoft
  1513  0837  120A  118A  26C2   	fcall	___lltoft
      +       120A  158A         
  1514  083C  0820               	movf	?___lltoft,w
  1515  083D  00A7               	movwf	?___ftdiv+3
  1516  083E  0821               	movf	?___lltoft+1,w
  1517  083F  00A8               	movwf	?___ftdiv+4
  1518  0840  0822               	movf	?___lltoft+2,w
  1519  0841  00A9               	movwf	?___ftdiv+5
  1520  0842  120A  158A  246F   	fcall	___ftdiv
      +       120A  158A         
  1521  0847  3080               	movlw	128
  1522  0848  01A7               	clrf	?___ftdiv+3
  1523  0849  00A8               	movwf	?___ftdiv+4
  1524  084A  303F               	movlw	63
  1525  084B  00A9               	movwf	?___ftdiv+5
  1526  084C  120A  158A  246F   	fcall	___ftdiv
      +       120A  158A         
  1527  0851  0824               	movf	?___ftdiv,w
  1528  0852  00E3               	movwf	_fre
  1529  0853  0825               	movf	?___ftdiv+1,w
  1530  0854  00E4               	movwf	_fre+1
  1531  0855  0826               	movf	?___ftdiv+2,w
  1532  0856  00E5               	movwf	_fre+2
  1533  0857  3000               	movlw	0
  1534                           
  1535                           ;ccp.c: 55: lcd_gotoxy(0,0);
  1536  0858  01F7               	clrf	?_lcd_gotoxy
  1537  0859  120A  158A  229E   	fcall	_lcd_gotoxy
      +       120A  158A         
  1538                           
  1539                           ;ccp.c: 56: printf("fre: %6.1f",fre);
  1540  085E  0863               	movf	_fre,w
  1541  085F  00D6               	movwf	?_printf
  1542  0860  0864               	movf	_fre+1,w
  1543  0861  00D7               	movwf	?_printf+1
  1544  0862  0865               	movf	_fre+2,w
  1545  0863  00D8               	movwf	?_printf+2
  1546  0864  3077               	movlw	(STR_1-__stringbase)& (0+255)
  1547  0865  120A  118A  200F   	fcall	_printf
      +       120A  158A         
  1548  086A  3000               	movlw	0
  1549                           
  1550                           ;ccp.c: 57: lcd_gotoxy(0,1);
  1551  086B  01F7               	clrf	?_lcd_gotoxy
  1552  086C  0AF7               	incf	?_lcd_gotoxy,f
  1553  086D  120A  158A  229E   	fcall	_lcd_gotoxy
      +       120A  158A         
  1554                           
  1555                           ;ccp.c: 58: printf("%6u",dem);
  1556  0872  0869               	movf	_dem+3,w
  1557  0873  00D9               	movwf	?_printf+3
  1558  0874  0868               	movf	_dem+2,w
  1559  0875  00D8               	movwf	?_printf+2
  1560  0876  0867               	movf	_dem+1,w
  1561  0877  00D7               	movwf	?_printf+1
  1562  0878  0866               	movf	_dem,w
  1563  0879  00D6               	movwf	?_printf
  1564  087A  3082               	movlw	(STR_2-__stringbase)& (0+255)
  1565  087B  120A  118A  200F   	fcall	_printf
      +       120A  158A         
  1566  0880  2828               	goto	l2137
  1567  0881                     __end_of_main:	
  1568                           
  1569                           	psect	text519
  1570  000F                     __ptext519:	
  1571 ;; =============== function _main ends ============
  1572                           
  1573                           
  1574 ;; *************** function _printf *****************
  1575 ;; Defined at:
  1576 ;;		line 461 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;  f               1    wreg     PTR const unsigned char 
  1579 ;;		 -> STR_2(4), STR_1(11), 
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;  f               1   10[BANK1 ] PTR const unsigned char 
  1582 ;;		 -> STR_2(4), STR_1(11), 
  1583 ;;  _val            4   11[BANK1 ] struct .
  1584 ;;  fval            3   19[BANK1 ] struct .
  1585 ;;  integ           3    5[BANK1 ] struct .
  1586 ;;  ival            3    0        struct .
  1587 ;;  prec            2   22[BANK1 ] int 
  1588 ;;  exp             2   17[BANK1 ] int 
  1589 ;;  width           2   15[BANK1 ] int 
  1590 ;;  flag            2    8[BANK1 ] unsigned short 
  1591 ;;  c               1   24[BANK1 ] char 
  1592 ;;  ap              1    4[BANK1 ] PTR void [1]
  1593 ;;		 -> ?_printf(2), 
  1594 ;;  d               1    0        unsigned char 
  1595 ;; Return value:  Size  Location     Type
  1596 ;;                  2   54[BANK0 ] int 
  1597 ;; Registers used:
  1598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1599 ;; Tracked objects:
  1600 ;;		On entry : 60/0
  1601 ;;		On exit  : 60/20
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1604 ;;      Params:         0       4       0       0       0
  1605 ;;      Locals:         0       0      25       0       0
  1606 ;;      Temps:          0       5       0       0       0
  1607 ;;      Totals:         0       9      25       0       0
  1608 ;;Total ram usage:       34 bytes
  1609 ;; Hardware stack levels used:    1
  1610 ;; Hardware stack levels required when called:    5
  1611 ;; This function calls:
  1612 ;;		_putch
  1613 ;;		_isdigit
  1614 ;;		___wmul
  1615 ;;		___ftge
  1616 ;;		___ftneg
  1617 ;;		___awdiv
  1618 ;;		_scale
  1619 ;;		___ftmul
  1620 ;;		_fround
  1621 ;;		___ftadd
  1622 ;;		___fttol
  1623 ;;		__div_to_l_
  1624 ;;		__tdiv_to_l_
  1625 ;;		___lltoft
  1626 ;;		___ftsub
  1627 ;;		___lldiv
  1628 ;;		___llmod
  1629 ;; This function is called by:
  1630 ;;		_main
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633  000F                     _printf:	
  1634                           
  1635                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1636                           ;printf@f stored from wreg
  1637  000F  1683               	bsf	3,5	;RP0=1, select bank1
  1638  0010  00AA               	movwf	printf@f^(0+128)
  1639  0011  3056               	movlw	?_printf& (0+255)
  1640  0012  00A4               	movwf	printf@ap^(0+128)
  1641  0013                     l7079:	
  1642  0013  278C               	call	PL32	;select bank 1
  1643  0014  082A               	movf	printf@f^(0+128),w
  1644  0015  0AAA               	incf	printf@f^(0+128),f
  1645  0016  0084               	movwf	4
  1646  0017  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1647  001C  00B8               	movwf	printf@c^(0+128)
  1648  001D  08B8               	movf	printf@c^(0+128),f
  1649  001E  1903               	btfsc	3,2
  1650  001F  0008               	return
  1651  0020  3A25               	xorlw	37
  1652  0021  1903               	skipnz
  1653  0022  2828               	goto	l6835
  1654  0023  0838               	movf	printf@c^(0+128),w
  1655  0024  2509  120A  118A   	fcall	_putch
  1656  0027  2813               	goto	l7079
  1657  0028                     l6835:	
  1658  0028  01AF               	clrf	printf@width^(0+128)
  1659  0029  01B0               	clrf	(printf@width+1)^(0+128)
  1660  002A  01A8               	clrf	printf@flag^(0+128)
  1661  002B  01A9               	clrf	(printf@flag+1)^(0+128)
  1662  002C  082A               	movf	printf@f^(0+128),w
  1663  002D  0084               	movwf	4
  1664  002E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1665  0033  2577  120A  118A   	fcall	_isdigit
  1666  0036  1C03               	btfss	3,0
  1667  0037  285C               	goto	l6847
  1668  0038  01AF               	clrf	printf@width^(0+128)
  1669  0039  01B0               	clrf	(printf@width+1)^(0+128)
  1670  003A                     l6841:	
  1671  003A  0830               	movf	(printf@width+1)^(0+128),w
  1672  003B  00F3               	movwf	?___wmul+1
  1673  003C  082F               	movf	printf@width^(0+128),w
  1674  003D  00F2               	movwf	?___wmul
  1675  003E  300A               	movlw	10
  1676  003F  00F4               	movwf	?___wmul+2
  1677  0040  01F5               	clrf	?___wmul+3
  1678  0041  2585               	fcall	___wmul
  1679  0042  082A               	movf	printf@f^(0+128),w
  1680  0043  0084               	movwf	4
  1681  0044  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1682  0049  273B  120A  118A   	fcall	PL13	;call to abstracted procedure
  1683  004C  00AF               	movwf	printf@width^(0+128)
  1684  004D  2777               	fcall	PL27	;call to abstracted procedure
  1685  004E  00B0               	movwf	(printf@width+1)^(0+128)
  1686  004F  0AAA               	incf	printf@f^(0+128),f
  1687  0050  082A               	movf	printf@f^(0+128),w
  1688  0051  0084               	movwf	4
  1689  0052  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1690  0057  2577  120A  118A   	fcall	_isdigit
  1691  005A  1803               	btfsc	3,0
  1692  005B  283A               	goto	l6841
  1693  005C                     l6847:	
  1694  005C  082A               	movf	printf@f^(0+128),w
  1695  005D  0084               	movwf	4
  1696  005E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1697  0063  3A2E               	xorlw	46
  1698  0064  1D03               	skipz
  1699  0065  288F               	goto	l6861
  1700  0066  1729               	bsf	(printf@flag^(0+128)+1),6
  1701  0067  0AAA               	incf	printf@f^(0+128),f
  1702  0068  01B6               	clrf	printf@prec^(0+128)
  1703  0069  01B7               	clrf	(printf@prec+1)^(0+128)
  1704  006A                     l6859:	
  1705  006A  082A               	movf	printf@f^(0+128),w
  1706  006B  0084               	movwf	4
  1707  006C  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1708  0071  2577  120A  118A   	fcall	_isdigit
  1709  0074  1C03               	btfss	3,0
  1710  0075  2898               	goto	l6869
  1711  0076  0837               	movf	(printf@prec+1)^(0+128),w
  1712  0077  00F3               	movwf	?___wmul+1
  1713  0078  0836               	movf	printf@prec^(0+128),w
  1714  0079  00F2               	movwf	?___wmul
  1715  007A  300A               	movlw	10
  1716  007B  00F4               	movwf	?___wmul+2
  1717  007C  01F5               	clrf	?___wmul+3
  1718  007D  2585               	fcall	___wmul
  1719  007E  082A               	movf	printf@f^(0+128),w
  1720  007F  0084               	movwf	4
  1721  0080  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1722  0085  273B  120A  118A   	fcall	PL13	;call to abstracted procedure
  1723  0088  00B6               	movwf	printf@prec^(0+128)
  1724  0089  2777  120A  118A   	fcall	PL27	;call to abstracted procedure
  1725  008C  00B7               	movwf	(printf@prec+1)^(0+128)
  1726  008D  0AAA               	incf	printf@f^(0+128),f
  1727  008E  286A               	goto	l6859
  1728  008F                     l6861:	
  1729  008F  01B6               	clrf	printf@prec^(0+128)
  1730  0090  01B7               	clrf	(printf@prec+1)^(0+128)
  1731  0091  1629               	bsf	(printf@flag^(0+128)+1),4
  1732  0092  2898               	goto	l6869
  1733  0093                     l2198:	
  1734  0093  1529               	bsf	(printf@flag^(0+128)+1),2
  1735  0094  28AB               	goto	l6871
  1736  0095                     l6865:	
  1737  0095  30C0               	movlw	192
  1738  0096  04A8               	iorwf	printf@flag^(0+128),f
  1739  0097  28AB               	goto	l6871
  1740  0098                     l6869:	
  1741  0098  082A               	movf	printf@f^(0+128),w
  1742  0099  0AAA               	incf	printf@f^(0+128),f
  1743  009A  0084               	movwf	4
  1744  009B  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1745  00A0  00B8               	movwf	printf@c^(0+128)
  1746                           
  1747                           ; Switch size 1, requested type "space"
  1748                           ; Number of cases is 3, Range of values is 0 to 117
  1749                           ; switch strategies available:
  1750                           ; Name         Instructions Cycles
  1751                           ; simple_byte           10     6 (average)
  1752                           ; jumptable            260     6 (fixed)
  1753                           ; rangetable           122     6 (fixed)
  1754                           ; spacedrange          242     9 (fixed)
  1755                           ; locatedrange         118     3 (fixed)
  1756                           ;	Chosen strategy is simple_byte
  1757  00A1  3A00               	xorlw	0	; case 0
  1758  00A2  1903               	skipnz
  1759  00A3  2D08               	goto	l2266
  1760  00A4  3A66               	xorlw	102	; case 102
  1761  00A5  1903               	skipnz
  1762  00A6  2893               	goto	l2198
  1763  00A7  3A13               	xorlw	19	; case 117
  1764  00A8  1903               	skipnz
  1765  00A9  2895               	goto	l6865
  1766  00AA  2813               	goto	l7079
  1767  00AB                     l6871:	
  1768  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1769  00AC  3007               	movlw	7
  1770  00AD  01DA               	clrf	??_printf
  1771  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  1772  00AF  0529               	andwf	(printf@flag+1)^(0+128),w
  1773  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  1774  00B1  00DB               	movwf	??_printf+1
  1775  00B2  045A               	iorwf	??_printf,w
  1776  00B3  1903               	skipnz
  1777  00B4  2BE4               	goto	l7013
  1778  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  1779  00B6  1E29               	btfss	(printf@flag+1)^(0+128),4
  1780  00B7  28BB               	goto	l6877
  1781  00B8  3006               	movlw	6
  1782  00B9  00B6               	movwf	printf@prec^(0+128)
  1783  00BA  01B7               	clrf	(printf@prec+1)^(0+128)
  1784  00BB                     l6877:	
  1785  00BB  0824               	movf	printf@ap^(0+128),w
  1786  00BC  0084               	movwf	4
  1787  00BD  1383               	bcf	3,7	;select IRP bank0
  1788  00BE  0800               	movf	0,w
  1789  00BF  00B3               	movwf	printf@fval^(0+128)
  1790  00C0  0A84               	incf	4,f
  1791  00C1  0800               	movf	0,w
  1792  00C2  00B4               	movwf	(printf@fval+1)^(0+128)
  1793  00C3  0A84               	incf	4,f
  1794  00C4  0800               	movf	0,w
  1795  00C5  00B5               	movwf	(printf@fval+2)^(0+128)
  1796  00C6  3003               	movlw	3
  1797  00C7  07A4               	addwf	printf@ap^(0+128),f
  1798  00C8  0833               	movf	printf@fval^(0+128),w
  1799  00C9  00F2               	movwf	?___ftge
  1800  00CA  0834               	movf	(printf@fval+1)^(0+128),w
  1801  00CB  00F3               	movwf	?___ftge+1
  1802  00CC  0835               	movf	(printf@fval+2)^(0+128),w
  1803  00CD  00F4               	movwf	?___ftge+2
  1804  00CE  01F5               	clrf	?___ftge+3
  1805  00CF  01F6               	clrf	?___ftge+4
  1806  00D0  01F7               	clrf	?___ftge+5
  1807  00D1  254B  120A  118A   	fcall	___ftge
  1808  00D4  1803               	btfsc	3,0
  1809  00D5  28E7               	goto	l6887
  1810  00D6  0833               	movf	printf@fval^(0+128),w
  1811  00D7  00F2               	movwf	?___ftneg
  1812  00D8  0834               	movf	(printf@fval+1)^(0+128),w
  1813  00D9  00F3               	movwf	?___ftneg+1
  1814  00DA  0835               	movf	(printf@fval+2)^(0+128),w
  1815  00DB  00F4               	movwf	?___ftneg+2
  1816  00DC  26BA  120A  118A   	fcall	___ftneg
  1817  00DF  0872               	movf	?___ftneg,w
  1818  00E0  00B3               	movwf	printf@fval^(0+128)
  1819  00E1  0873               	movf	?___ftneg+1,w
  1820  00E2  00B4               	movwf	(printf@fval+1)^(0+128)
  1821  00E3  0874               	movf	?___ftneg+2,w
  1822  00E4  00B5               	movwf	(printf@fval+2)^(0+128)
  1823  00E5  3003               	movlw	3
  1824  00E6  04A8               	iorwf	printf@flag^(0+128),f
  1825  00E7                     l6887:	
  1826  00E7  01B1               	clrf	printf@exp^(0+128)
  1827  00E8  01B2               	clrf	(printf@exp+1)^(0+128)
  1828  00E9  0835               	movf	(printf@fval+2)^(0+128),w
  1829  00EA  0434               	iorwf	(printf@fval+1)^(0+128),w
  1830  00EB  0433               	iorwf	printf@fval^(0+128),w
  1831  00EC  1903               	skipnz
  1832  00ED  297E               	goto	l6919
  1833  00EE  30B3               	movlw	low printf@fval
  1834  00EF  0084               	movwf	4
  1835  00F0  2785  120A  118A   	fcall	PL30	;call to abstracted procedure
  1836  00F3  0A84               	incf	4,f
  1837  00F4  0800               	movf	0,w
  1838  00F5  00DC               	movwf	??_printf+2
  1839  00F6  0A84               	incf	4,f
  1840  00F7  0800               	movf	0,w
  1841  00F8  00DD               	movwf	??_printf+3
  1842  00F9  300F               	movlw	15
  1843  00FA                     u3475:	
  1844  00FA  1003               	clrc
  1845  00FB  0CDD               	rrf	??_printf+3,f
  1846  00FC  0CDC               	rrf	??_printf+2,f
  1847  00FD  0CDB               	rrf	??_printf+1,f
  1848  00FE  0CDA               	rrf	??_printf,f
  1849  00FF  3EFF               	addlw	-1
  1850  0100  1D03               	skipz
  1851  0101  28FA               	goto	u3475
  1852  0102  085B               	movf	??_printf+1,w
  1853  0103  1683               	bsf	3,5	;RP0=1, select bank1
  1854  0104  00B2               	movwf	(printf@exp+1)^(0+128)
  1855  0105  1283               	bcf	3,5	;RP0=0, select bank0
  1856  0106  085A               	movf	??_printf,w
  1857  0107  1683               	bsf	3,5	;RP0=1, select bank1
  1858  0108  00B1               	movwf	printf@exp^(0+128)
  1859  0109  3082               	movlw	-126
  1860  010A  01B2               	clrf	(printf@exp+1)^(0+128)
  1861  010B  07B1               	addwf	printf@exp^(0+128),f
  1862  010C  1C03               	skipc
  1863  010D  03B2               	decf	(printf@exp+1)^(0+128),f
  1864  010E  30FF               	movlw	-1
  1865  010F  07B1               	addwf	printf@exp^(0+128),f
  1866  0110  1C03               	skipc
  1867  0111  03B2               	decf	(printf@exp+1)^(0+128),f
  1868  0112  3003               	movlw	3
  1869  0113  00F2               	movwf	?___wmul
  1870  0114  01F3               	clrf	?___wmul+1
  1871  0115  0832               	movf	(printf@exp+1)^(0+128),w
  1872  0116  00F5               	movwf	?___wmul+3
  1873  0117  0831               	movf	printf@exp^(0+128),w
  1874  0118  00F4               	movwf	?___wmul+2
  1875  0119  2585               	fcall	___wmul
  1876  011A  0873               	movf	?___wmul+1,w
  1877  011B  00B2               	movwf	(printf@exp+1)^(0+128)
  1878  011C  0872               	movf	?___wmul,w
  1879  011D  00B1               	movwf	printf@exp^(0+128)
  1880  011E  300A               	movlw	10
  1881  011F  00F8               	movwf	?___awdiv
  1882  0120  01F9               	clrf	?___awdiv+1
  1883  0121  0832               	movf	(printf@exp+1)^(0+128),w
  1884  0122  00FB               	movwf	?___awdiv+3
  1885  0123  0831               	movf	printf@exp^(0+128),w
  1886  0124  00FA               	movwf	?___awdiv+2
  1887  0125  120A  158A  2669   	fcall	___awdiv
      +       120A  118A         
  1888  012A  0879               	movf	?___awdiv+1,w
  1889  012B  1683               	bsf	3,5	;RP0=1, select bank1
  1890  012C  00B2               	movwf	(printf@exp+1)^(0+128)
  1891  012D  0878               	movf	?___awdiv,w
  1892  012E  00B1               	movwf	printf@exp^(0+128)
  1893  012F  1FB2               	btfss	(printf@exp+1)^(0+128),7
  1894  0130  2935               	goto	l6907
  1895  0131  30FF               	movlw	-1
  1896  0132  07B1               	addwf	printf@exp^(0+128),f
  1897  0133  1C03               	skipc
  1898  0134  03B2               	decf	(printf@exp+1)^(0+128),f
  1899  0135                     l6907:	
  1900  0135  0331               	decf	printf@exp^(0+128),w
  1901  0136  3AFF               	xorlw	255
  1902  0137  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  1903  013C  2725  120A  118A   	fcall	PL9	;call to abstracted procedure
  1904  013F  2752               	fcall	PL16	;call to abstracted procedure
  1905  0140  1683               	bsf	3,5	;RP0=1, select bank1
  1906  0141  0825               	movf	printf@integ^(0+128),w
  1907  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1908  0143  00B4               	movwf	?___ftmul+3
  1909  0144  1683               	bsf	3,5	;RP0=1, select bank1
  1910  0145  0826               	movf	(printf@integ+1)^(0+128),w
  1911  0146  1283               	bcf	3,5	;RP0=0, select bank0
  1912  0147  00B5               	movwf	?___ftmul+4
  1913  0148  1683               	bsf	3,5	;RP0=1, select bank1
  1914  0149  0827               	movf	(printf@integ+2)^(0+128),w
  1915  014A  1283               	bcf	3,5	;RP0=0, select bank0
  1916  014B  00B6               	movwf	?___ftmul+5
  1917  014C  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  1918  0151  0831               	movf	?___ftmul,w
  1919  0152  1683               	bsf	3,5	;RP0=1, select bank1
  1920  0153  00A5               	movwf	printf@integ^(0+128)
  1921  0154  1283               	bcf	3,5	;RP0=0, select bank0
  1922  0155  0832               	movf	?___ftmul+1,w
  1923  0156  1683               	bsf	3,5	;RP0=1, select bank1
  1924  0157  00A6               	movwf	(printf@integ+1)^(0+128)
  1925  0158  1283               	bcf	3,5	;RP0=0, select bank0
  1926  0159  0833               	movf	?___ftmul+2,w
  1927  015A  1683               	bsf	3,5	;RP0=1, select bank1
  1928  015B  00A7               	movwf	(printf@integ+2)^(0+128)
  1929  015C  2770  120A  118A   	fcall	PL21	;call to abstracted procedure
  1930  015F  3080               	movlw	128
  1931  0160  01F5               	clrf	?___ftge+3
  1932  0161  00F6               	movwf	?___ftge+4
  1933  0162  303F               	movlw	63
  1934  0163  00F7               	movwf	?___ftge+5
  1935  0164  254B  120A  118A   	fcall	___ftge
  1936  0167  1803               	btfsc	3,0
  1937  0168  296E               	goto	l6915
  1938  0169  30FF               	movlw	-1
  1939  016A  07B1               	addwf	printf@exp^(0+128),f
  1940  016B  1C03               	skipc
  1941  016C  03B2               	decf	(printf@exp+1)^(0+128),f
  1942  016D  297E               	goto	l6919
  1943  016E                     l6915:	
  1944  016E  2770  120A  118A   	fcall	PL21	;call to abstracted procedure
  1945  0171  3020               	movlw	32
  1946  0172  01F5               	clrf	?___ftge+3
  1947  0173  00F6               	movwf	?___ftge+4
  1948  0174  3041               	movlw	65
  1949  0175  00F7               	movwf	?___ftge+5
  1950  0176  254B  120A  118A   	fcall	___ftge
  1951  0179  1C03               	btfss	3,0
  1952  017A  297E               	goto	l6919
  1953  017B  0AB1               	incf	printf@exp^(0+128),f
  1954  017C  1903               	skipnz
  1955  017D  0AB2               	incf	(printf@exp+1)^(0+128),f
  1956  017E                     l6919:	
  1957  017E  0837               	movf	(printf@prec+1)^(0+128),w
  1958  017F  3A80               	xorlw	128
  1959  0180  00FF               	movwf	127
  1960  0181  3080               	movlw	128
  1961  0182  027F               	subwf	127,w
  1962  0183  1D03               	skipz
  1963  0184  2987               	goto	u3515
  1964  0185  300D               	movlw	13
  1965  0186  0236               	subwf	printf@prec^(0+128),w
  1966  0187                     u3515:	
  1967  0187  1803               	skipnc
  1968  0188  29B2               	goto	l6923
  1969  0189  278C               	call	PL32	;select bank 1
  1970  018A  0836               	movf	printf@prec^(0+128),w
  1971  018B  120A  158A  214C   	fcall	_fround
      +       120A  118A         
  1972  0190  084C               	movf	?_fround,w
  1973  0191  00C0               	movwf	?___ftadd
  1974  0192  084D               	movf	?_fround+1,w
  1975  0193  00C1               	movwf	?___ftadd+1
  1976  0194  084E               	movf	?_fround+2,w
  1977  0195  00C2               	movwf	?___ftadd+2
  1978  0196  1683               	bsf	3,5	;RP0=1, select bank1
  1979  0197  0833               	movf	printf@fval^(0+128),w
  1980  0198  1283               	bcf	3,5	;RP0=0, select bank0
  1981  0199  00C3               	movwf	?___ftadd+3
  1982  019A  1683               	bsf	3,5	;RP0=1, select bank1
  1983  019B  0834               	movf	(printf@fval+1)^(0+128),w
  1984  019C  1283               	bcf	3,5	;RP0=0, select bank0
  1985  019D  00C4               	movwf	?___ftadd+4
  1986  019E  1683               	bsf	3,5	;RP0=1, select bank1
  1987  019F  0835               	movf	(printf@fval+2)^(0+128),w
  1988  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1989  01A1  00C5               	movwf	?___ftadd+5
  1990  01A2  160A  118A  273E   	fcall	___ftadd
      +       120A  118A         
  1991  01A7  0840               	movf	?___ftadd,w
  1992  01A8  1683               	bsf	3,5	;RP0=1, select bank1
  1993  01A9  00B3               	movwf	printf@fval^(0+128)
  1994  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1995  01AB  0841               	movf	?___ftadd+1,w
  1996  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  1997  01AD  00B4               	movwf	(printf@fval+1)^(0+128)
  1998  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1999  01AF  0842               	movf	?___ftadd+2,w
  2000  01B0  1683               	bsf	3,5	;RP0=1, select bank1
  2001  01B1  00B5               	movwf	(printf@fval+2)^(0+128)
  2002  01B2                     l6923:	
  2003  01B2  278C               	call	PL32	;select bank 1
  2004  01B3  0832               	movf	(printf@exp+1)^(0+128),w
  2005  01B4  3A80               	xorlw	128
  2006  01B5  00FF               	movwf	127
  2007  01B6  3080               	movlw	128
  2008  01B7  027F               	subwf	127,w
  2009  01B8  1D03               	skipz
  2010  01B9  29BC               	goto	u3525
  2011  01BA  300A               	movlw	10
  2012  01BB  0231               	subwf	printf@exp^(0+128),w
  2013  01BC                     u3525:	
  2014  01BC  1803               	skipnc
  2015  01BD  29DD               	goto	l6931
  2016  01BE  278C               	call	PL32	;select bank 1
  2017  01BF  0835               	movf	(printf@fval+2)^(0+128),w
  2018  01C0  0434               	iorwf	(printf@fval+1)^(0+128),w
  2019  01C1  0433               	iorwf	printf@fval^(0+128),w
  2020  01C2  1903               	skipnz
  2021  01C3  2A1E               	goto	l6947
  2022  01C4  0833               	movf	printf@fval^(0+128),w
  2023  01C5  2747  120A  118A   	fcall	PL14	;call to abstracted procedure
  2024  01C8  259E  120A  118A   	fcall	___fttol
  2025  01CB  0827               	movf	?___fttol+3,w
  2026  01CC  0426               	iorwf	?___fttol+2,w
  2027  01CD  0425               	iorwf	?___fttol+1,w
  2028  01CE  0424               	iorwf	?___fttol,w
  2029  01CF  1D03               	skipz
  2030  01D0  2A1E               	goto	l6947
  2031  01D1  1683               	bsf	3,5	;RP0=1, select bank1
  2032  01D2  0832               	movf	(printf@exp+1)^(0+128),w
  2033  01D3  3A80               	xorlw	128
  2034  01D4  00FF               	movwf	127
  2035  01D5  3080               	movlw	128
  2036  01D6  027F               	subwf	127,w
  2037  01D7  1D03               	skipz
  2038  01D8  29DB               	goto	u3555
  2039  01D9  3002               	movlw	2
  2040  01DA  0231               	subwf	printf@exp^(0+128),w
  2041  01DB                     u3555:	
  2042  01DB  1C03               	skipc
  2043  01DC  2A1E               	goto	l6947
  2044  01DD                     l6931:	
  2045  01DD  278C               	call	PL32	;select bank 1
  2046  01DE  2770  120A  118A   	fcall	PL21	;call to abstracted procedure
  2047  01E1  3070               	movlw	112
  2048  01E2  00F5               	movwf	?___ftge+3
  2049  01E3  3089               	movlw	137
  2050  01E4  00F6               	movwf	?___ftge+4
  2051  01E5  3040               	movlw	64
  2052  01E6  00F7               	movwf	?___ftge+5
  2053  01E7  254B  120A  118A   	fcall	___ftge
  2054  01EA  1803               	btfsc	3,0
  2055  01EB  29EE               	goto	l6935
  2056  01EC  30F7               	movlw	-9
  2057  01ED  29EF               	goto	L1
  2058  01EE                     l6935:	
  2059  01EE  30F8               	movlw	-8
  2060  01EF                     L1:	
  2061  01EF  07B1               	addwf	printf@exp^(0+128),f
  2062  01F0  1C03               	skipc
  2063  01F1  03B2               	decf	(printf@exp+1)^(0+128),f
  2064  01F2  0831               	movf	printf@exp^(0+128),w
  2065  01F3  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  2066  01F8  2725  120A  118A   	fcall	PL9	;call to abstracted procedure
  2067  01FB  00F2               	movwf	?__tdiv_to_l_
  2068  01FC  0834               	movf	(printf@fval+1)^(0+128),w
  2069  01FD  00F3               	movwf	?__tdiv_to_l_+1
  2070  01FE  0835               	movf	(printf@fval+2)^(0+128),w
  2071  01FF  00F4               	movwf	?__tdiv_to_l_+2
  2072  0200  0825               	movf	printf@integ^(0+128),w
  2073  0201  00F5               	movwf	?__tdiv_to_l_+3
  2074  0202  0826               	movf	(printf@integ+1)^(0+128),w
  2075  0203  00F6               	movwf	?__tdiv_to_l_+4
  2076  0204  0827               	movf	(printf@integ+2)^(0+128),w
  2077  0205  00F7               	movwf	?__tdiv_to_l_+5
  2078  0206  2642  120A  118A   	fcall	__tdiv_to_l_
  2079  0209  0875               	movf	?__tdiv_to_l_+3,w
  2080  020A  1683               	bsf	3,5	;RP0=1, select bank1
  2081  020B  00A3               	movwf	(_printf$3152+3)^(0+128)
  2082  020C  0874               	movf	?__tdiv_to_l_+2,w
  2083  020D  00A2               	movwf	(_printf$3152+2)^(0+128)
  2084  020E  0873               	movf	?__tdiv_to_l_+1,w
  2085  020F  00A1               	movwf	(_printf$3152+1)^(0+128)
  2086  0210  0872               	movf	?__tdiv_to_l_,w
  2087  0211  00A0               	movwf	_printf$3152^(0+128)
  2088  0212  0823               	movf	(_printf$3152+3)^(0+128),w
  2089  0213  00AE               	movwf	(printf@_val+3)^(0+128)
  2090  0214  0822               	movf	(_printf$3152+2)^(0+128),w
  2091  0215  00AD               	movwf	(printf@_val+2)^(0+128)
  2092  0216  0821               	movf	(_printf$3152+1)^(0+128),w
  2093  0217  00AC               	movwf	(printf@_val+1)^(0+128)
  2094  0218  0820               	movf	_printf$3152^(0+128),w
  2095  0219  00AB               	movwf	printf@_val^(0+128)
  2096  021A  01B3               	clrf	printf@fval^(0+128)
  2097  021B  01B4               	clrf	(printf@fval+1)^(0+128)
  2098  021C  01B5               	clrf	(printf@fval+2)^(0+128)
  2099  021D  2A5F               	goto	l6951
  2100  021E                     l6947:	
  2101  021E  278C               	call	PL32	;select bank 1
  2102  021F  0833               	movf	printf@fval^(0+128),w
  2103  0220  2747  120A  118A   	fcall	PL14	;call to abstracted procedure
  2104  0223  259E  120A  118A   	fcall	___fttol
  2105  0226  2717  120A  118A   	fcall	PL6	;call to abstracted procedure
  2106  0229  1683               	bsf	3,5	;RP0=1, select bank1
  2107  022A  00AB               	movwf	printf@_val^(0+128)
  2108  022B  082E               	movf	(printf@_val+3)^(0+128),w
  2109  022C  1283               	bcf	3,5	;RP0=0, select bank0
  2110  022D  00A3               	movwf	?___lltoft+3
  2111  022E  1683               	bsf	3,5	;RP0=1, select bank1
  2112  022F  082D               	movf	(printf@_val+2)^(0+128),w
  2113  0230  1283               	bcf	3,5	;RP0=0, select bank0
  2114  0231  00A2               	movwf	?___lltoft+2
  2115  0232  1683               	bsf	3,5	;RP0=1, select bank1
  2116  0233  082C               	movf	(printf@_val+1)^(0+128),w
  2117  0234  1283               	bcf	3,5	;RP0=0, select bank0
  2118  0235  00A1               	movwf	?___lltoft+1
  2119  0236  1683               	bsf	3,5	;RP0=1, select bank1
  2120  0237  082B               	movf	printf@_val^(0+128),w
  2121  0238  1283               	bcf	3,5	;RP0=0, select bank0
  2122  0239  00A0               	movwf	?___lltoft
  2123  023A  26C2  120A  118A   	fcall	___lltoft
  2124  023D  0820               	movf	?___lltoft,w
  2125  023E  00CC               	movwf	?___ftsub
  2126  023F  0821               	movf	?___lltoft+1,w
  2127  0240  00CD               	movwf	?___ftsub+1
  2128  0241  0822               	movf	?___lltoft+2,w
  2129  0242  00CE               	movwf	?___ftsub+2
  2130  0243  1683               	bsf	3,5	;RP0=1, select bank1
  2131  0244  0833               	movf	printf@fval^(0+128),w
  2132  0245  1283               	bcf	3,5	;RP0=0, select bank0
  2133  0246  00CF               	movwf	?___ftsub+3
  2134  0247  1683               	bsf	3,5	;RP0=1, select bank1
  2135  0248  0834               	movf	(printf@fval+1)^(0+128),w
  2136  0249  1283               	bcf	3,5	;RP0=0, select bank0
  2137  024A  00D0               	movwf	?___ftsub+4
  2138  024B  1683               	bsf	3,5	;RP0=1, select bank1
  2139  024C  0835               	movf	(printf@fval+2)^(0+128),w
  2140  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2141  024E  00D1               	movwf	?___ftsub+5
  2142  024F  26E2  120A  118A   	fcall	___ftsub
  2143  0252  084C               	movf	?___ftsub,w
  2144  0253  1683               	bsf	3,5	;RP0=1, select bank1
  2145  0254  00B3               	movwf	printf@fval^(0+128)
  2146  0255  1283               	bcf	3,5	;RP0=0, select bank0
  2147  0256  084D               	movf	?___ftsub+1,w
  2148  0257  1683               	bsf	3,5	;RP0=1, select bank1
  2149  0258  00B4               	movwf	(printf@fval+1)^(0+128)
  2150  0259  1283               	bcf	3,5	;RP0=0, select bank0
  2151  025A  084E               	movf	?___ftsub+2,w
  2152  025B  1683               	bsf	3,5	;RP0=1, select bank1
  2153  025C  00B5               	movwf	(printf@fval+2)^(0+128)
  2154  025D  01B1               	clrf	printf@exp^(0+128)
  2155  025E  01B2               	clrf	(printf@exp+1)^(0+128)
  2156  025F                     l6951:	
  2157  025F  01B8               	clrf	printf@c^(0+128)
  2158  0260  0AB8               	incf	printf@c^(0+128),f
  2159  0261                     l6957:	
  2160  0261  26FA               	fcall	PL2	;call to abstracted procedure
  2161  0262  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2162  0267  00DB               	movwf	??_printf+1
  2163  0268  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2164  026D  00DC               	movwf	??_printf+2
  2165  026E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2166  0273  00DD               	movwf	??_printf+3
  2167  0274  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2168  0279  00DE               	movwf	??_printf+4
  2169  027A  1683               	bsf	3,5	;RP0=1, select bank1
  2170  027B  022E               	subwf	(printf@_val+3)^(0+128),w
  2171  027C  1D03               	skipz
  2172  027D  2A8E               	goto	u3575
  2173  027E  1283               	bcf	3,5	;RP0=0, select bank0
  2174  027F  085D               	movf	??_printf+3,w
  2175  0280  1683               	bsf	3,5	;RP0=1, select bank1
  2176  0281  022D               	subwf	(printf@_val+2)^(0+128),w
  2177  0282  1D03               	skipz
  2178  0283  2A8E               	goto	u3575
  2179  0284  1283               	bcf	3,5	;RP0=0, select bank0
  2180  0285  085C               	movf	??_printf+2,w
  2181  0286  1683               	bsf	3,5	;RP0=1, select bank1
  2182  0287  022C               	subwf	(printf@_val+1)^(0+128),w
  2183  0288  1D03               	skipz
  2184  0289  2A8E               	goto	u3575
  2185  028A  1283               	bcf	3,5	;RP0=0, select bank0
  2186  028B  085B               	movf	??_printf+1,w
  2187  028C  1683               	bsf	3,5	;RP0=1, select bank1
  2188  028D  022B               	subwf	printf@_val^(0+128),w
  2189  028E                     u3575:	
  2190  028E  1C03               	btfss	3,0
  2191  028F  2A95               	goto	l6965
  2192  0290  0AB8               	incf	printf@c^(0+128),f
  2193  0291  0838               	movf	printf@c^(0+128),w
  2194  0292  3A0A               	xorlw	10
  2195  0293  1D03               	skipz
  2196  0294  2A61               	goto	l6957
  2197  0295                     l6965:	
  2198  0295  0836               	movf	printf@prec^(0+128),w
  2199  0296  0738               	addwf	printf@c^(0+128),w
  2200  0297  1283               	bcf	3,5	;RP0=0, select bank0
  2201  0298  00DA               	movwf	??_printf
  2202  0299  1683               	bsf	3,5	;RP0=1, select bank1
  2203  029A  0837               	movf	(printf@prec+1)^(0+128),w
  2204  029B  1803               	skipnc
  2205  029C  0A37               	incf	(printf@prec+1)^(0+128),w
  2206  029D  1BB8               	btfsc	printf@c^(0+128),7
  2207  029E  3EFF               	addlw	255
  2208  029F  1283               	bcf	3,5	;RP0=0, select bank0
  2209  02A0  00DB               	movwf	??_printf+1
  2210  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  2211  02A2  0831               	movf	printf@exp^(0+128),w
  2212  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  2213  02A4  075A               	addwf	??_printf,w
  2214  02A5  00DC               	movwf	??_printf+2
  2215  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  2216  02A7  0832               	movf	(printf@exp+1)^(0+128),w
  2217  02A8  1803               	skipnc
  2218  02A9  0A32               	incf	(printf@exp+1)^(0+128),w
  2219  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  2220  02AB  075B               	addwf	??_printf+1,w
  2221  02AC  00DD               	movwf	??_printf+3
  2222  02AD  085C               	movf	??_printf+2,w
  2223  02AE  1683               	bsf	3,5	;RP0=1, select bank1
  2224  02AF  02AF               	subwf	printf@width^(0+128),f
  2225  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  2226  02B1  085D               	movf	??_printf+3,w
  2227  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  2228  02B3  1C03               	skipc
  2229  02B4  03B0               	decf	(printf@width+1)^(0+128),f
  2230  02B5  02B0               	subwf	(printf@width+1)^(0+128),f
  2231  02B6  0837               	movf	(printf@prec+1)^(0+128),w
  2232  02B7  0436               	iorwf	printf@prec^(0+128),w
  2233  02B8  1903               	skipnz
  2234  02B9  2ABE               	goto	l6971
  2235  02BA  30FF               	movlw	-1
  2236  02BB  07AF               	addwf	printf@width^(0+128),f
  2237  02BC  1C03               	skipc
  2238  02BD  03B0               	decf	(printf@width+1)^(0+128),f
  2239  02BE                     l6971:	
  2240  02BE  0828               	movf	printf@flag^(0+128),w
  2241  02BF  3903               	andlw	3
  2242  02C0  1D03               	btfss	3,2
  2243  02C1  2AD1               	goto	l6973
  2244  02C2                     l6979:	
  2245  02C2  0830               	movf	(printf@width+1)^(0+128),w
  2246  02C3  3A80               	xorlw	128
  2247  02C4  00FF               	movwf	127
  2248  02C5  3080               	movlw	128
  2249  02C6  027F               	subwf	127,w
  2250  02C7  1D03               	skipz
  2251  02C8  2ACB               	goto	u3615
  2252  02C9  3001               	movlw	1
  2253  02CA  022F               	subwf	printf@width^(0+128),w
  2254  02CB                     u3615:	
  2255  02CB  1C03               	btfss	3,0
  2256  02CC  2AD7               	goto	l6981
  2257  02CD  3020               	movlw	32
  2258  02CE  2509  120A  118A   	fcall	_putch
  2259  02D1                     l6973:	
  2260  02D1  30FF               	movlw	-1
  2261  02D2  278C               	call	PL32	;select bank 1
  2262  02D3  07AF               	addwf	printf@width^(0+128),f
  2263  02D4  1C03               	skipc
  2264  02D5  03B0               	decf	(printf@width+1)^(0+128),f
  2265  02D6  2AC2               	goto	l6979
  2266  02D7                     l6981:	
  2267  02D7  278C               	call	PL32	;select bank 1
  2268  02D8  0828               	movf	printf@flag^(0+128),w
  2269  02D9  3903               	andlw	3
  2270  02DA  1903               	btfsc	3,2
  2271  02DB  2B0A               	goto	l6987
  2272  02DC  302D               	movlw	45
  2273  02DD  2B07               	goto	L2
  2274  02DE                     l6985:	
  2275  02DE  2704  120A  118A   	fcall	PL4	;call to abstracted procedure
  2276  02E1  26FA               	fcall	PL2	;call to abstracted procedure
  2277  02E2  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2278  02E7  00F2               	movwf	?___lldiv
  2279  02E8  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2280  02ED  00F3               	movwf	?___lldiv+1
  2281  02EE  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2282  02F3  00F4               	movwf	?___lldiv+2
  2283  02F4  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2284  02F9  270C  120A  118A   	fcall	PL5	;call to abstracted procedure
  2285  02FC  25F9  120A  118A   	fcall	___lldiv
  2286  02FF  2732  120A  118A   	fcall	PL12	;call to abstracted procedure
  2287  0302  250D  120A  118A   	fcall	___llmod
  2288  0305  0825               	movf	?___llmod,w
  2289  0306  3E30               	addlw	48
  2290  0307                     L2:	
  2291  0307  2509  120A  118A   	fcall	_putch
  2292  030A                     l6987:	
  2293  030A  278C               	call	PL32	;select bank 1
  2294  030B  03B8               	decf	printf@c^(0+128),f
  2295  030C  0F38               	incfsz	printf@c^(0+128),w
  2296  030D  2ADE               	goto	l6985
  2297  030E                     l6993:	
  2298  030E  0832               	movf	(printf@exp+1)^(0+128),w
  2299  030F  3A80               	xorlw	128
  2300  0310  00FF               	movwf	127
  2301  0311  3080               	movlw	128
  2302  0312  027F               	subwf	127,w
  2303  0313  1D03               	skipz
  2304  0314  2B17               	goto	u3645
  2305  0315  3001               	movlw	1
  2306  0316  0231               	subwf	printf@exp^(0+128),w
  2307  0317                     u3645:	
  2308  0317  1C03               	btfss	3,0
  2309  0318  2B23               	goto	l6995
  2310  0319  3030               	movlw	48
  2311  031A  2509  120A  118A   	fcall	_putch
  2312  031D  30FF               	movlw	-1
  2313  031E  278C               	call	PL32	;select bank 1
  2314  031F  07B1               	addwf	printf@exp^(0+128),f
  2315  0320  1C03               	skipc
  2316  0321  03B2               	decf	(printf@exp+1)^(0+128),f
  2317  0322  2B0E               	goto	l6993
  2318  0323                     l6995:	
  2319  0323  278C               	call	PL32	;select bank 1
  2320  0324  0837               	movf	(printf@prec+1)^(0+128),w
  2321  0325  3A80               	xorlw	128
  2322  0326  00FF               	movwf	127
  2323  0327  3080               	movlw	128
  2324  0328  027F               	subwf	127,w
  2325  0329  1D03               	skipz
  2326  032A  2B2D               	goto	u3655
  2327  032B  3009               	movlw	9
  2328  032C  0236               	subwf	printf@prec^(0+128),w
  2329  032D                     u3655:	
  2330  032D  1C03               	skipc
  2331  032E  2B32               	goto	l6999
  2332  032F  3008               	movlw	8
  2333  0330  278C               	call	PL32	;select bank 1
  2334  0331  2B34               	goto	L3
  2335  0332                     l6999:	
  2336  0332  278C               	call	PL32	;select bank 1
  2337  0333  0836               	movf	printf@prec^(0+128),w
  2338  0334                     L3:	
  2339  0334  00B8               	movwf	printf@c^(0+128)
  2340  0335  1283               	bcf	3,5	;RP0=0, select bank0
  2341  0336  00DA               	movwf	??_printf
  2342  0337  01DB               	clrf	??_printf+1
  2343  0338  1BDA               	btfsc	??_printf,7
  2344  0339  03DB               	decf	??_printf+1,f
  2345  033A  1683               	bsf	3,5	;RP0=1, select bank1
  2346  033B  02B6               	subwf	printf@prec^(0+128),f
  2347  033C  1283               	bcf	3,5	;RP0=0, select bank0
  2348  033D  085B               	movf	??_printf+1,w
  2349  033E  1683               	bsf	3,5	;RP0=1, select bank1
  2350  033F  1C03               	skipc
  2351  0340  03B7               	decf	(printf@prec+1)^(0+128),f
  2352  0341  02B7               	subwf	(printf@prec+1)^(0+128),f
  2353  0342  0838               	movf	printf@c^(0+128),w
  2354  0343  1903               	btfsc	3,2
  2355  0344  2B49               	goto	l2238
  2356  0345  302E               	movlw	46
  2357  0346  2509  120A  118A   	fcall	_putch
  2358  0349                     l2238:	
  2359  0349  278C               	call	PL32	;select bank 1
  2360  034A  0838               	movf	printf@c^(0+128),w
  2361  034B  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  2362  0350  0840               	movf	?_scale,w
  2363  0351  00B4               	movwf	?___ftmul+3
  2364  0352  0841               	movf	?_scale+1,w
  2365  0353  00B5               	movwf	?___ftmul+4
  2366  0354  0842               	movf	?_scale+2,w
  2367  0355  00B6               	movwf	?___ftmul+5
  2368  0356  1683               	bsf	3,5	;RP0=1, select bank1
  2369  0357  0833               	movf	printf@fval^(0+128),w
  2370  0358  2752               	fcall	PL16	;call to abstracted procedure
  2371  0359  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2372  035E  0831               	movf	?___ftmul,w
  2373  035F  00A4               	movwf	?___fttol
  2374  0360  0832               	movf	?___ftmul+1,w
  2375  0361  00A5               	movwf	?___fttol+1
  2376  0362  0833               	movf	?___ftmul+2,w
  2377  0363  00A6               	movwf	?___fttol+2
  2378  0364  259E  120A  118A   	fcall	___fttol
  2379  0367  2717  120A  118A   	fcall	PL6	;call to abstracted procedure
  2380  036A  2BD1               	goto	L4
  2381  036B                     l7003:	
  2382  036B  2704  120A  118A   	fcall	PL4	;call to abstracted procedure
  2383  036E  26FA               	fcall	PL2	;call to abstracted procedure
  2384  036F  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2385  0374  00F2               	movwf	?___lldiv
  2386  0375  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2387  037A  00F3               	movwf	?___lldiv+1
  2388  037B  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2389  0380  00F4               	movwf	?___lldiv+2
  2390  0381  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2391  0386  270C  120A  118A   	fcall	PL5	;call to abstracted procedure
  2392  0389  25F9  120A  118A   	fcall	___lldiv
  2393  038C  2732  120A  118A   	fcall	PL12	;call to abstracted procedure
  2394  038F  250D  120A  118A   	fcall	___llmod
  2395  0392  0825               	movf	?___llmod,w
  2396  0393  3E30               	addlw	48
  2397  0394  2509  120A  118A   	fcall	_putch
  2398  0397  278C               	call	PL32	;select bank 1
  2399  0398  26FA               	fcall	PL2	;call to abstracted procedure
  2400  0399  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2401  039E  00A5               	movwf	?___llmod
  2402  039F  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2403  03A4  00A6               	movwf	?___llmod+1
  2404  03A5  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2405  03AA  00A7               	movwf	?___llmod+2
  2406  03AB  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2407  03B0  00A8               	movwf	?___llmod+3
  2408  03B1  1683               	bsf	3,5	;RP0=1, select bank1
  2409  03B2  082E               	movf	(printf@_val+3)^(0+128),w
  2410  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  2411  03B4  00AC               	movwf	?___llmod+7
  2412  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  2413  03B6  082D               	movf	(printf@_val+2)^(0+128),w
  2414  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2415  03B8  00AB               	movwf	?___llmod+6
  2416  03B9  1683               	bsf	3,5	;RP0=1, select bank1
  2417  03BA  082C               	movf	(printf@_val+1)^(0+128),w
  2418  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  2419  03BC  00AA               	movwf	?___llmod+5
  2420  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  2421  03BE  082B               	movf	printf@_val^(0+128),w
  2422  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  2423  03C0  00A9               	movwf	?___llmod+4
  2424  03C1  250D  120A  118A   	fcall	___llmod
  2425  03C4  0828               	movf	?___llmod+3,w
  2426  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  2427  03C6  00AE               	movwf	(printf@_val+3)^(0+128)
  2428  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2429  03C8  0827               	movf	?___llmod+2,w
  2430  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  2431  03CA  00AD               	movwf	(printf@_val+2)^(0+128)
  2432  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  2433  03CC  0826               	movf	?___llmod+1,w
  2434  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  2435  03CE  00AC               	movwf	(printf@_val+1)^(0+128)
  2436  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  2437  03D0  0825               	movf	?___llmod,w
  2438  03D1                     L4:	
  2439  03D1  1683               	bsf	3,5	;RP0=1, select bank1
  2440  03D2  00AB               	movwf	printf@_val^(0+128)
  2441  03D3  03B8               	decf	printf@c^(0+128),f
  2442  03D4  0F38               	incfsz	printf@c^(0+128),w
  2443  03D5  2B6B               	goto	l7003
  2444  03D6                     l7011:	
  2445  03D6  0837               	movf	(printf@prec+1)^(0+128),w
  2446  03D7  0436               	iorwf	printf@prec^(0+128),w
  2447  03D8  1903               	btfsc	3,2
  2448  03D9  2813               	goto	l7079
  2449  03DA  3030               	movlw	48
  2450  03DB  2509  120A  118A   	fcall	_putch
  2451  03DE  30FF               	movlw	-1
  2452  03DF  278C               	call	PL32	;select bank 1
  2453  03E0  07B6               	addwf	printf@prec^(0+128),f
  2454  03E1  1C03               	skipc
  2455  03E2  03B7               	decf	(printf@prec+1)^(0+128),f
  2456  03E3  2BD6               	goto	l7011
  2457  03E4                     l7013:	
  2458  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  2459  03E5  0824               	movf	printf@ap^(0+128),w
  2460  03E6  0084               	movwf	4
  2461  03E7  1383               	bcf	3,7	;select IRP bank0
  2462  03E8  2785  120A  118A   	fcall	PL30	;call to abstracted procedure
  2463  03EB  085A               	movf	??_printf,w
  2464  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  2465  03ED  00AB               	movwf	printf@_val^(0+128)
  2466  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  2467  03EF  085B               	movf	??_printf+1,w
  2468  03F0  1683               	bsf	3,5	;RP0=1, select bank1
  2469  03F1  00AC               	movwf	(printf@_val^(0+128)+1)
  2470  03F2  01AD               	clrf	(printf@_val^(0+128)+2)
  2471  03F3  01AE               	clrf	(printf@_val^(0+128)+3)
  2472  03F4  0AA4               	incf	printf@ap^(0+128),f
  2473  03F5  0AA4               	incf	printf@ap^(0+128),f
  2474  03F6  0837               	movf	(printf@prec+1)^(0+128),w
  2475  03F7  0436               	iorwf	printf@prec^(0+128),w
  2476  03F8  1D03               	skipz
  2477  03F9  2C02               	goto	l7023
  2478  03FA  082E               	movf	(printf@_val+3)^(0+128),w
  2479  03FB  042D               	iorwf	(printf@_val+2)^(0+128),w
  2480  03FC  042C               	iorwf	(printf@_val+1)^(0+128),w
  2481  03FD  042B               	iorwf	printf@_val^(0+128),w
  2482  03FE  1903               	btfsc	3,2
  2483  03FF  0AB6               	incf	printf@prec^(0+128),f
  2484  0400  1903               	skipnz
  2485  0401  0AB7               	incf	(printf@prec+1)^(0+128),f
  2486  0402                     l7023:	
  2487  0402  01B8               	clrf	printf@c^(0+128)
  2488  0403  0AB8               	incf	printf@c^(0+128),f
  2489  0404                     l7029:	
  2490  0404  26FA               	fcall	PL2	;call to abstracted procedure
  2491  0405  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2492  040A  00DB               	movwf	??_printf+1
  2493  040B  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2494  0410  00DC               	movwf	??_printf+2
  2495  0411  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2496  0416  00DD               	movwf	??_printf+3
  2497  0417  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2498  041C  00DE               	movwf	??_printf+4
  2499  041D  1683               	bsf	3,5	;RP0=1, select bank1
  2500  041E  022E               	subwf	(printf@_val+3)^(0+128),w
  2501  041F  1D03               	skipz
  2502  0420  2C31               	goto	u3715
  2503  0421  1283               	bcf	3,5	;RP0=0, select bank0
  2504  0422  085D               	movf	??_printf+3,w
  2505  0423  1683               	bsf	3,5	;RP0=1, select bank1
  2506  0424  022D               	subwf	(printf@_val+2)^(0+128),w
  2507  0425  1D03               	skipz
  2508  0426  2C31               	goto	u3715
  2509  0427  1283               	bcf	3,5	;RP0=0, select bank0
  2510  0428  085C               	movf	??_printf+2,w
  2511  0429  1683               	bsf	3,5	;RP0=1, select bank1
  2512  042A  022C               	subwf	(printf@_val+1)^(0+128),w
  2513  042B  1D03               	skipz
  2514  042C  2C31               	goto	u3715
  2515  042D  1283               	bcf	3,5	;RP0=0, select bank0
  2516  042E  085B               	movf	??_printf+1,w
  2517  042F  1683               	bsf	3,5	;RP0=1, select bank1
  2518  0430  022B               	subwf	printf@_val^(0+128),w
  2519  0431                     u3715:	
  2520  0431  1C03               	btfss	3,0
  2521  0432  2C38               	goto	l7037
  2522  0433  0AB8               	incf	printf@c^(0+128),f
  2523  0434  0838               	movf	printf@c^(0+128),w
  2524  0435  3A0A               	xorlw	10
  2525  0436  1D03               	skipz
  2526  0437  2C04               	goto	l7029
  2527  0438                     l7037:	
  2528  0438  0838               	movf	printf@c^(0+128),w
  2529  0439  275D  120A  118A   	fcall	PL19	;call to abstracted procedure
  2530  043C  0837               	movf	(printf@prec+1)^(0+128),w
  2531  043D  3A80               	xorlw	128
  2532  043E  1283               	bcf	3,5	;RP0=0, select bank0
  2533  043F  025C               	subwf	??_printf+2,w
  2534  0440  1D03               	skipz
  2535  0441  2C46               	goto	u3735
  2536  0442  1683               	bsf	3,5	;RP0=1, select bank1
  2537  0443  0836               	movf	printf@prec^(0+128),w
  2538  0444  1283               	bcf	3,5	;RP0=0, select bank0
  2539  0445  025A               	subwf	??_printf,w
  2540  0446                     u3735:	
  2541  0446  1803               	skipnc
  2542  0447  2C4C               	goto	l7041
  2543  0448  278C               	call	PL32	;select bank 1
  2544  0449  0836               	movf	printf@prec^(0+128),w
  2545  044A  00B8               	movwf	printf@c^(0+128)
  2546  044B  2C64               	goto	l7045
  2547  044C                     l7041:	
  2548  044C  1683               	bsf	3,5	;RP0=1, select bank1
  2549  044D  2767  120A  118A   	fcall	PL20	;call to abstracted procedure
  2550  0450  0837               	movf	(printf@prec+1)^(0+128),w
  2551  0451  3A80               	xorlw	128
  2552  0452  1283               	bcf	3,5	;RP0=0, select bank0
  2553  0453  00DC               	movwf	??_printf+2
  2554  0454  085B               	movf	??_printf+1,w
  2555  0455  3A80               	xorlw	128
  2556  0456  025C               	subwf	??_printf+2,w
  2557  0457  1D03               	skipz
  2558  0458  2C5C               	goto	u3745
  2559  0459  085A               	movf	??_printf,w
  2560  045A  1683               	bsf	3,5	;RP0=1, select bank1
  2561  045B  0236               	subwf	printf@prec^(0+128),w
  2562  045C                     u3745:	
  2563  045C  1803               	skipnc
  2564  045D  2C64               	goto	l7045
  2565  045E  278C               	call	PL32	;select bank 1
  2566  045F  0838               	movf	printf@c^(0+128),w
  2567  0460  00B6               	movwf	printf@prec^(0+128)
  2568  0461  01B7               	clrf	(printf@prec+1)^(0+128)
  2569  0462  1BB6               	btfsc	printf@prec^(0+128),7
  2570  0463  03B7               	decf	(printf@prec+1)^(0+128),f
  2571  0464                     l7045:	
  2572  0464  278C               	call	PL32	;select bank 1
  2573  0465  0830               	movf	(printf@width+1)^(0+128),w
  2574  0466  042F               	iorwf	printf@width^(0+128),w
  2575  0467  1903               	skipnz
  2576  0468  2C71               	goto	l7051
  2577  0469  0828               	movf	printf@flag^(0+128),w
  2578  046A  3903               	andlw	3
  2579  046B  1903               	btfsc	3,2
  2580  046C  2C71               	goto	l7051
  2581  046D  30FF               	movlw	-1
  2582  046E  07AF               	addwf	printf@width^(0+128),f
  2583  046F  1C03               	skipc
  2584  0470  03B0               	decf	(printf@width+1)^(0+128),f
  2585  0471                     l7051:	
  2586  0471  1F29               	btfss	(printf@flag+1)^(0+128),6
  2587  0472  2C8E               	goto	l7059
  2588  0473  0837               	movf	(printf@prec+1)^(0+128),w
  2589  0474  3A80               	xorlw	128
  2590  0475  1283               	bcf	3,5	;RP0=0, select bank0
  2591  0476  00DA               	movwf	??_printf
  2592  0477  1683               	bsf	3,5	;RP0=1, select bank1
  2593  0478  0830               	movf	(printf@width+1)^(0+128),w
  2594  0479  3A80               	xorlw	128
  2595  047A  1283               	bcf	3,5	;RP0=0, select bank0
  2596  047B  025A               	subwf	??_printf,w
  2597  047C  1D03               	skipz
  2598  047D  2C81               	goto	u3785
  2599  047E  1683               	bsf	3,5	;RP0=1, select bank1
  2600  047F  082F               	movf	printf@width^(0+128),w
  2601  0480  0236               	subwf	printf@prec^(0+128),w
  2602  0481                     u3785:	
  2603  0481  1803               	skipnc
  2604  0482  2C8B               	goto	l7057
  2605  0483  278C               	call	PL32	;select bank 1
  2606  0484  0836               	movf	printf@prec^(0+128),w
  2607  0485  02AF               	subwf	printf@width^(0+128),f
  2608  0486  0837               	movf	(printf@prec+1)^(0+128),w
  2609  0487  1C03               	skipc
  2610  0488  03B0               	decf	(printf@width+1)^(0+128),f
  2611  0489  02B0               	subwf	(printf@width+1)^(0+128),f
  2612  048A  2C8E               	goto	l7059
  2613  048B                     l7057:	
  2614  048B  278C               	call	PL32	;select bank 1
  2615  048C  01AF               	clrf	printf@width^(0+128)
  2616  048D  01B0               	clrf	(printf@width+1)^(0+128)
  2617  048E                     l7059:	
  2618  048E  0838               	movf	printf@c^(0+128),w
  2619  048F  275D  120A  118A   	fcall	PL19	;call to abstracted procedure
  2620  0492  0830               	movf	(printf@width+1)^(0+128),w
  2621  0493  3A80               	xorlw	128
  2622  0494  1283               	bcf	3,5	;RP0=0, select bank0
  2623  0495  025C               	subwf	??_printf+2,w
  2624  0496  1D03               	skipz
  2625  0497  2C9C               	goto	u3795
  2626  0498  1683               	bsf	3,5	;RP0=1, select bank1
  2627  0499  082F               	movf	printf@width^(0+128),w
  2628  049A  1283               	bcf	3,5	;RP0=0, select bank0
  2629  049B  025A               	subwf	??_printf,w
  2630  049C                     u3795:	
  2631  049C  1803               	skipnc
  2632  049D  2CAA               	goto	l7063
  2633  049E  1683               	bsf	3,5	;RP0=1, select bank1
  2634  049F  2767  120A  118A   	fcall	PL20	;call to abstracted procedure
  2635  04A2  02AF               	subwf	printf@width^(0+128),f
  2636  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  2637  04A4  085B               	movf	??_printf+1,w
  2638  04A5  1683               	bsf	3,5	;RP0=1, select bank1
  2639  04A6  1C03               	skipc
  2640  04A7  03B0               	decf	(printf@width+1)^(0+128),f
  2641  04A8  02B0               	subwf	(printf@width+1)^(0+128),f
  2642  04A9  2CAD               	goto	l7065
  2643  04AA                     l7063:	
  2644  04AA  278C               	call	PL32	;select bank 1
  2645  04AB  01AF               	clrf	printf@width^(0+128)
  2646  04AC  01B0               	clrf	(printf@width+1)^(0+128)
  2647  04AD                     l7065:	
  2648  04AD  0830               	movf	(printf@width+1)^(0+128),w
  2649  04AE  042F               	iorwf	printf@width^(0+128),w
  2650  04AF  1903               	skipnz
  2651  04B0  2CBE               	goto	l7071
  2652  04B1                     l7067:	
  2653  04B1  3020               	movlw	32
  2654  04B2  2509  120A  118A   	fcall	_putch
  2655  04B5  30FF               	movlw	-1
  2656  04B6  278C               	call	PL32	;select bank 1
  2657  04B7  07AF               	addwf	printf@width^(0+128),f
  2658  04B8  1C03               	skipc
  2659  04B9  03B0               	decf	(printf@width+1)^(0+128),f
  2660  04BA  0830               	movf	(printf@width+1)^(0+128),w
  2661  04BB  042F               	iorwf	printf@width^(0+128),w
  2662  04BC  1D03               	skipz
  2663  04BD  2CB1               	goto	l7067
  2664  04BE                     l7071:	
  2665  04BE  0828               	movf	printf@flag^(0+128),w
  2666  04BF  3903               	andlw	3
  2667  04C0  1903               	btfsc	3,2
  2668  04C1  2CC6               	goto	l7077
  2669  04C2  302D               	movlw	45
  2670  04C3                     L5:	
  2671  04C3  2509  120A  118A   	fcall	_putch
  2672  04C6                     l7077:	
  2673  04C6  30FF               	movlw	-1
  2674  04C7  278C               	call	PL32	;select bank 1
  2675  04C8  07B6               	addwf	printf@prec^(0+128),f
  2676  04C9  1C03               	skipc
  2677  04CA  03B7               	decf	(printf@prec+1)^(0+128),f
  2678  04CB  0A36               	incf	printf@prec^(0+128),w
  2679  04CC  1903               	skipnz
  2680  04CD  0A37               	incf	(printf@prec+1)^(0+128),w
  2681  04CE  1903               	btfsc	3,2
  2682  04CF  2813               	goto	l7079
  2683  04D0  300A               	movlw	10
  2684  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  2685  04D2  00A5               	movwf	?___llmod
  2686  04D3  01A6               	clrf	?___llmod+1
  2687  04D4  01A7               	clrf	?___llmod+2
  2688  04D5  01A8               	clrf	?___llmod+3
  2689  04D6  1683               	bsf	3,5	;RP0=1, select bank1
  2690  04D7  0836               	movf	printf@prec^(0+128),w
  2691  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  2692  04D9  00DA               	movwf	??_printf
  2693  04DA  1003               	clrc
  2694  04DB  0DDA               	rlf	??_printf,f
  2695  04DC  1003               	clrc
  2696  04DD  0D5A               	rlf	??_printf,w
  2697  04DE  3E4F               	addlw	low (_dpowers-__stringbase)
  2698  04DF  0084               	movwf	4
  2699  04E0  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2700  04E5  00F2               	movwf	?___lldiv
  2701  04E6  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2702  04EB  00F3               	movwf	?___lldiv+1
  2703  04EC  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2704  04F1  00F4               	movwf	?___lldiv+2
  2705  04F2  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2706  04F7  270C  120A  118A   	fcall	PL5	;call to abstracted procedure
  2707  04FA  25F9  120A  118A   	fcall	___lldiv
  2708  04FD  2732  120A  118A   	fcall	PL12	;call to abstracted procedure
  2709  0500  250D  120A  118A   	fcall	___llmod
  2710  0503  0825               	movf	?___llmod,w
  2711  0504  3E30               	addlw	48
  2712  0505  1683               	bsf	3,5	;RP0=1, select bank1
  2713  0506  00B8               	movwf	printf@c^(0+128)
  2714  0507  2CC3               	goto	L5
  2715  0508                     l2266:	
  2716  0508  0008               	return
  2717  0509                     __end_of_printf:	
  2718  0509                     __ptext520:	
  2719 ;; =============== function _printf ends ============
  2720                           
  2721                           
  2722 ;; *************** function _putch *****************
  2723 ;; Defined at:
  2724 ;;		line 63 in file "C:\Online Class\HK6\Practice_Micro\CCP\ccp.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;  c               1    wreg     unsigned char 
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;  c               1   11[COMMON] unsigned char 
  2729 ;; Return value:  Size  Location     Type
  2730 ;;		None               void
  2731 ;; Registers used:
  2732 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/20
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2738 ;;      Params:         0       0       0       0       0
  2739 ;;      Locals:         1       0       0       0       0
  2740 ;;      Temps:          0       0       0       0       0
  2741 ;;      Totals:         1       0       0       0       0
  2742 ;;Total ram usage:        1 bytes
  2743 ;; Hardware stack levels used:    1
  2744 ;; Hardware stack levels required when called:    4
  2745 ;; This function calls:
  2746 ;;		_lcd_putc
  2747 ;; This function is called by:
  2748 ;;		_printf
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751  0509                     _putch:	
  2752                           
  2753                           ; Regs used in _putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2754                           ;putch@c stored from wreg
  2755  0509  00FB               	movwf	putch@c
  2756                           
  2757                           ;ccp.c: 64: lcd_putc(c);
  2758  050A  120A  158A  2AB6   	ljmp	_lcd_putc
  2759  050D                     __end_of_putch:	
  2760  050D                     __ptext537:	
  2761 ;; =============== function ___ftneg ends ============
  2762                           
  2763                           
  2764 ;; *************** function ___llmod *****************
  2765 ;; Defined at:
  2766 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\llmod.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;  divisor         4    5[BANK0 ] unsigned long 
  2769 ;;  dividend        4    9[BANK0 ] unsigned long 
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;  counter         1   10[COMMON] unsigned char 
  2772 ;; Return value:  Size  Location     Type
  2773 ;;                  4    5[BANK0 ] unsigned long 
  2774 ;; Registers used:
  2775 ;;		wreg, status,2, status,0
  2776 ;; Tracked objects:
  2777 ;;		On entry : 60/0
  2778 ;;		On exit  : 60/0
  2779 ;;		Unchanged: FFF9F/0
  2780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2781 ;;      Params:         0       8       0       0       0
  2782 ;;      Locals:         1       0       0       0       0
  2783 ;;      Temps:          0       0       0       0       0
  2784 ;;      Totals:         1       8       0       0       0
  2785 ;;Total ram usage:        9 bytes
  2786 ;; Hardware stack levels used:    1
  2787 ;; Hardware stack levels required when called:    1
  2788 ;; This function calls:
  2789 ;;		Nothing
  2790 ;; This function is called by:
  2791 ;;		_printf
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794  050D                     ___llmod:	
  2795                           
  2796                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2797  050D  0828               	movf	___llmod@divisor+3,w
  2798  050E  0427               	iorwf	___llmod@divisor+2,w
  2799  050F  0426               	iorwf	___llmod@divisor+1,w
  2800  0510  0425               	iorwf	___llmod@divisor,w
  2801  0511  1903               	skipnz
  2802  0512  2D42               	goto	l6359
  2803  0513  01FA               	clrf	___llmod@counter
  2804  0514                     L13:	
  2805  0514  0AFA               	incf	___llmod@counter,f
  2806  0515  1BA8               	btfsc	___llmod@divisor+3,7
  2807  0516  2D1D               	goto	l6351
  2808  0517  1003               	clrc
  2809  0518  0DA5               	rlf	___llmod@divisor,f
  2810  0519  0DA6               	rlf	___llmod@divisor+1,f
  2811  051A  0DA7               	rlf	___llmod@divisor+2,f
  2812  051B  0DA8               	rlf	___llmod@divisor+3,f
  2813  051C  2D14               	goto	L13
  2814  051D                     l6351:	
  2815  051D  0828               	movf	___llmod@divisor+3,w
  2816  051E  022C               	subwf	___llmod@dividend+3,w
  2817  051F  1D03               	skipz
  2818  0520  2D2B               	goto	u2525
  2819  0521  0827               	movf	___llmod@divisor+2,w
  2820  0522  022B               	subwf	___llmod@dividend+2,w
  2821  0523  1D03               	skipz
  2822  0524  2D2B               	goto	u2525
  2823  0525  0826               	movf	___llmod@divisor+1,w
  2824  0526  022A               	subwf	___llmod@dividend+1,w
  2825  0527  1D03               	skipz
  2826  0528  2D2B               	goto	u2525
  2827  0529  0825               	movf	___llmod@divisor,w
  2828  052A  0229               	subwf	___llmod@dividend,w
  2829  052B                     u2525:	
  2830  052B  1C03               	skipc
  2831  052C  2D3C               	goto	L14
  2832  052D  0825               	movf	___llmod@divisor,w
  2833  052E  02A9               	subwf	___llmod@dividend,f
  2834  052F  0826               	movf	___llmod@divisor+1,w
  2835  0530  1C03               	skipc
  2836  0531  0F26               	incfsz	___llmod@divisor+1,w
  2837  0532  02AA               	subwf	___llmod@dividend+1,f
  2838  0533  0827               	movf	___llmod@divisor+2,w
  2839  0534  1C03               	skipc
  2840  0535  0F27               	incfsz	___llmod@divisor+2,w
  2841  0536  02AB               	subwf	___llmod@dividend+2,f
  2842  0537  0828               	movf	___llmod@divisor+3,w
  2843  0538  1C03               	skipc
  2844  0539  0F28               	incfsz	___llmod@divisor+3,w
  2845  053A  02AC               	subwf	___llmod@dividend+3,f
  2846  053B  1003               	clrc
  2847  053C                     L14:	
  2848  053C  0CA8               	rrf	___llmod@divisor+3,f
  2849  053D  0CA7               	rrf	___llmod@divisor+2,f
  2850  053E  0CA6               	rrf	___llmod@divisor+1,f
  2851  053F  0CA5               	rrf	___llmod@divisor,f
  2852  0540  0BFA               	decfsz	___llmod@counter,f
  2853  0541  2D1D               	goto	l6351
  2854  0542                     l6359:	
  2855  0542  082C               	movf	___llmod@dividend+3,w
  2856  0543  00A8               	movwf	?___llmod+3
  2857  0544  082B               	movf	___llmod@dividend+2,w
  2858  0545  00A7               	movwf	?___llmod+2
  2859  0546  082A               	movf	___llmod@dividend+1,w
  2860  0547  00A6               	movwf	?___llmod+1
  2861  0548  0829               	movf	___llmod@dividend,w
  2862  0549  00A5               	movwf	?___llmod
  2863  054A  0008               	return
  2864  054B                     __end_of___llmod:	
  2865  054B                     __ptext535:	
  2866 ;; =============== function ___lldiv ends ============
  2867                           
  2868                           
  2869 ;; *************** function ___ftge *****************
  2870 ;; Defined at:
  2871 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftge.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;  ff1             3    2[COMMON] float 
  2874 ;;  ff2             3    5[COMMON] float 
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;		None
  2877 ;; Return value:  Size  Location     Type
  2878 ;;		None               void
  2879 ;; Registers used:
  2880 ;;		wreg, status,2, status,0
  2881 ;; Tracked objects:
  2882 ;;		On entry : 60/20
  2883 ;;		On exit  : 60/20
  2884 ;;		Unchanged: FFF9F/0
  2885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2886 ;;      Params:         6       0       0       0       0
  2887 ;;      Locals:         0       0       0       0       0
  2888 ;;      Temps:          0       0       0       0       0
  2889 ;;      Totals:         6       0       0       0       0
  2890 ;;Total ram usage:        6 bytes
  2891 ;; Hardware stack levels used:    1
  2892 ;; Hardware stack levels required when called:    1
  2893 ;; This function calls:
  2894 ;;		Nothing
  2895 ;; This function is called by:
  2896 ;;		_printf
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899  054B                     ___ftge:	
  2900                           
  2901                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  2902  054B  1FF4               	btfss	___ftge@ff1+2,7
  2903  054C  2D5A               	goto	l6375
  2904  054D  0872               	movf	___ftge@ff1,w
  2905  054E  3C00               	sublw	0
  2906  054F  00F2               	movwf	___ftge@ff1
  2907  0550  0873               	movf	___ftge@ff1+1,w
  2908  0551  1C03               	skipc
  2909  0552  0F73               	incfsz	___ftge@ff1+1,w
  2910  0553  3C00               	sublw	0
  2911  0554  00F3               	movwf	___ftge@ff1+1
  2912  0555  0874               	movf	___ftge@ff1+2,w
  2913  0556  1C03               	skipc
  2914  0557  0F74               	incfsz	___ftge@ff1+2,w
  2915  0558  3C80               	sublw	128
  2916  0559  00F4               	movwf	___ftge@ff1+2
  2917  055A                     l6375:	
  2918  055A  1FF7               	btfss	___ftge@ff2+2,7
  2919  055B  2D69               	goto	l6379
  2920  055C  0875               	movf	___ftge@ff2,w
  2921  055D  3C00               	sublw	0
  2922  055E  00F5               	movwf	___ftge@ff2
  2923  055F  0876               	movf	___ftge@ff2+1,w
  2924  0560  1C03               	skipc
  2925  0561  0F76               	incfsz	___ftge@ff2+1,w
  2926  0562  3C00               	sublw	0
  2927  0563  00F6               	movwf	___ftge@ff2+1
  2928  0564  0877               	movf	___ftge@ff2+2,w
  2929  0565  1C03               	skipc
  2930  0566  0F77               	incfsz	___ftge@ff2+2,w
  2931  0567  3C80               	sublw	128
  2932  0568  00F7               	movwf	___ftge@ff2+2
  2933  0569                     l6379:	
  2934  0569  3080               	movlw	128
  2935  056A  06F4               	xorwf	___ftge@ff1+2,f
  2936  056B  06F7               	xorwf	___ftge@ff2+2,f
  2937  056C  0877               	movf	___ftge@ff2+2,w
  2938  056D  0274               	subwf	___ftge@ff1+2,w
  2939  056E  1D03               	skipz
  2940  056F  0008               	return
  2941  0570  0876               	movf	___ftge@ff2+1,w
  2942  0571  0273               	subwf	___ftge@ff1+1,w
  2943  0572  1D03               	skipz
  2944  0573  0008               	return
  2945  0574  0875               	movf	___ftge@ff2,w
  2946  0575  0272               	subwf	___ftge@ff1,w
  2947  0576  0008               	return
  2948  0577                     __end_of___ftge:	
  2949  0577                     __ptext547:	
  2950 ;; =============== function __tdiv_to_l_ ends ============
  2951                           
  2952                           
  2953 ;; *************** function _isdigit *****************
  2954 ;; Defined at:
  2955 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isdigit.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;  c               1    wreg     unsigned char 
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;  c               1    3[COMMON] unsigned char 
  2960 ;; Return value:  Size  Location     Type
  2961 ;;		None               void
  2962 ;; Registers used:
  2963 ;;		wreg, status,2, status,0
  2964 ;; Tracked objects:
  2965 ;;		On entry : 60/20
  2966 ;;		On exit  : 60/20
  2967 ;;		Unchanged: FFF9F/0
  2968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2969 ;;      Params:         0       0       0       0       0
  2970 ;;      Locals:         2       0       0       0       0
  2971 ;;      Temps:          0       0       0       0       0
  2972 ;;      Totals:         2       0       0       0       0
  2973 ;;Total ram usage:        2 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; Hardware stack levels required when called:    1
  2976 ;; This function calls:
  2977 ;;		Nothing
  2978 ;; This function is called by:
  2979 ;;		_printf
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982  0577                     _isdigit:	
  2983                           
  2984                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2985                           ;isdigit@c stored from wreg
  2986  0577  00F3               	movwf	isdigit@c
  2987  0578  303A               	movlw	58
  2988  0579  01F2               	clrf	_isdigit$3660
  2989  057A  0273               	subwf	isdigit@c,w
  2990  057B  1803               	skipnc
  2991  057C  2D83               	goto	l6061
  2992  057D  3030               	movlw	48
  2993  057E  0273               	subwf	isdigit@c,w
  2994  057F  1C03               	skipc
  2995  0580  2D83               	goto	l6061
  2996  0581  01F2               	clrf	_isdigit$3660
  2997  0582  0AF2               	incf	_isdigit$3660,f
  2998  0583                     l6061:	
  2999  0583  0C72               	rrf	_isdigit$3660,w
  3000  0584  0008               	return
  3001  0585                     __end_of_isdigit:	
  3002  0585                     __ptext543:	
  3003 ;; =============== function ___lbdiv ends ============
  3004                           
  3005                           
  3006 ;; *************** function ___wmul *****************
  3007 ;; Defined at:
  3008 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;  multiplier      2    2[COMMON] unsigned int 
  3011 ;;  multiplicand    2    4[COMMON] unsigned int 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;  product         2    6[COMMON] unsigned int 
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  2    2[COMMON] unsigned int 
  3016 ;; Registers used:
  3017 ;;		wreg, status,2, status,0
  3018 ;; Tracked objects:
  3019 ;;		On entry : 60/20
  3020 ;;		On exit  : 60/20
  3021 ;;		Unchanged: FFF9F/0
  3022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3023 ;;      Params:         4       0       0       0       0
  3024 ;;      Locals:         2       0       0       0       0
  3025 ;;      Temps:          0       0       0       0       0
  3026 ;;      Totals:         6       0       0       0       0
  3027 ;;Total ram usage:        6 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; Hardware stack levels required when called:    1
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_fround
  3034 ;;		_scale
  3035 ;;		_printf
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038  0585                     ___wmul:	
  3039                           
  3040                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3041  0585  01F6               	clrf	___wmul@product
  3042  0586  01F7               	clrf	___wmul@product+1
  3043  0587                     l6177:	
  3044  0587  1C72               	btfss	___wmul@multiplier,0
  3045  0588  2D8F               	goto	l6181
  3046  0589  0874               	movf	___wmul@multiplicand,w
  3047  058A  07F6               	addwf	___wmul@product,f
  3048  058B  1803               	skipnc
  3049  058C  0AF7               	incf	___wmul@product+1,f
  3050  058D  0875               	movf	___wmul@multiplicand+1,w
  3051  058E  07F7               	addwf	___wmul@product+1,f
  3052  058F                     l6181:	
  3053  058F  1003               	clrc
  3054  0590  0DF4               	rlf	___wmul@multiplicand,f
  3055  0591  0DF5               	rlf	___wmul@multiplicand+1,f
  3056  0592  1003               	clrc
  3057  0593  0CF3               	rrf	___wmul@multiplier+1,f
  3058  0594  0CF2               	rrf	___wmul@multiplier,f
  3059  0595  0873               	movf	___wmul@multiplier+1,w
  3060  0596  0472               	iorwf	___wmul@multiplier,w
  3061  0597  1D03               	skipz
  3062  0598  2D87               	goto	l6177
  3063  0599  0877               	movf	___wmul@product+1,w
  3064  059A  00F3               	movwf	?___wmul+1
  3065  059B  0876               	movf	___wmul@product,w
  3066  059C  00F2               	movwf	?___wmul
  3067  059D  0008               	return
  3068  059E                     __end_of___wmul:	
  3069  059E                     __ptext539:	
  3070 ;; =============== function ___awdiv ends ============
  3071                           
  3072                           
  3073 ;; *************** function ___fttol *****************
  3074 ;; Defined at:
  3075 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;  f1              3    4[BANK0 ] float 
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;  lval            4   12[BANK0 ] unsigned long 
  3080 ;;  exp1            1   16[BANK0 ] unsigned char 
  3081 ;;  sign1           1   11[BANK0 ] unsigned char 
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  4    4[BANK0 ] long 
  3084 ;; Registers used:
  3085 ;;		wreg, status,2, status,0
  3086 ;; Tracked objects:
  3087 ;;		On entry : 60/0
  3088 ;;		On exit  : 60/0
  3089 ;;		Unchanged: FFF9F/0
  3090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3091 ;;      Params:         0       4       0       0       0
  3092 ;;      Locals:         0       6       0       0       0
  3093 ;;      Temps:          0       3       0       0       0
  3094 ;;      Totals:         0      13       0       0       0
  3095 ;;Total ram usage:       13 bytes
  3096 ;; Hardware stack levels used:    1
  3097 ;; Hardware stack levels required when called:    1
  3098 ;; This function calls:
  3099 ;;		Nothing
  3100 ;; This function is called by:
  3101 ;;		_printf
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104  059E                     ___fttol:	
  3105                           
  3106                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3107  059E  277E  120A  118A   	fcall	PL28	;call to abstracted procedure
  3108  05A1  1003               	clrc
  3109  05A2  0D29               	rlf	??___fttol+1,w
  3110  05A3  0D2A               	rlf	??___fttol+2,w
  3111  05A4  00B0               	movwf	___fttol@exp1
  3112  05A5  08B0               	movf	___fttol@exp1,f
  3113  05A6  1D03               	skipz
  3114  05A7  2DAD               	goto	l6265
  3115  05A8                     l6263:	
  3116  05A8  01A4               	clrf	?___fttol
  3117  05A9  01A5               	clrf	?___fttol+1
  3118  05AA  01A6               	clrf	?___fttol+2
  3119  05AB  01A7               	clrf	?___fttol+3
  3120  05AC  0008               	return
  3121  05AD                     l6265:	
  3122  05AD  277E  120A  118A   	fcall	PL28	;call to abstracted procedure
  3123  05B0  3017               	movlw	23
  3124  05B1                     u2365:	
  3125  05B1  1003               	clrc
  3126  05B2  0CAA               	rrf	??___fttol+2,f
  3127  05B3  0CA9               	rrf	??___fttol+1,f
  3128  05B4  0CA8               	rrf	??___fttol,f
  3129  05B5  3EFF               	addlw	-1
  3130  05B6  1D03               	skipz
  3131  05B7  2DB1               	goto	u2365
  3132  05B8  0828               	movf	??___fttol,w
  3133  05B9  00AB               	movwf	___fttol@sign1
  3134  05BA  17A5               	bsf	___fttol@f1+1,7
  3135  05BB  01A6               	clrf	___fttol@f1+2
  3136  05BC  0824               	movf	___fttol@f1,w
  3137  05BD  00AC               	movwf	___fttol@lval
  3138  05BE  0825               	movf	___fttol@f1+1,w
  3139  05BF  00AD               	movwf	___fttol@lval+1
  3140  05C0  0826               	movf	___fttol@f1+2,w
  3141  05C1  00AE               	movwf	___fttol@lval+2
  3142  05C2  308E               	movlw	142
  3143  05C3  01AF               	clrf	___fttol@lval+3
  3144  05C4  02B0               	subwf	___fttol@exp1,f
  3145  05C5  1FB0               	btfss	___fttol@exp1,7
  3146  05C6  2DD4               	goto	l6285
  3147  05C7  0830               	movf	___fttol@exp1,w
  3148  05C8  3A80               	xorlw	128
  3149  05C9  3E8F               	addlw	143
  3150  05CA  1C03               	btfss	3,0
  3151  05CB  2DA8               	goto	l6263
  3152  05CC                     l6281:	
  3153  05CC  1003               	clrc
  3154  05CD  0CAF               	rrf	___fttol@lval+3,f
  3155  05CE  0CAE               	rrf	___fttol@lval+2,f
  3156  05CF  0CAD               	rrf	___fttol@lval+1,f
  3157  05D0  0CAC               	rrf	___fttol@lval,f
  3158  05D1  0FB0               	incfsz	___fttol@exp1,f
  3159  05D2  2DCC               	goto	l6281
  3160  05D3  2DE2               	goto	l6291
  3161  05D4                     l6285:	
  3162  05D4  3018               	movlw	24
  3163  05D5  0230               	subwf	___fttol@exp1,w
  3164  05D6  1803               	btfsc	3,0
  3165  05D7  2DA8               	goto	l6263
  3166  05D8                     l3386:	
  3167  05D8  08B0               	movf	___fttol@exp1,f
  3168  05D9  1903               	btfsc	3,2
  3169  05DA  2DE2               	goto	l6291
  3170  05DB  1003               	clrc
  3171  05DC  0DAC               	rlf	___fttol@lval,f
  3172  05DD  0DAD               	rlf	___fttol@lval+1,f
  3173  05DE  0DAE               	rlf	___fttol@lval+2,f
  3174  05DF  0DAF               	rlf	___fttol@lval+3,f
  3175  05E0  03B0               	decf	___fttol@exp1,f
  3176  05E1  2DD8               	goto	l3386
  3177  05E2                     l6291:	
  3178  05E2  082B               	movf	___fttol@sign1,w
  3179  05E3  1903               	btfsc	3,2
  3180  05E4  2DF0               	goto	l6295
  3181  05E5  09AC               	comf	___fttol@lval,f
  3182  05E6  09AD               	comf	___fttol@lval+1,f
  3183  05E7  09AE               	comf	___fttol@lval+2,f
  3184  05E8  09AF               	comf	___fttol@lval+3,f
  3185  05E9  0AAC               	incf	___fttol@lval,f
  3186  05EA  1903               	skipnz
  3187  05EB  0AAD               	incf	___fttol@lval+1,f
  3188  05EC  1903               	skipnz
  3189  05ED  0AAE               	incf	___fttol@lval+2,f
  3190  05EE  1903               	skipnz
  3191  05EF  0AAF               	incf	___fttol@lval+3,f
  3192  05F0                     l6295:	
  3193  05F0  082F               	movf	___fttol@lval+3,w
  3194  05F1  00A7               	movwf	?___fttol+3
  3195  05F2  082E               	movf	___fttol@lval+2,w
  3196  05F3  00A6               	movwf	?___fttol+2
  3197  05F4  082D               	movf	___fttol@lval+1,w
  3198  05F5  00A5               	movwf	?___fttol+1
  3199  05F6  082C               	movf	___fttol@lval,w
  3200  05F7  00A4               	movwf	?___fttol
  3201  05F8  0008               	return
  3202  05F9                     __end_of___fttol:	
  3203  05F9                     __ptext534:	
  3204 ;; =============== function ___awmod ends ============
  3205                           
  3206                           
  3207 ;; *************** function ___lldiv *****************
  3208 ;; Defined at:
  3209 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lldiv.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;  divisor         4    2[COMMON] unsigned long 
  3212 ;;  dividend        4    6[COMMON] unsigned long 
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;  quotient        4    0[BANK0 ] unsigned long 
  3215 ;;  counter         1    4[BANK0 ] unsigned char 
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  4    2[COMMON] unsigned long 
  3218 ;; Registers used:
  3219 ;;		wreg, status,2, status,0
  3220 ;; Tracked objects:
  3221 ;;		On entry : 60/20
  3222 ;;		On exit  : 60/0
  3223 ;;		Unchanged: FFF9F/0
  3224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3225 ;;      Params:         8       0       0       0       0
  3226 ;;      Locals:         0       5       0       0       0
  3227 ;;      Temps:          0       0       0       0       0
  3228 ;;      Totals:         8       5       0       0       0
  3229 ;;Total ram usage:       13 bytes
  3230 ;; Hardware stack levels used:    1
  3231 ;; Hardware stack levels required when called:    1
  3232 ;; This function calls:
  3233 ;;		Nothing
  3234 ;; This function is called by:
  3235 ;;		_printf
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238  05F9                     ___lldiv:	
  3239                           
  3240                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3241  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  3242  05FA  01A0               	clrf	___lldiv@quotient
  3243  05FB  01A1               	clrf	___lldiv@quotient+1
  3244  05FC  01A2               	clrf	___lldiv@quotient+2
  3245  05FD  01A3               	clrf	___lldiv@quotient+3
  3246  05FE  0875               	movf	___lldiv@divisor+3,w
  3247  05FF  0474               	iorwf	___lldiv@divisor+2,w
  3248  0600  0473               	iorwf	___lldiv@divisor+1,w
  3249  0601  0472               	iorwf	___lldiv@divisor,w
  3250  0602  1903               	skipnz
  3251  0603  2E39               	goto	l6413
  3252  0604  01A4               	clrf	___lldiv@counter
  3253  0605                     L10:	
  3254  0605  0AA4               	incf	___lldiv@counter,f
  3255  0606  1BF5               	btfsc	___lldiv@divisor+3,7
  3256  0607  2E0E               	goto	l6401
  3257  0608  1003               	clrc
  3258  0609  0DF2               	rlf	___lldiv@divisor,f
  3259  060A  0DF3               	rlf	___lldiv@divisor+1,f
  3260  060B  0DF4               	rlf	___lldiv@divisor+2,f
  3261  060C  0DF5               	rlf	___lldiv@divisor+3,f
  3262  060D  2E05               	goto	L10
  3263  060E                     l6401:	
  3264  060E  1003               	clrc
  3265  060F  0DA0               	rlf	___lldiv@quotient,f
  3266  0610  0DA1               	rlf	___lldiv@quotient+1,f
  3267  0611  0DA2               	rlf	___lldiv@quotient+2,f
  3268  0612  0DA3               	rlf	___lldiv@quotient+3,f
  3269  0613  0875               	movf	___lldiv@divisor+3,w
  3270  0614  0279               	subwf	___lldiv@dividend+3,w
  3271  0615  1D03               	skipz
  3272  0616  2E21               	goto	u2605
  3273  0617  0874               	movf	___lldiv@divisor+2,w
  3274  0618  0278               	subwf	___lldiv@dividend+2,w
  3275  0619  1D03               	skipz
  3276  061A  2E21               	goto	u2605
  3277  061B  0873               	movf	___lldiv@divisor+1,w
  3278  061C  0277               	subwf	___lldiv@dividend+1,w
  3279  061D  1D03               	skipz
  3280  061E  2E21               	goto	u2605
  3281  061F  0872               	movf	___lldiv@divisor,w
  3282  0620  0276               	subwf	___lldiv@dividend,w
  3283  0621                     u2605:	
  3284  0621  1C03               	skipc
  3285  0622  2E33               	goto	L11
  3286  0623  0872               	movf	___lldiv@divisor,w
  3287  0624  02F6               	subwf	___lldiv@dividend,f
  3288  0625  0873               	movf	___lldiv@divisor+1,w
  3289  0626  1C03               	skipc
  3290  0627  0F73               	incfsz	___lldiv@divisor+1,w
  3291  0628  02F7               	subwf	___lldiv@dividend+1,f
  3292  0629  0874               	movf	___lldiv@divisor+2,w
  3293  062A  1C03               	skipc
  3294  062B  0F74               	incfsz	___lldiv@divisor+2,w
  3295  062C  02F8               	subwf	___lldiv@dividend+2,f
  3296  062D  0875               	movf	___lldiv@divisor+3,w
  3297  062E  1C03               	skipc
  3298  062F  0F75               	incfsz	___lldiv@divisor+3,w
  3299  0630  02F9               	subwf	___lldiv@dividend+3,f
  3300  0631  1420               	bsf	___lldiv@quotient,0
  3301  0632  1003               	clrc
  3302  0633                     L11:	
  3303  0633  0CF5               	rrf	___lldiv@divisor+3,f
  3304  0634  0CF4               	rrf	___lldiv@divisor+2,f
  3305  0635  0CF3               	rrf	___lldiv@divisor+1,f
  3306  0636  0CF2               	rrf	___lldiv@divisor,f
  3307  0637  0BA4               	decfsz	___lldiv@counter,f
  3308  0638  2E0E               	goto	l6401
  3309  0639                     l6413:	
  3310  0639  0823               	movf	___lldiv@quotient+3,w
  3311  063A  00F5               	movwf	?___lldiv+3
  3312  063B  0822               	movf	___lldiv@quotient+2,w
  3313  063C  00F4               	movwf	?___lldiv+2
  3314  063D  0821               	movf	___lldiv@quotient+1,w
  3315  063E  00F3               	movwf	?___lldiv+1
  3316  063F  0820               	movf	___lldiv@quotient,w
  3317  0640  00F2               	movwf	?___lldiv
  3318  0641  0008               	return
  3319  0642                     __end_of___lldiv:	
  3320  0642                     __ptext546:	
  3321 ;; =============== function __div_to_l_ ends ============
  3322                           
  3323                           
  3324 ;; *************** function __tdiv_to_l_ *****************
  3325 ;; Defined at:
  3326 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdivl.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  f1              3    2[COMMON] float 
  3329 ;;  f2              3    5[COMMON] float 
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;  quot            4    0[BANK0 ] unsigned long 
  3332 ;;  exp1            1    5[BANK0 ] unsigned char 
  3333 ;;  cntr            1    4[BANK0 ] unsigned char 
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  4    2[COMMON] unsigned long 
  3336 ;; Registers used:
  3337 ;;		wreg, status,2, status,0
  3338 ;; Tracked objects:
  3339 ;;		On entry : 60/20
  3340 ;;		On exit  : 60/0
  3341 ;;		Unchanged: FFF9F/0
  3342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3343 ;;      Params:         6       0       0       0       0
  3344 ;;      Locals:         0       6       0       0       0
  3345 ;;      Temps:          3       0       0       0       0
  3346 ;;      Totals:         9       6       0       0       0
  3347 ;;Total ram usage:       15 bytes
  3348 ;; Hardware stack levels used:    1
  3349 ;; Hardware stack levels required when called:    1
  3350 ;; This function calls:
  3351 ;;		Nothing
  3352 ;; This function is called by:
  3353 ;;		_printf
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356  0642                     __tdiv_to_l_:	
  3357                           
  3358                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  3359  0642  0872               	movf	__tdiv_to_l_@f1,w
  3360  0643  00F8               	movwf	??__tdiv_to_l_
  3361  0644  0873               	movf	__tdiv_to_l_@f1+1,w
  3362  0645  00F9               	movwf	??__tdiv_to_l_+1
  3363  0646  0874               	movf	__tdiv_to_l_@f1+2,w
  3364  0647  00FA               	movwf	??__tdiv_to_l_+2
  3365  0648  1003               	clrc
  3366  0649  0D79               	rlf	??__tdiv_to_l_+1,w
  3367  064A  0D7A               	rlf	??__tdiv_to_l_+2,w
  3368  064B  1283               	bcf	3,5	;RP0=0, select bank0
  3369  064C  00A5               	movwf	__tdiv_to_l_@exp1
  3370  064D  08A5               	movf	__tdiv_to_l_@exp1,f
  3371  064E  1D03               	skipz
  3372  064F  2E55               	goto	l6069
  3373  0650                     l6067:	
  3374  0650  01F2               	clrf	?__tdiv_to_l_
  3375  0651  01F3               	clrf	?__tdiv_to_l_+1
  3376  0652  01F4               	clrf	?__tdiv_to_l_+2
  3377  0653  01F5               	clrf	?__tdiv_to_l_+3
  3378  0654  0008               	return
  3379  0655                     l6069:	
  3380  0655  0875               	movf	__tdiv_to_l_@f2,w
  3381  0656  00F8               	movwf	??__tdiv_to_l_
  3382  0657  0876               	movf	__tdiv_to_l_@f2+1,w
  3383  0658  00F9               	movwf	??__tdiv_to_l_+1
  3384  0659  0877               	movf	__tdiv_to_l_@f2+2,w
  3385  065A  00FA               	movwf	??__tdiv_to_l_+2
  3386  065B  1003               	clrc
  3387  065C  0D79               	rlf	??__tdiv_to_l_+1,w
  3388  065D  0D7A               	rlf	??__tdiv_to_l_+2,w
  3389  065E  00A4               	movwf	__tdiv_to_l_@cntr
  3390  065F  08A4               	movf	__tdiv_to_l_@cntr,f
  3391  0660  1903               	btfsc	3,2
  3392  0661  2E50               	goto	l6067
  3393  0662  307F               	movlw	127
  3394  0663  17F3               	bsf	__tdiv_to_l_@f1+1,7
  3395  0664  01F4               	clrf	__tdiv_to_l_@f1+2
  3396  0665  17F6               	bsf	__tdiv_to_l_@f2+1,7
  3397  0666  01F7               	clrf	__tdiv_to_l_@f2+2
  3398  0667  01A0               	clrf	__tdiv_to_l_@quot
  3399  0668  01A1               	clrf	__tdiv_to_l_@quot+1
  3400  0669  01A2               	clrf	__tdiv_to_l_@quot+2
  3401  066A  01A3               	clrf	__tdiv_to_l_@quot+3
  3402  066B  02A5               	subwf	__tdiv_to_l_@exp1,f
  3403  066C  3098               	movlw	152
  3404  066D  0724               	addwf	__tdiv_to_l_@cntr,w
  3405  066E  00F8               	movwf	??__tdiv_to_l_
  3406  066F  02A5               	subwf	__tdiv_to_l_@exp1,f
  3407  0670  3018               	movlw	24
  3408  0671  00A4               	movwf	__tdiv_to_l_@cntr
  3409  0672                     l6083:	
  3410  0672  1003               	clrc
  3411  0673  0DA0               	rlf	__tdiv_to_l_@quot,f
  3412  0674  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  3413  0675  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  3414  0676  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  3415  0677  0877               	movf	__tdiv_to_l_@f2+2,w
  3416  0678  0274               	subwf	__tdiv_to_l_@f1+2,w
  3417  0679  1D03               	skipz
  3418  067A  2E81               	goto	u2015
  3419  067B  0876               	movf	__tdiv_to_l_@f2+1,w
  3420  067C  0273               	subwf	__tdiv_to_l_@f1+1,w
  3421  067D  1D03               	skipz
  3422  067E  2E81               	goto	u2015
  3423  067F  0875               	movf	__tdiv_to_l_@f2,w
  3424  0680  0272               	subwf	__tdiv_to_l_@f1,w
  3425  0681                     u2015:	
  3426  0681  1C03               	skipc
  3427  0682  2E8F               	goto	L19
  3428  0683  0875               	movf	__tdiv_to_l_@f2,w
  3429  0684  02F2               	subwf	__tdiv_to_l_@f1,f
  3430  0685  0876               	movf	__tdiv_to_l_@f2+1,w
  3431  0686  1C03               	skipc
  3432  0687  0F76               	incfsz	__tdiv_to_l_@f2+1,w
  3433  0688  02F3               	subwf	__tdiv_to_l_@f1+1,f
  3434  0689  0877               	movf	__tdiv_to_l_@f2+2,w
  3435  068A  1C03               	skipc
  3436  068B  0A77               	incf	__tdiv_to_l_@f2+2,w
  3437  068C  02F4               	subwf	__tdiv_to_l_@f1+2,f
  3438  068D  1420               	bsf	__tdiv_to_l_@quot,0
  3439  068E  1003               	clrc
  3440  068F                     L19:	
  3441  068F  0DF2               	rlf	__tdiv_to_l_@f1,f
  3442  0690  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  3443  0691  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  3444  0692  0BA4               	decfsz	__tdiv_to_l_@cntr,f
  3445  0693  2E72               	goto	l6083
  3446  0694  1FA5               	btfss	__tdiv_to_l_@exp1,7
  3447  0695  2EA3               	goto	l6103
  3448  0696  0825               	movf	__tdiv_to_l_@exp1,w
  3449  0697  3A80               	xorlw	128
  3450  0698  3E97               	addlw	151
  3451  0699  1C03               	btfss	3,0
  3452  069A  2E50               	goto	l6067
  3453  069B                     l6099:	
  3454  069B  1003               	clrc
  3455  069C  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  3456  069D  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  3457  069E  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  3458  069F  0CA0               	rrf	__tdiv_to_l_@quot,f
  3459  06A0  0FA5               	incfsz	__tdiv_to_l_@exp1,f
  3460  06A1  2E9B               	goto	l6099
  3461  06A2  2EB1               	goto	l6109
  3462  06A3                     l6103:	
  3463  06A3  3018               	movlw	24
  3464  06A4  0225               	subwf	__tdiv_to_l_@exp1,w
  3465  06A5  1803               	btfsc	3,0
  3466  06A6  2E50               	goto	l6067
  3467  06A7                     l3524:	
  3468  06A7  08A5               	movf	__tdiv_to_l_@exp1,f
  3469  06A8  1903               	btfsc	3,2
  3470  06A9  2EB1               	goto	l6109
  3471  06AA  1003               	clrc
  3472  06AB  0DA0               	rlf	__tdiv_to_l_@quot,f
  3473  06AC  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  3474  06AD  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  3475  06AE  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  3476  06AF  03A5               	decf	__tdiv_to_l_@exp1,f
  3477  06B0  2EA7               	goto	l3524
  3478  06B1                     l6109:	
  3479  06B1  0823               	movf	__tdiv_to_l_@quot+3,w
  3480  06B2  00F5               	movwf	?__tdiv_to_l_+3
  3481  06B3  0822               	movf	__tdiv_to_l_@quot+2,w
  3482  06B4  00F4               	movwf	?__tdiv_to_l_+2
  3483  06B5  0821               	movf	__tdiv_to_l_@quot+1,w
  3484  06B6  00F3               	movwf	?__tdiv_to_l_+1
  3485  06B7  0820               	movf	__tdiv_to_l_@quot,w
  3486  06B8  00F2               	movwf	?__tdiv_to_l_
  3487  06B9  0008               	return
  3488  06BA                     __end_of__tdiv_to_l_:	
  3489  06BA                     __ptext536:	
  3490 ;; =============== function ___ftge ends ============
  3491                           
  3492                           
  3493 ;; *************** function ___ftneg *****************
  3494 ;; Defined at:
  3495 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftneg.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;  f1              3    2[COMMON] float 
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;		None
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  3    2[COMMON] float 
  3502 ;; Registers used:
  3503 ;;		wreg
  3504 ;; Tracked objects:
  3505 ;;		On entry : 160/20
  3506 ;;		On exit  : 160/20
  3507 ;;		Unchanged: FFE9F/0
  3508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3509 ;;      Params:         3       0       0       0       0
  3510 ;;      Locals:         0       0       0       0       0
  3511 ;;      Temps:          0       0       0       0       0
  3512 ;;      Totals:         3       0       0       0       0
  3513 ;;Total ram usage:        3 bytes
  3514 ;; Hardware stack levels used:    1
  3515 ;; Hardware stack levels required when called:    1
  3516 ;; This function calls:
  3517 ;;		Nothing
  3518 ;; This function is called by:
  3519 ;;		_printf
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522  06BA                     ___ftneg:	
  3523                           
  3524                           ; Regs used in ___ftneg: [wreg]
  3525  06BA  0874               	movf	___ftneg@f1+2,w
  3526  06BB  0473               	iorwf	___ftneg@f1+1,w
  3527  06BC  0472               	iorwf	___ftneg@f1,w
  3528  06BD  1903               	skipnz
  3529  06BE  0008               	return
  3530  06BF  3080               	movlw	128
  3531  06C0  06F4               	xorwf	___ftneg@f1+2,f
  3532  06C1  0008               	return
  3533  06C2                     __end_of___ftneg:	
  3534  06C2                     __ptext527:	
  3535 ;; =============== function _lcd_init ends ============
  3536                           
  3537                           
  3538 ;; *************** function ___lltoft *****************
  3539 ;; Defined at:
  3540 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lltoft.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;  c               4    0[BANK0 ] unsigned long 
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;  exp             1   10[COMMON] unsigned char 
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  3    0[BANK0 ] float 
  3547 ;; Registers used:
  3548 ;;		wreg, status,2, status,0, pclath, cstack
  3549 ;; Tracked objects:
  3550 ;;		On entry : 60/0
  3551 ;;		On exit  : 60/0
  3552 ;;		Unchanged: FFF9F/0
  3553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3554 ;;      Params:         0       4       0       0       0
  3555 ;;      Locals:         1       0       0       0       0
  3556 ;;      Temps:          0       0       0       0       0
  3557 ;;      Totals:         1       4       0       0       0
  3558 ;;Total ram usage:        5 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; Hardware stack levels required when called:    2
  3561 ;; This function calls:
  3562 ;;		___ftpack
  3563 ;; This function is called by:
  3564 ;;		_main
  3565 ;;		_printf
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568  06C2                     ___lltoft:	
  3569                           
  3570                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  3571  06C2  308E               	movlw	142
  3572  06C3  00FA               	movwf	___lltoft@exp
  3573  06C4                     l6685:	
  3574  06C4  30FF               	movlw	255
  3575  06C5  0523               	andwf	___lltoft@c+3,w
  3576  06C6  1903               	btfsc	3,2
  3577  06C7  2ECF               	goto	l6687
  3578  06C8  1003               	clrc
  3579  06C9  0CA3               	rrf	___lltoft@c+3,f
  3580  06CA  0CA2               	rrf	___lltoft@c+2,f
  3581  06CB  0CA1               	rrf	___lltoft@c+1,f
  3582  06CC  0CA0               	rrf	___lltoft@c,f
  3583  06CD  0AFA               	incf	___lltoft@exp,f
  3584  06CE  2EC4               	goto	l6685
  3585  06CF                     l6687:	
  3586  06CF  0820               	movf	___lltoft@c,w
  3587  06D0  00F2               	movwf	?___ftpack
  3588  06D1  0821               	movf	___lltoft@c+1,w
  3589  06D2  00F3               	movwf	?___ftpack+1
  3590  06D3  0822               	movf	___lltoft@c+2,w
  3591  06D4  00F4               	movwf	?___ftpack+2
  3592  06D5  087A               	movf	___lltoft@exp,w
  3593  06D6  00F5               	movwf	?___ftpack+3
  3594  06D7  01F6               	clrf	?___ftpack+4
  3595  06D8  120A  158A  2769   	fcall	___ftpack
  3596  06DB  0872               	movf	?___ftpack,w
  3597  06DC  00A0               	movwf	?___lltoft
  3598  06DD  0873               	movf	?___ftpack+1,w
  3599  06DE  00A1               	movwf	?___lltoft+1
  3600  06DF  0874               	movf	?___ftpack+2,w
  3601  06E0  00A2               	movwf	?___lltoft+2
  3602  06E1  0008               	return
  3603  06E2                     __end_of___lltoft:	
  3604  06E2                     __ptext522:	
  3605 ;; =============== function _lcd_putc ends ============
  3606                           
  3607                           
  3608 ;; *************** function ___ftsub *****************
  3609 ;; Defined at:
  3610 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftsub.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;  f2              3   44[BANK0 ] float 
  3613 ;;  f1              3   47[BANK0 ] float 
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;		None
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  3   44[BANK0 ] float 
  3618 ;; Registers used:
  3619 ;;		wreg, status,2, status,0, pclath, cstack
  3620 ;; Tracked objects:
  3621 ;;		On entry : 60/0
  3622 ;;		On exit  : 60/0
  3623 ;;		Unchanged: FFF9F/0
  3624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3625 ;;      Params:         0       6       0       0       0
  3626 ;;      Locals:         0       0       0       0       0
  3627 ;;      Temps:          0       0       0       0       0
  3628 ;;      Totals:         0       6       0       0       0
  3629 ;;Total ram usage:        6 bytes
  3630 ;; Hardware stack levels used:    1
  3631 ;; Hardware stack levels required when called:    3
  3632 ;; This function calls:
  3633 ;;		___ftadd
  3634 ;; This function is called by:
  3635 ;;		_printf
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638  06E2                     ___ftsub:	
  3639                           
  3640                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  3641  06E2  3080               	movlw	128
  3642  06E3  06CE               	xorwf	___ftsub@f2+2,f
  3643  06E4  084F               	movf	___ftsub@f1,w
  3644  06E5  00C0               	movwf	?___ftadd
  3645  06E6  0850               	movf	___ftsub@f1+1,w
  3646  06E7  00C1               	movwf	?___ftadd+1
  3647  06E8  0851               	movf	___ftsub@f1+2,w
  3648  06E9  00C2               	movwf	?___ftadd+2
  3649  06EA  084C               	movf	___ftsub@f2,w
  3650  06EB  00C3               	movwf	?___ftadd+3
  3651  06EC  084D               	movf	___ftsub@f2+1,w
  3652  06ED  00C4               	movwf	?___ftadd+4
  3653  06EE  084E               	movf	___ftsub@f2+2,w
  3654  06EF  00C5               	movwf	?___ftadd+5
  3655  06F0  160A  118A  273E   	fcall	___ftadd
  3656  06F3  0840               	movf	?___ftadd,w
  3657  06F4  00CC               	movwf	?___ftsub
  3658  06F5  0841               	movf	?___ftadd+1,w
  3659  06F6  00CD               	movwf	?___ftsub+1
  3660  06F7  0842               	movf	?___ftadd+2,w
  3661  06F8  00CE               	movwf	?___ftsub+2
  3662  06F9  0008               	return
  3663  06FA                     __end_of___ftsub:	
  3664  06FA                     PL2:	
  3665  06FA  0838               	movf	printf@c^(0+128),w
  3666  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  3667  06FC  00DA               	movwf	??_printf
  3668  06FD  1003               	clrc
  3669  06FE  0DDA               	rlf	??_printf,f
  3670  06FF  1003               	clrc
  3671  0700  0D5A               	rlf	??_printf,w
  3672  0701  3E4F               	addlw	low (_dpowers-__stringbase)
  3673  0702  0084               	movwf	4
  3674  0703  0008               	return
  3675  0704                     PL4:	
  3676  0704  300A               	movlw	10
  3677  0705  1283               	bcf	3,5	;RP0=0, select bank0
  3678  0706  00A5               	movwf	?___llmod
  3679  0707  01A6               	clrf	?___llmod+1
  3680  0708  01A7               	clrf	?___llmod+2
  3681  0709  01A8               	clrf	?___llmod+3
  3682  070A  1683               	bsf	3,5	;RP0=1, select bank1
  3683  070B  0008               	return
  3684  070C                     PL5:	
  3685  070C  00F5               	movwf	?___lldiv+3
  3686  070D  1683               	bsf	3,5	;RP0=1, select bank1
  3687  070E  082E               	movf	(printf@_val+3)^(0+128),w
  3688  070F  00F9               	movwf	?___lldiv+7
  3689  0710  082D               	movf	(printf@_val+2)^(0+128),w
  3690  0711  00F8               	movwf	?___lldiv+6
  3691  0712  082C               	movf	(printf@_val+1)^(0+128),w
  3692  0713  00F7               	movwf	?___lldiv+5
  3693  0714  082B               	movf	printf@_val^(0+128),w
  3694  0715  00F6               	movwf	?___lldiv+4
  3695  0716  0008               	return
  3696  0717                     PL6:	
  3697  0717  0827               	movf	?___fttol+3,w
  3698  0718  1683               	bsf	3,5	;RP0=1, select bank1
  3699  0719  00AE               	movwf	(printf@_val+3)^(0+128)
  3700  071A  1283               	bcf	3,5	;RP0=0, select bank0
  3701  071B  0826               	movf	?___fttol+2,w
  3702  071C  1683               	bsf	3,5	;RP0=1, select bank1
  3703  071D  00AD               	movwf	(printf@_val+2)^(0+128)
  3704  071E  1283               	bcf	3,5	;RP0=0, select bank0
  3705  071F  0825               	movf	?___fttol+1,w
  3706  0720  1683               	bsf	3,5	;RP0=1, select bank1
  3707  0721  00AC               	movwf	(printf@_val+1)^(0+128)
  3708  0722  1283               	bcf	3,5	;RP0=0, select bank0
  3709  0723  0824               	movf	?___fttol,w
  3710  0724  0008               	return
  3711  0725                     PL9:	
  3712  0725  0840               	movf	?_scale,w
  3713  0726  1683               	bsf	3,5	;RP0=1, select bank1
  3714  0727  00A5               	movwf	printf@integ^(0+128)
  3715  0728  1283               	bcf	3,5	;RP0=0, select bank0
  3716  0729  0841               	movf	?_scale+1,w
  3717  072A  1683               	bsf	3,5	;RP0=1, select bank1
  3718  072B  00A6               	movwf	(printf@integ+1)^(0+128)
  3719  072C  1283               	bcf	3,5	;RP0=0, select bank0
  3720  072D  0842               	movf	?_scale+2,w
  3721  072E  1683               	bsf	3,5	;RP0=1, select bank1
  3722  072F  00A7               	movwf	(printf@integ+2)^(0+128)
  3723  0730  0833               	movf	printf@fval^(0+128),w
  3724  0731  0008               	return
  3725  0732                     PL12:	
  3726  0732  0875               	movf	?___lldiv+3,w
  3727  0733  00AC               	movwf	?___llmod+7
  3728  0734  0874               	movf	?___lldiv+2,w
  3729  0735  00AB               	movwf	?___llmod+6
  3730  0736  0873               	movf	?___lldiv+1,w
  3731  0737  00AA               	movwf	?___llmod+5
  3732  0738  0872               	movf	?___lldiv,w
  3733  0739  00A9               	movwf	?___llmod+4
  3734  073A  0008               	return
  3735  073B                     PL13:	
  3736  073B  0772               	addwf	?___wmul,w
  3737  073C  1283               	bcf	3,5	;RP0=0, select bank0
  3738  073D  00DA               	movwf	??_printf
  3739  073E  3000               	movlw	0
  3740  073F  1803               	skipnc
  3741  0740  3001               	movlw	1
  3742  0741  0773               	addwf	?___wmul+1,w
  3743  0742  00DB               	movwf	??_printf+1
  3744  0743  085A               	movf	??_printf,w
  3745  0744  3ED0               	addlw	208
  3746  0745  1683               	bsf	3,5	;RP0=1, select bank1
  3747  0746  0008               	return
  3748  0747                     PL14:	
  3749  0747  1283               	bcf	3,5	;RP0=0, select bank0
  3750  0748  00A4               	movwf	?___fttol
  3751  0749  1683               	bsf	3,5	;RP0=1, select bank1
  3752  074A  0834               	movf	(printf@fval+1)^(0+128),w
  3753  074B  1283               	bcf	3,5	;RP0=0, select bank0
  3754  074C  00A5               	movwf	?___fttol+1
  3755  074D  1683               	bsf	3,5	;RP0=1, select bank1
  3756  074E  0835               	movf	(printf@fval+2)^(0+128),w
  3757  074F  1283               	bcf	3,5	;RP0=0, select bank0
  3758  0750  00A6               	movwf	?___fttol+2
  3759  0751  0008               	return
  3760  0752                     PL16:	
  3761  0752  1283               	bcf	3,5	;RP0=0, select bank0
  3762  0753  00B1               	movwf	?___ftmul
  3763  0754  1683               	bsf	3,5	;RP0=1, select bank1
  3764  0755  0834               	movf	(printf@fval+1)^(0+128),w
  3765  0756  1283               	bcf	3,5	;RP0=0, select bank0
  3766  0757  00B2               	movwf	?___ftmul+1
  3767  0758  1683               	bsf	3,5	;RP0=1, select bank1
  3768  0759  0835               	movf	(printf@fval+2)^(0+128),w
  3769  075A  1283               	bcf	3,5	;RP0=0, select bank0
  3770  075B  00B3               	movwf	?___ftmul+2
  3771  075C  0008               	return
  3772  075D                     PL19:	
  3773  075D  1283               	bcf	3,5	;RP0=0, select bank0
  3774  075E  00DA               	movwf	??_printf
  3775  075F  01DB               	clrf	??_printf+1
  3776  0760  1BDA               	btfsc	??_printf,7
  3777  0761  03DB               	decf	??_printf+1,f
  3778  0762  085B               	movf	??_printf+1,w
  3779  0763  3A80               	xorlw	128
  3780  0764  00DC               	movwf	??_printf+2
  3781  0765  1683               	bsf	3,5	;RP0=1, select bank1
  3782  0766  0008               	return
  3783  0767                     PL20:	
  3784  0767  1303               	bcf	3,6	;RP1=0, select bank1
  3785  0768  0838               	movf	printf@c^(0+128),w
  3786  0769  1283               	bcf	3,5	;RP0=0, select bank0
  3787  076A  00DA               	movwf	??_printf
  3788  076B  01DB               	clrf	??_printf+1
  3789  076C  1BDA               	btfsc	??_printf,7
  3790  076D  03DB               	decf	??_printf+1,f
  3791  076E  1683               	bsf	3,5	;RP0=1, select bank1
  3792  076F  0008               	return
  3793  0770                     PL21:	
  3794  0770  0825               	movf	printf@integ^(0+128),w
  3795  0771  00F2               	movwf	?___ftge
  3796  0772  0826               	movf	(printf@integ+1)^(0+128),w
  3797  0773  00F3               	movwf	?___ftge+1
  3798  0774  0827               	movf	(printf@integ+2)^(0+128),w
  3799  0775  00F4               	movwf	?___ftge+2
  3800  0776  0008               	return
  3801  0777                     PL27:	
  3802  0777  1283               	bcf	3,5	;RP0=0, select bank0
  3803  0778  085B               	movf	??_printf+1,w
  3804  0779  1803               	skipnc
  3805  077A  3E01               	addlw	1
  3806  077B  3EFF               	addlw	255
  3807  077C  1683               	bsf	3,5	;RP0=1, select bank1
  3808  077D  0008               	return
  3809  077E                     PL28:	
  3810  077E  0824               	movf	___fttol@f1,w
  3811  077F  00A8               	movwf	??___fttol
  3812  0780  0825               	movf	___fttol@f1+1,w
  3813  0781  00A9               	movwf	??___fttol+1
  3814  0782  0826               	movf	___fttol@f1+2,w
  3815  0783  00AA               	movwf	??___fttol+2
  3816  0784  0008               	return
  3817  0785                     PL30:	
  3818  0785  0800               	movf	0,w
  3819  0786  1283               	bcf	3,5	;RP0=0, select bank0
  3820  0787  00DA               	movwf	??_printf
  3821  0788  0A84               	incf	4,f
  3822  0789  0800               	movf	0,w
  3823  078A  00DB               	movwf	??_printf+1
  3824  078B  0008               	return
  3825  078C                     PL32:	
  3826  078C  1683               	bsf	3,5	;RP0=1, select bank1
  3827  078D  1303               	bcf	3,6	;RP1=0, select bank1
  3828  078E  0008               	return
  3829                           
  3830                           	psect	text524
  3831  094C                     __ptext524:	
  3832 ;; =============== function _scale ends ============
  3833                           
  3834                           
  3835 ;; *************** function _fround *****************
  3836 ;; Defined at:
  3837 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;  prec            1    wreg     unsigned char 
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;  prec            1   53[BANK0 ] unsigned char 
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  3   44[BANK0 ] unsigned char 
  3844 ;; Registers used:
  3845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3846 ;; Tracked objects:
  3847 ;;		On entry : 60/20
  3848 ;;		On exit  : 60/0
  3849 ;;		Unchanged: FFF9F/0
  3850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3851 ;;      Params:         0       3       0       0       0
  3852 ;;      Locals:         0       7       0       0       0
  3853 ;;      Temps:          0       0       0       0       0
  3854 ;;      Totals:         0      10       0       0       0
  3855 ;;Total ram usage:       10 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; Hardware stack levels required when called:    3
  3858 ;; This function calls:
  3859 ;;		___lbmod
  3860 ;;		___bmul
  3861 ;;		___lbdiv
  3862 ;;		___ftmul
  3863 ;; This function is called by:
  3864 ;;		_printf
  3865 ;; This function uses a non-reentrant model
  3866 ;;
  3867  094C                     _fround:	
  3868                           
  3869                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3870                           ;fround@prec stored from wreg
  3871  094C  1283               	bcf	3,5	;RP0=0, select bank0
  3872  094D  00D5               	movwf	fround@prec
  3873  094E  306E               	movlw	110
  3874  094F  0255               	subwf	fround@prec,w
  3875  0950  1C03               	skipc
  3876  0951  29D7               	goto	l6751
  3877  0952  3003               	movlw	3
  3878  0953  00FB               	movwf	?___bmul
  3879  0954  300A               	movlw	10
  3880  0955  00F7               	movwf	?___lbdiv
  3881  0956  3064               	movlw	100
  3882  0957  00F2               	movwf	?___lbmod
  3883  0958  0855               	movf	fround@prec,w
  3884  0959  226C  120A  158A   	fcall	___lbmod
  3885  095C  2251               	fcall	___lbdiv
  3886  095D  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  3887  0962  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  3888  0963  0084               	movwf	4
  3889  0964  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3890  0969  00B1               	movwf	?___ftmul
  3891  096A  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3892  096F  00B2               	movwf	?___ftmul+1
  3893  0970  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3894  0975  00B3               	movwf	?___ftmul+2
  3895  0976  3003               	movlw	3
  3896  0977  00FB               	movwf	?___bmul
  3897  0978  3064               	movlw	100
  3898  0979  00F7               	movwf	?___lbdiv
  3899  097A  0855               	movf	fround@prec,w
  3900  097B  2251               	fcall	___lbdiv
  3901  097C  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  3902  0981  3E37               	addlw	low ((__npowers_-__stringbase+54))
  3903  0982  0084               	movwf	4
  3904  0983  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3905  0988  00B4               	movwf	?___ftmul+3
  3906  0989  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3907  098E  00B5               	movwf	?___ftmul+4
  3908  098F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3909  0994  00B6               	movwf	?___ftmul+5
  3910  0995  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  3911  099A  2297  120A  158A   	fcall	PL31	;call to abstracted procedure
  3912  099D  3003               	movlw	3
  3913  099E  00FB               	movwf	?___bmul
  3914  099F  300A               	movlw	10
  3915  09A0  00F2               	movwf	?___lbmod
  3916  09A1  0855               	movf	fround@prec,w
  3917  09A2  226C               	fcall	___lbmod
  3918  09A3  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  3919  09A8  3E01               	addlw	low (__npowers_-__stringbase)
  3920  09A9  0084               	movwf	4
  3921  09AA  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3922  09AF  00B1               	movwf	?___ftmul
  3923  09B0  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3924  09B5  00B2               	movwf	?___ftmul+1
  3925  09B6  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3926  09BB  228F               	fcall	PL22	;call to abstracted procedure
  3927  09BC  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  3928  09C1  0831               	movf	?___ftmul,w
  3929  09C2  00CF               	movwf	_fround$4103
  3930  09C3  0832               	movf	?___ftmul+1,w
  3931  09C4  00D0               	movwf	_fround$4103+1
  3932  09C5  0833               	movf	?___ftmul+2,w
  3933  09C6  00D1               	movwf	_fround$4103+2
  3934  09C7  303F               	movlw	63
  3935  09C8  01B1               	clrf	?___ftmul
  3936  09C9  01B2               	clrf	?___ftmul+1
  3937  09CA  00B3               	movwf	?___ftmul+2
  3938  09CB  084F               	movf	_fround$4103,w
  3939  09CC  00B4               	movwf	?___ftmul+3
  3940  09CD  0850               	movf	_fround$4103+1,w
  3941  09CE  00B5               	movwf	?___ftmul+4
  3942  09CF  0851               	movf	_fround$4103+2,w
  3943  09D0  00B6               	movwf	?___ftmul+5
  3944  09D1  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  3945  09D6  2A88               	ljmp	PL17	;call to abstracted procedure
  3946  09D7                     l6751:	
  3947  09D7  300B               	movlw	11
  3948  09D8  0255               	subwf	fround@prec,w
  3949  09D9  1C03               	skipc
  3950  09DA  2A2B               	goto	l6759
  3951  09DB  3003               	movlw	3
  3952  09DC  00FB               	movwf	?___bmul
  3953  09DD  300A               	movlw	10
  3954  09DE  00F2               	movwf	?___lbmod
  3955  09DF  0855               	movf	fround@prec,w
  3956  09E0  226C               	fcall	___lbmod
  3957  09E1  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  3958  09E6  3E01               	addlw	low (__npowers_-__stringbase)
  3959  09E7  0084               	movwf	4
  3960  09E8  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3961  09ED  00B1               	movwf	?___ftmul
  3962  09EE  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3963  09F3  00B2               	movwf	?___ftmul+1
  3964  09F4  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3965  09F9  00B3               	movwf	?___ftmul+2
  3966  09FA  3003               	movlw	3
  3967  09FB  00FB               	movwf	?___bmul
  3968  09FC  300A               	movlw	10
  3969  09FD  00F7               	movwf	?___lbdiv
  3970  09FE  0855               	movf	fround@prec,w
  3971  09FF  2251               	fcall	___lbdiv
  3972  0A00  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  3973  0A05  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  3974  0A06  0084               	movwf	4
  3975  0A07  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3976  0A0C  00B4               	movwf	?___ftmul+3
  3977  0A0D  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3978  0A12  00B5               	movwf	?___ftmul+4
  3979  0A13  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  3980  0A18  00B6               	movwf	?___ftmul+5
  3981  0A19  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  3982  0A1E  2297  120A  158A   	fcall	PL31	;call to abstracted procedure
  3983  0A21  303F               	movlw	63
  3984  0A22  01B1               	clrf	?___ftmul
  3985  0A23  01B2               	clrf	?___ftmul+1
  3986  0A24  228F               	fcall	PL22	;call to abstracted procedure
  3987  0A25  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  3988  0A2A  2A88               	ljmp	PL17	;call to abstracted procedure
  3989  0A2B                     l6759:	
  3990  0A2B  303F               	movlw	63
  3991  0A2C  01B1               	clrf	?___ftmul
  3992  0A2D  01B2               	clrf	?___ftmul+1
  3993  0A2E  00B3               	movwf	?___ftmul+2
  3994  0A2F  3003               	movlw	3
  3995  0A30  00FB               	movwf	?___bmul
  3996  0A31  0855               	movf	fround@prec,w
  3997  0A32  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  3998  0A37  3E01               	addlw	low (__npowers_-__stringbase)
  3999  0A38  0084               	movwf	4
  4000  0A39  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4001  0A3E  00B4               	movwf	?___ftmul+3
  4002  0A3F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4003  0A44  00B5               	movwf	?___ftmul+4
  4004  0A45  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4005  0A4A  00B6               	movwf	?___ftmul+5
  4006  0A4B  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4007  0A50  2A88               	ljmp	PL17	;call to abstracted procedure
  4008  0A51                     __end_of_fround:	
  4009  0A51                     __ptext542:	
  4010 ;; =============== function ___lbmod ends ============
  4011                           
  4012                           
  4013 ;; *************** function ___lbdiv *****************
  4014 ;; Defined at:
  4015 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbdiv.c"
  4016 ;; Parameters:    Size  Location     Type
  4017 ;;  dividend        1    wreg     unsigned char 
  4018 ;;  divisor         1    7[COMMON] unsigned char 
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;  dividend        1    8[COMMON] unsigned char 
  4021 ;;  quotient        1   10[COMMON] unsigned char 
  4022 ;;  counter         1    9[COMMON] unsigned char 
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  1    wreg      unsigned char 
  4025 ;; Registers used:
  4026 ;;		wreg, status,2, status,0
  4027 ;; Tracked objects:
  4028 ;;		On entry : 60/0
  4029 ;;		On exit  : 60/0
  4030 ;;		Unchanged: FFF9F/0
  4031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4032 ;;      Params:         1       0       0       0       0
  4033 ;;      Locals:         3       0       0       0       0
  4034 ;;      Temps:          0       0       0       0       0
  4035 ;;      Totals:         4       0       0       0       0
  4036 ;;Total ram usage:        4 bytes
  4037 ;; Hardware stack levels used:    1
  4038 ;; Hardware stack levels required when called:    1
  4039 ;; This function calls:
  4040 ;;		Nothing
  4041 ;; This function is called by:
  4042 ;;		_fround
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045  0A51                     ___lbdiv:	
  4046                           
  4047                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  4048                           ;___lbdiv@dividend stored from wreg
  4049  0A51  00F8               	movwf	___lbdiv@dividend
  4050  0A52  01FA               	clrf	___lbdiv@quotient
  4051  0A53  0877               	movf	___lbdiv@divisor,w
  4052  0A54  1903               	btfsc	3,2
  4053  0A55  2A6A               	goto	l6211
  4054  0A56  01F9               	clrf	___lbdiv@counter
  4055  0A57                     l6197:	
  4056  0A57  0AF9               	incf	___lbdiv@counter,f
  4057  0A58  1BF7               	btfsc	___lbdiv@divisor,7
  4058  0A59  2A5D               	goto	l3299
  4059  0A5A  1003               	clrc
  4060  0A5B  0DF7               	rlf	___lbdiv@divisor,f
  4061  0A5C  2A57               	goto	l6197
  4062  0A5D                     l3299:	
  4063  0A5D  1003               	clrc
  4064  0A5E  0DFA               	rlf	___lbdiv@quotient,f
  4065  0A5F  0877               	movf	___lbdiv@divisor,w
  4066  0A60  0278               	subwf	___lbdiv@dividend,w
  4067  0A61  1C03               	skipc
  4068  0A62  2A67               	goto	L18
  4069  0A63  0877               	movf	___lbdiv@divisor,w
  4070  0A64  02F8               	subwf	___lbdiv@dividend,f
  4071  0A65  147A               	bsf	___lbdiv@quotient,0
  4072  0A66  1003               	clrc
  4073  0A67                     L18:	
  4074  0A67  0CF7               	rrf	___lbdiv@divisor,f
  4075  0A68  0BF9               	decfsz	___lbdiv@counter,f
  4076  0A69  2A5D               	goto	l3299
  4077  0A6A                     l6211:	
  4078  0A6A  087A               	movf	___lbdiv@quotient,w
  4079  0A6B  0008               	return
  4080  0A6C                     __end_of___lbdiv:	
  4081  0A6C                     __ptext541:	
  4082 ;; =============== function ___ftpack ends ============
  4083                           
  4084                           
  4085 ;; *************** function ___lbmod *****************
  4086 ;; Defined at:
  4087 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbmod.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;  dividend        1    wreg     unsigned char 
  4090 ;;  divisor         1    2[COMMON] unsigned char 
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;  dividend        1    4[COMMON] unsigned char 
  4093 ;;  rem             1    6[COMMON] unsigned char 
  4094 ;;  counter         1    5[COMMON] unsigned char 
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  1    wreg      unsigned char 
  4097 ;; Registers used:
  4098 ;;		wreg, status,2, status,0
  4099 ;; Tracked objects:
  4100 ;;		On entry : 60/0
  4101 ;;		On exit  : 60/0
  4102 ;;		Unchanged: FFF9F/0
  4103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4104 ;;      Params:         1       0       0       0       0
  4105 ;;      Locals:         3       0       0       0       0
  4106 ;;      Temps:          1       0       0       0       0
  4107 ;;      Totals:         5       0       0       0       0
  4108 ;;Total ram usage:        5 bytes
  4109 ;; Hardware stack levels used:    1
  4110 ;; Hardware stack levels required when called:    1
  4111 ;; This function calls:
  4112 ;;		Nothing
  4113 ;; This function is called by:
  4114 ;;		_fround
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117  0A6C                     ___lbmod:	
  4118                           
  4119                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  4120                           ;___lbmod@dividend stored from wreg
  4121  0A6C  00F4               	movwf	___lbmod@dividend
  4122  0A6D  3008               	movlw	8
  4123  0A6E  00F5               	movwf	___lbmod@counter
  4124  0A6F  01F6               	clrf	___lbmod@rem
  4125  0A70                     l6219:	
  4126  0A70  0874               	movf	___lbmod@dividend,w
  4127  0A71  00F3               	movwf	??___lbmod
  4128  0A72  3007               	movlw	7
  4129  0A73  1003               	clrc
  4130  0A74                     L17:	
  4131  0A74  0CF3               	rrf	??___lbmod,f
  4132  0A75  3EFF               	addlw	-1
  4133  0A76  1003               	clrc
  4134  0A77  1D03               	skipz
  4135  0A78  2A74               	goto	L17
  4136  0A79  0D76               	rlf	___lbmod@rem,w
  4137  0A7A  0473               	iorwf	??___lbmod,w
  4138  0A7B  00F6               	movwf	___lbmod@rem
  4139  0A7C  1003               	clrc
  4140  0A7D  0DF4               	rlf	___lbmod@dividend,f
  4141  0A7E  0872               	movf	___lbmod@divisor,w
  4142  0A7F  0276               	subwf	___lbmod@rem,w
  4143  0A80  1C03               	skipc
  4144  0A81  2A84               	goto	l6227
  4145  0A82  0872               	movf	___lbmod@divisor,w
  4146  0A83  02F6               	subwf	___lbmod@rem,f
  4147  0A84                     l6227:	
  4148  0A84  0BF5               	decfsz	___lbmod@counter,f
  4149  0A85  2A70               	goto	l6219
  4150  0A86  0876               	movf	___lbmod@rem,w
  4151  0A87  0008               	return
  4152  0A88                     __end_of___lbmod:	
  4153  0A88                     PL17:	
  4154  0A88  0831               	movf	?___ftmul,w
  4155  0A89  00CC               	movwf	?_fround
  4156  0A8A  0832               	movf	?___ftmul+1,w
  4157  0A8B  00CD               	movwf	?_fround+1
  4158  0A8C  0833               	movf	?___ftmul+2,w
  4159  0A8D  00CE               	movwf	?_fround+2
  4160  0A8E  0008               	return
  4161  0A8F                     PL22:	
  4162  0A8F  00B3               	movwf	?___ftmul+2
  4163  0A90  0852               	movf	_fround$4102,w
  4164  0A91  00B4               	movwf	?___ftmul+3
  4165  0A92  0853               	movf	_fround$4102+1,w
  4166  0A93  00B5               	movwf	?___ftmul+4
  4167  0A94  0854               	movf	_fround$4102+2,w
  4168  0A95  00B6               	movwf	?___ftmul+5
  4169  0A96  0008               	return
  4170  0A97                     PL31:	
  4171  0A97  0831               	movf	?___ftmul,w
  4172  0A98  00D2               	movwf	_fround$4102
  4173  0A99  0832               	movf	?___ftmul+1,w
  4174  0A9A  00D3               	movwf	_fround$4102+1
  4175  0A9B  0833               	movf	?___ftmul+2,w
  4176  0A9C  00D4               	movwf	_fround$4102+2
  4177  0A9D  0008               	return
  4178                           
  4179                           	psect	text525
  4180  0A9E                     __ptext525:	
  4181 ;; =============== function _fround ends ============
  4182                           
  4183                           
  4184 ;; *************** function _lcd_gotoxy *****************
  4185 ;; Defined at:
  4186 ;;		line 162 in file "C:\Online Class\HK6\Practice_Micro\bai1_timer1\Program\lcd(16).c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;  col             1    wreg     unsigned char 
  4189 ;;  row             1    7[COMMON] unsigned char 
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;  col             1    8[COMMON] unsigned char 
  4192 ;;  address         1    9[COMMON] unsigned char 
  4193 ;; Return value:  Size  Location     Type
  4194 ;;		None               void
  4195 ;; Registers used:
  4196 ;;		wreg, status,2, status,0, pclath, cstack
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 60/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4202 ;;      Params:         1       0       0       0       0
  4203 ;;      Locals:         2       0       0       0       0
  4204 ;;      Temps:          0       0       0       0       0
  4205 ;;      Totals:         3       0       0       0       0
  4206 ;;Total ram usage:        3 bytes
  4207 ;; Hardware stack levels used:    1
  4208 ;; Hardware stack levels required when called:    2
  4209 ;; This function calls:
  4210 ;;		_lcd_put_byte
  4211 ;;		_lcd_busy
  4212 ;; This function is called by:
  4213 ;;		_lcd_putc
  4214 ;;		_main
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217  0A9E                     _lcd_gotoxy:	
  4218                           
  4219                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  4220                           ;lcd_gotoxy@col stored from wreg
  4221  0A9E  00F8               	movwf	lcd_gotoxy@col
  4222                           
  4223                           ;lcd(16).c: 163: unsigned char address;
  4224                           ;lcd(16).c: 165: if(row!=0)
  4225  0A9F  0877               	movf	lcd_gotoxy@row,w
  4226  0AA0  1903               	btfsc	3,2
  4227  0AA1  2AA5               	goto	l6733
  4228                           
  4229                           ;lcd(16).c: 166: address=0x40;
  4230  0AA2  3040               	movlw	64
  4231  0AA3  00F9               	movwf	lcd_gotoxy@address
  4232  0AA4  2AA6               	goto	l6735
  4233  0AA5                     l6733:	
  4234                           
  4235                           ;lcd(16).c: 167: else
  4236                           ;lcd(16).c: 168: address=0;
  4237  0AA5  01F9               	clrf	lcd_gotoxy@address
  4238  0AA6                     l6735:	
  4239                           
  4240                           ;lcd(16).c: 170: address += col;
  4241  0AA6  0878               	movf	lcd_gotoxy@col,w
  4242  0AA7  07F9               	addwf	lcd_gotoxy@address,f
  4243                           
  4244                           ;lcd(16).c: 171: lcd_put_byte(0,0x80|address);
  4245  0AA8  0879               	movf	lcd_gotoxy@address,w
  4246  0AA9  3880               	iorlw	128
  4247  0AAA  00F2               	movwf	?_lcd_put_byte
  4248  0AAB  3000               	movlw	0
  4249  0AAC  23A0  120A  158A   	fcall	_lcd_put_byte
  4250  0AAF                     l6739:	
  4251                           ;lcd(16).c: 172: while(lcd_busy());
  4252                           
  4253  0AAF  2430  120A  158A   	fcall	_lcd_busy
  4254  0AB2  3800               	iorlw	0
  4255  0AB3  1903               	btfsc	3,2
  4256  0AB4  0008               	return
  4257  0AB5  2AAF               	goto	l6739
  4258  0AB6                     __end_of_lcd_gotoxy:	
  4259  0AB6                     __ptext521:	
  4260 ;; =============== function _putch ends ============
  4261                           
  4262                           
  4263 ;; *************** function _lcd_putc *****************
  4264 ;; Defined at:
  4265 ;;		line 143 in file "C:\Online Class\HK6\Practice_Micro\bai1_timer1\Program\lcd(16).c"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;  c               1    wreg     unsigned char 
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;  c               1   10[COMMON] unsigned char 
  4270 ;; Return value:  Size  Location     Type
  4271 ;;		None               void
  4272 ;; Registers used:
  4273 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/20
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4279 ;;      Params:         0       0       0       0       0
  4280 ;;      Locals:         1       0       0       0       0
  4281 ;;      Temps:          0       0       0       0       0
  4282 ;;      Totals:         1       0       0       0       0
  4283 ;;Total ram usage:        1 bytes
  4284 ;; Hardware stack levels used:    1
  4285 ;; Hardware stack levels required when called:    3
  4286 ;; This function calls:
  4287 ;;		_lcd_put_byte
  4288 ;;		_lcd_busy
  4289 ;;		_lcd_gotoxy
  4290 ;;		_isprint
  4291 ;; This function is called by:
  4292 ;;		_putch
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295  0AB6                     _lcd_putc:	
  4296                           
  4297                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4298                           ;lcd_putc@c stored from wreg
  4299  0AB6  00FA               	movwf	lcd_putc@c
  4300                           
  4301                           ;lcd(16).c: 144: switch(c){
  4302  0AB7  2ADC               	goto	l6825
  4303  0AB8                     l6811:	
  4304  0AB8  3000               	movlw	0
  4305                           
  4306                           ;lcd(16).c: 146: lcd_put_byte(0, 1);
  4307  0AB9  01F2               	clrf	?_lcd_put_byte
  4308  0ABA  0AF2               	incf	?_lcd_put_byte,f
  4309  0ABB  23A0  120A  158A   	fcall	_lcd_put_byte
  4310  0ABE                     l6813:	
  4311                           ;lcd(16).c: 147: while(lcd_busy());
  4312                           
  4313  0ABE  2430  120A  158A   	fcall	_lcd_busy
  4314  0AC1  3800               	iorlw	0
  4315  0AC2  1903               	btfsc	3,2
  4316  0AC3  0008               	return
  4317  0AC4  2ABE               	goto	l6813
  4318  0AC5                     l6815:	
  4319  0AC5  3000               	movlw	0
  4320                           
  4321                           ;lcd(16).c: 150: lcd_gotoxy(0, 1);
  4322  0AC6  01F7               	clrf	?_lcd_gotoxy
  4323  0AC7  0AF7               	incf	?_lcd_gotoxy,f
  4324  0AC8  2A9E               	ljmp	_lcd_gotoxy
  4325  0AC9                     l6817:	
  4326                           ;lcd(16).c: 151: break;
  4327                           
  4328                           
  4329                           ;lcd(16).c: 153: if(isprint(c)){
  4330  0AC9  087A               	movf	lcd_putc@c,w
  4331  0ACA  2457  120A  158A   	fcall	_isprint
  4332  0ACD  1C03               	btfss	3,0
  4333  0ACE  0008               	return
  4334                           
  4335                           ;lcd(16).c: 154: lcd_put_byte(1, c);
  4336  0ACF  087A               	movf	lcd_putc@c,w
  4337  0AD0  00F2               	movwf	?_lcd_put_byte
  4338  0AD1  3001               	movlw	1
  4339  0AD2  23A0  120A  158A   	fcall	_lcd_put_byte
  4340  0AD5                     l6821:	
  4341                           ;lcd(16).c: 155: while(lcd_busy());
  4342                           
  4343  0AD5  2430  120A  158A   	fcall	_lcd_busy
  4344  0AD8  3800               	iorlw	0
  4345  0AD9  1903               	btfsc	3,2
  4346  0ADA  0008               	return
  4347  0ADB  2AD5               	goto	l6821
  4348  0ADC                     l6825:	
  4349  0ADC  087A               	movf	lcd_putc@c,w
  4350                           
  4351                           ; Switch size 1, requested type "space"
  4352                           ; Number of cases is 2, Range of values is 10 to 12
  4353                           ; switch strategies available:
  4354                           ; Name         Instructions Cycles
  4355                           ; simple_byte            7     4 (average)
  4356                           ; direct_byte           20    11 (fixed)
  4357                           ; jumptable            263     9 (fixed)
  4358                           ;	Chosen strategy is simple_byte
  4359  0ADD  3A0A               	xorlw	10	; case 10
  4360  0ADE  1903               	skipnz
  4361  0ADF  2AC5               	goto	l6815
  4362  0AE0  3A06               	xorlw	6	; case 12
  4363  0AE1  1903               	skipnz
  4364  0AE2  2AB8               	goto	l6811
  4365  0AE3  2AC9               	goto	l6817
  4366  0AE4  0008               	return
  4367  0AE5                     __end_of_lcd_putc:	
  4368  0AE5                     __ptext526:	
  4369 ;; =============== function _lcd_gotoxy ends ============
  4370                           
  4371                           
  4372 ;; *************** function _lcd_init *****************
  4373 ;; Defined at:
  4374 ;;		line 5 in file "C:\Online Class\HK6\Practice_Micro\bai1_timer1\Program\lcd(16).c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;		None
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;  i               1    0        unsigned char 
  4379 ;; Return value:  Size  Location     Type
  4380 ;;		None               void
  4381 ;; Registers used:
  4382 ;;		wreg, status,2, status,0, pclath, cstack
  4383 ;; Tracked objects:
  4384 ;;		On entry : 17F/0
  4385 ;;		On exit  : 60/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4388 ;;      Params:         0       0       0       0       0
  4389 ;;      Locals:         0       0       0       0       0
  4390 ;;      Temps:          3       0       0       0       0
  4391 ;;      Totals:         3       0       0       0       0
  4392 ;;Total ram usage:        3 bytes
  4393 ;; Hardware stack levels used:    1
  4394 ;; Hardware stack levels required when called:    2
  4395 ;; This function calls:
  4396 ;;		_lcd_put_byte
  4397 ;;		_lcd_busy
  4398 ;; This function is called by:
  4399 ;;		_main
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402  0AE5                     _lcd_init:	
  4403                           
  4404                           ;lcd(16).c: 6: unsigned char i;
  4405                           ;lcd(16).c: 7: TRISD3 = 0;
  4406                           
  4407                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4408  0AE5  1683               	bsf	3,5	;RP0=1, select bank1
  4409  0AE6  1188               	bcf	8,3
  4410                           
  4411                           ;lcd(16).c: 8: TRISD1 = 0;
  4412  0AE7  1088               	bcf	8,1
  4413                           
  4414                           ;lcd(16).c: 9: TRISD2 = 0;
  4415  0AE8  1108               	bcf	8,2
  4416                           
  4417                           ;lcd(16).c: 10: TRISD4 = 0;
  4418  0AE9  1208               	bcf	8,4
  4419                           
  4420                           ;lcd(16).c: 11: TRISD5 = 0;
  4421  0AEA  1288               	bcf	8,5
  4422                           
  4423                           ;lcd(16).c: 12: TRISD6 = 0;
  4424  0AEB  1308               	bcf	8,6
  4425                           
  4426                           ;lcd(16).c: 13: TRISD7 = 0;
  4427  0AEC  1388               	bcf	8,7
  4428                           
  4429                           ;lcd(16).c: 14: RD3 = 0;
  4430  0AED  1283               	bcf	3,5	;RP0=0, select bank0
  4431  0AEE  3003               	movlw	3
  4432  0AEF  1188               	bcf	8,3
  4433                           
  4434                           ;lcd(16).c: 15: RD1 = 0;
  4435  0AF0  1088               	bcf	8,1
  4436                           
  4437                           ;lcd(16).c: 16: RD2 = 0;
  4438  0AF1  1108               	bcf	8,2
  4439                           
  4440                           ;lcd(16).c: 18: _delay((unsigned long)((100)*(20000000/4000.0)));
  4441  0AF2  00F9               	movwf	??_lcd_init+2
  4442  0AF3  308A               	movlw	138
  4443  0AF4  00F8               	movwf	??_lcd_init+1
  4444  0AF5  3056               	movlw	86
  4445  0AF6  00F7               	movwf	??_lcd_init
  4446  0AF7                     u3857:	
  4447  0AF7  0BF7               	decfsz	??_lcd_init,f
  4448  0AF8  2AF7               	goto	u3857
  4449  0AF9  0BF8               	decfsz	??_lcd_init+1,f
  4450  0AFA  2AF7               	goto	u3857
  4451  0AFB  0BF9               	decfsz	??_lcd_init+2,f
  4452  0AFC  2AF7               	goto	u3857
  4453  0AFD  2AFE               	nop2
  4454                           
  4455                           ;lcd(16).c: 21: lcd_put_byte(0,0x30);
  4456  0AFE  3030               	movlw	48
  4457  0AFF  00F2               	movwf	?_lcd_put_byte
  4458  0B00  3000               	movlw	0
  4459  0B01  23A0  120A  158A   	fcall	_lcd_put_byte
  4460                           
  4461                           ;lcd(16).c: 22: _delay((unsigned long)((50)*(20000000/4000.0)));
  4462  0B04  3002               	movlw	2
  4463  0B05  00F9               	movwf	??_lcd_init+2
  4464  0B06  3045               	movlw	69
  4465  0B07  00F8               	movwf	??_lcd_init+1
  4466  0B08  30A9               	movlw	169
  4467  0B09  00F7               	movwf	??_lcd_init
  4468  0B0A                     u3867:	
  4469  0B0A  0BF7               	decfsz	??_lcd_init,f
  4470  0B0B  2B0A               	goto	u3867
  4471  0B0C  0BF8               	decfsz	??_lcd_init+1,f
  4472  0B0D  2B0A               	goto	u3867
  4473  0B0E  0BF9               	decfsz	??_lcd_init+2,f
  4474  0B0F  2B0A               	goto	u3867
  4475  0B10  2B11               	nop2
  4476                           
  4477                           ;lcd(16).c: 23: lcd_put_byte(0,0x30);
  4478  0B11  3030               	movlw	48
  4479  0B12  00F2               	movwf	?_lcd_put_byte
  4480  0B13  3000               	movlw	0
  4481  0B14  23A0  120A  158A   	fcall	_lcd_put_byte
  4482                           
  4483                           ;lcd(16).c: 24: _delay((unsigned long)((50)*(20000000/4000.0)));
  4484  0B17  3002               	movlw	2
  4485  0B18  00F9               	movwf	??_lcd_init+2
  4486  0B19  3045               	movlw	69
  4487  0B1A  00F8               	movwf	??_lcd_init+1
  4488  0B1B  30A9               	movlw	169
  4489  0B1C  00F7               	movwf	??_lcd_init
  4490  0B1D                     u3877:	
  4491  0B1D  0BF7               	decfsz	??_lcd_init,f
  4492  0B1E  2B1D               	goto	u3877
  4493  0B1F  0BF8               	decfsz	??_lcd_init+1,f
  4494  0B20  2B1D               	goto	u3877
  4495  0B21  0BF9               	decfsz	??_lcd_init+2,f
  4496  0B22  2B1D               	goto	u3877
  4497  0B23  2B24               	nop2
  4498                           
  4499                           ;lcd(16).c: 25: lcd_put_byte(0,0x32);
  4500  0B24  3032               	movlw	50
  4501  0B25  00F2               	movwf	?_lcd_put_byte
  4502  0B26  3000               	movlw	0
  4503  0B27  23A0  120A  158A   	fcall	_lcd_put_byte
  4504                           
  4505                           ;lcd(16).c: 26: _delay((unsigned long)((100)*(20000000/4000.0)));
  4506  0B2A  3003               	movlw	3
  4507  0B2B  00F9               	movwf	??_lcd_init+2
  4508  0B2C  308A               	movlw	138
  4509  0B2D  00F8               	movwf	??_lcd_init+1
  4510  0B2E  3056               	movlw	86
  4511  0B2F  00F7               	movwf	??_lcd_init
  4512  0B30                     u3887:	
  4513  0B30  0BF7               	decfsz	??_lcd_init,f
  4514  0B31  2B30               	goto	u3887
  4515  0B32  0BF8               	decfsz	??_lcd_init+1,f
  4516  0B33  2B30               	goto	u3887
  4517  0B34  0BF9               	decfsz	??_lcd_init+2,f
  4518  0B35  2B30               	goto	u3887
  4519  0B36  2B37               	nop2
  4520                           
  4521                           ;lcd(16).c: 27: _delay((unsigned long)((100)*(20000000/4000.0)));
  4522  0B37  3003               	movlw	3
  4523  0B38  00F9               	movwf	??_lcd_init+2
  4524  0B39  308A               	movlw	138
  4525  0B3A  00F8               	movwf	??_lcd_init+1
  4526  0B3B  3056               	movlw	86
  4527  0B3C  00F7               	movwf	??_lcd_init
  4528  0B3D                     u3897:	
  4529  0B3D  0BF7               	decfsz	??_lcd_init,f
  4530  0B3E  2B3D               	goto	u3897
  4531  0B3F  0BF8               	decfsz	??_lcd_init+1,f
  4532  0B40  2B3D               	goto	u3897
  4533  0B41  0BF9               	decfsz	??_lcd_init+2,f
  4534  0B42  2B3D               	goto	u3897
  4535  0B43  2B44               	nop2
  4536                           
  4537                           ;lcd(16).c: 28: _delay((unsigned long)((100)*(20000000/4000.0)));
  4538  0B44  3003               	movlw	3
  4539  0B45  00F9               	movwf	??_lcd_init+2
  4540  0B46  308A               	movlw	138
  4541  0B47  00F8               	movwf	??_lcd_init+1
  4542  0B48  3056               	movlw	86
  4543  0B49  00F7               	movwf	??_lcd_init
  4544  0B4A                     u3907:	
  4545  0B4A  0BF7               	decfsz	??_lcd_init,f
  4546  0B4B  2B4A               	goto	u3907
  4547  0B4C  0BF8               	decfsz	??_lcd_init+1,f
  4548  0B4D  2B4A               	goto	u3907
  4549  0B4E  0BF9               	decfsz	??_lcd_init+2,f
  4550  0B4F  2B4A               	goto	u3907
  4551  0B50  2B51               	nop2
  4552  0B51                     l6703:	
  4553                           ;lcd(16).c: 30: while(lcd_busy());
  4554                           
  4555  0B51  2430  120A  158A   	fcall	_lcd_busy
  4556  0B54  3800               	iorlw	0
  4557  0B55  1D03               	skipz
  4558  0B56  2B51               	goto	l6703
  4559                           
  4560                           ;lcd(16).c: 31: lcd_put_byte(0,0b00101100 & 0b00111000);
  4561  0B57  3028               	movlw	40
  4562  0B58  00F2               	movwf	?_lcd_put_byte
  4563  0B59  3000               	movlw	0
  4564  0B5A  23A0  120A  158A   	fcall	_lcd_put_byte
  4565  0B5D                     l6707:	
  4566                           ;lcd(16).c: 32: while(lcd_busy());
  4567                           
  4568  0B5D  2430  120A  158A   	fcall	_lcd_busy
  4569  0B60  3800               	iorlw	0
  4570  0B61  1D03               	skipz
  4571  0B62  2B5D               	goto	l6707
  4572                           
  4573                           ;lcd(16).c: 34: lcd_put_byte(0,0b00001011&0b00001101&0b00001110);
  4574  0B63  3008               	movlw	8
  4575  0B64  00F2               	movwf	?_lcd_put_byte
  4576  0B65  3000               	movlw	0
  4577  0B66  23A0  120A  158A   	fcall	_lcd_put_byte
  4578  0B69                     l6711:	
  4579                           ;lcd(16).c: 35: while(lcd_busy());
  4580                           
  4581  0B69  2430  120A  158A   	fcall	_lcd_busy
  4582  0B6C  3800               	iorlw	0
  4583  0B6D  1D03               	skipz
  4584  0B6E  2B69               	goto	l6711
  4585                           
  4586                           ;lcd(16).c: 36: lcd_put_byte(0,0b00001111&0b00001101&0b00001110);
  4587  0B6F  300C               	movlw	12
  4588  0B70  00F2               	movwf	?_lcd_put_byte
  4589  0B71  3000               	movlw	0
  4590  0B72  23A0  120A  158A   	fcall	_lcd_put_byte
  4591  0B75                     l6715:	
  4592                           ;lcd(16).c: 37: while(lcd_busy());
  4593                           
  4594  0B75  2430  120A  158A   	fcall	_lcd_busy
  4595  0B78  3800               	iorlw	0
  4596  0B79  1D03               	skipz
  4597  0B7A  2B75               	goto	l6715
  4598  0B7B  3000               	movlw	0
  4599                           
  4600                           ;lcd(16).c: 39: lcd_put_byte(0,0x01);
  4601  0B7C  01F2               	clrf	?_lcd_put_byte
  4602  0B7D  0AF2               	incf	?_lcd_put_byte,f
  4603  0B7E  23A0  120A  158A   	fcall	_lcd_put_byte
  4604  0B81                     l6719:	
  4605                           ;lcd(16).c: 40: while(lcd_busy());
  4606                           
  4607  0B81  2430  120A  158A   	fcall	_lcd_busy
  4608  0B84  3800               	iorlw	0
  4609  0B85  1D03               	skipz
  4610  0B86  2B81               	goto	l6719
  4611                           
  4612                           ;lcd(16).c: 41: lcd_put_byte(0,0b00000100);
  4613  0B87  3004               	movlw	4
  4614  0B88  00F2               	movwf	?_lcd_put_byte
  4615  0B89  3000               	movlw	0
  4616  0B8A  23A0  120A  158A   	fcall	_lcd_put_byte
  4617  0B8D                     l6723:	
  4618                           ;lcd(16).c: 42: while(lcd_busy());
  4619                           
  4620  0B8D  2430  120A  158A   	fcall	_lcd_busy
  4621  0B90  3800               	iorlw	0
  4622  0B91  1D03               	skipz
  4623  0B92  2B8D               	goto	l6723
  4624  0B93  3000               	movlw	0
  4625                           
  4626                           ;lcd(16).c: 43: lcd_put_byte(0,0x01);
  4627  0B94  01F2               	clrf	?_lcd_put_byte
  4628  0B95  0AF2               	incf	?_lcd_put_byte,f
  4629  0B96  23A0  120A  158A   	fcall	_lcd_put_byte
  4630  0B99                     l6727:	
  4631                           ;lcd(16).c: 44: while(lcd_busy());
  4632                           
  4633  0B99  2430  120A  158A   	fcall	_lcd_busy
  4634  0B9C  3800               	iorlw	0
  4635  0B9D  1903               	btfsc	3,2
  4636  0B9E  0008               	return
  4637  0B9F  2B99               	goto	l6727
  4638  0BA0                     __end_of_lcd_init:	
  4639  0BA0                     __ptext532:	
  4640 ;; =============== function _lcd_busy ends ============
  4641                           
  4642                           
  4643 ;; *************** function _lcd_put_byte *****************
  4644 ;; Defined at:
  4645 ;;		line 106 in file "C:\Online Class\HK6\Practice_Micro\bai1_timer1\Program\lcd(16).c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;  rs              1    wreg     unsigned char 
  4648 ;;  b               1    2[COMMON] unsigned char 
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;  rs              1    5[COMMON] unsigned char 
  4651 ;;  temp            1    6[COMMON] struct _BYTE_VAL
  4652 ;; Return value:  Size  Location     Type
  4653 ;;		None               void
  4654 ;; Registers used:
  4655 ;;		wreg, status,2, status,0
  4656 ;; Tracked objects:
  4657 ;;		On entry : 0/20
  4658 ;;		On exit  : 60/0
  4659 ;;		Unchanged: 0/0
  4660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4661 ;;      Params:         1       0       0       0       0
  4662 ;;      Locals:         2       0       0       0       0
  4663 ;;      Temps:          2       0       0       0       0
  4664 ;;      Totals:         5       0       0       0       0
  4665 ;;Total ram usage:        5 bytes
  4666 ;; Hardware stack levels used:    1
  4667 ;; Hardware stack levels required when called:    1
  4668 ;; This function calls:
  4669 ;;		Nothing
  4670 ;; This function is called by:
  4671 ;;		_lcd_init
  4672 ;;		_lcd_putc
  4673 ;;		_lcd_gotoxy
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676  0BA0                     _lcd_put_byte:	
  4677                           
  4678                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0]
  4679                           ;lcd_put_byte@rs stored from wreg
  4680  0BA0  00F5               	movwf	lcd_put_byte@rs
  4681                           
  4682                           ;lcd(16).c: 107: BYTE_VAL temp;
  4683                           ;lcd(16).c: 109: TRISD4 = 0;
  4684  0BA1  1683               	bsf	3,5	;RP0=1, select bank1
  4685  0BA2  1303               	bcf	3,6	;RP1=0, select bank1
  4686  0BA3  1208               	bcf	8,4
  4687                           
  4688                           ;lcd(16).c: 110: TRISD5 = 0;
  4689  0BA4  1288               	bcf	8,5
  4690                           
  4691                           ;lcd(16).c: 111: TRISD6 = 0;
  4692  0BA5  1308               	bcf	8,6
  4693                           
  4694                           ;lcd(16).c: 112: TRISD7 = 0;
  4695  0BA6  1388               	bcf	8,7
  4696                           
  4697                           ;lcd(16).c: 114: RD1 = 0;
  4698  0BA7  1283               	bcf	3,5	;RP0=0, select bank0
  4699  0BA8  1088               	bcf	8,1
  4700                           
  4701                           ;lcd(16).c: 115: if(rs) RD1 = 1;
  4702  0BA9  0875               	movf	lcd_put_byte@rs,w
  4703  0BAA  1D03               	skipz
  4704  0BAB  1488               	bsf	8,1
  4705                           
  4706                           ;lcd(16).c: 117: _delay((unsigned long)((20)*(20000000/4000000.0)));
  4707  0BAC  3021               	movlw	33
  4708  0BAD  00F3               	movwf	??_lcd_put_byte
  4709  0BAE                     u3957:	
  4710  0BAE  0BF3               	decfsz	??_lcd_put_byte,f
  4711  0BAF  2BAE               	goto	u3957
  4712  0BB0  246C               	call	PL33	;select bank 0
  4713                           
  4714                           ;lcd(16).c: 118: RD2 = 0;
  4715  0BB1  3021               	movlw	33
  4716  0BB2  1108               	bcf	8,2
  4717                           
  4718                           ;lcd(16).c: 119: _delay((unsigned long)((20)*(20000000/4000000.0)));
  4719  0BB3  00F3               	movwf	??_lcd_put_byte
  4720  0BB4                     u3967:	
  4721  0BB4  0BF3               	decfsz	??_lcd_put_byte,f
  4722  0BB5  2BB4               	goto	u3967
  4723  0BB6  246C               	call	PL33	;select bank 0
  4724                           
  4725                           ;lcd(16).c: 120: RD3 = 0;
  4726  0BB7  1188               	bcf	8,3
  4727                           
  4728                           ;lcd(16).c: 122: temp.Val = b;
  4729  0BB8  0872               	movf	lcd_put_byte@b,w
  4730  0BB9  00F6               	movwf	lcd_put_byte@temp
  4731                           
  4732                           ;lcd(16).c: 125: RD4 = temp.bits.b4;
  4733  0BBA  0E76               	swapf	lcd_put_byte@temp,w
  4734  0BBB  3901               	andlw	1
  4735  0BBC  00F3               	movwf	??_lcd_put_byte
  4736  0BBD  0C73               	rrf	??_lcd_put_byte,w
  4737  0BBE  1C03               	btfss	3,0
  4738  0BBF  2BC3               	goto	u2700
  4739  0BC0  246C               	call	PL33	;select bank 0
  4740  0BC1  1608               	bsf	8,4
  4741  0BC2  2BC5               	goto	l6467
  4742  0BC3                     u2700:	
  4743  0BC3  246C               	call	PL33	;select bank 0
  4744  0BC4  1208               	bcf	8,4
  4745  0BC5                     l6467:	
  4746                           
  4747                           ;lcd(16).c: 126: RD5 = temp.bits.b5;
  4748  0BC5  0E76               	swapf	lcd_put_byte@temp,w
  4749  0BC6  00F3               	movwf	??_lcd_put_byte
  4750  0BC7  0C73               	rrf	??_lcd_put_byte,w
  4751  0BC8  3901               	andlw	1
  4752  0BC9  00F4               	movwf	??_lcd_put_byte+1
  4753  0BCA  0C74               	rrf	??_lcd_put_byte+1,w
  4754  0BCB  1C03               	btfss	3,0
  4755  0BCC  2BD0               	goto	u2720
  4756  0BCD  246C               	call	PL33	;select bank 0
  4757  0BCE  1688               	bsf	8,5
  4758  0BCF  2BD2               	goto	l6469
  4759  0BD0                     u2720:	
  4760  0BD0  246C               	call	PL33	;select bank 0
  4761  0BD1  1288               	bcf	8,5
  4762  0BD2                     l6469:	
  4763                           
  4764                           ;lcd(16).c: 127: RD6 = temp.bits.b6;
  4765  0BD2  0E76               	swapf	lcd_put_byte@temp,w
  4766  0BD3  2465  120A  158A   	fcall	PL29	;call to abstracted procedure
  4767  0BD6  1C03               	btfss	3,0
  4768  0BD7  2BDB               	goto	u2740
  4769  0BD8  246C               	call	PL33	;select bank 0
  4770  0BD9  1708               	bsf	8,6
  4771  0BDA  2BDD               	goto	l6471
  4772  0BDB                     u2740:	
  4773  0BDB  246C               	call	PL33	;select bank 0
  4774  0BDC  1308               	bcf	8,6
  4775  0BDD                     l6471:	
  4776                           
  4777                           ;lcd(16).c: 128: RD7 = temp.bits.b7;
  4778  0BDD  0D76               	rlf	lcd_put_byte@temp,w
  4779  0BDE  0D76               	rlf	lcd_put_byte@temp,w
  4780  0BDF  3901               	andlw	1
  4781  0BE0  00F3               	movwf	??_lcd_put_byte
  4782  0BE1  0C73               	rrf	??_lcd_put_byte,w
  4783  0BE2  1C03               	btfss	3,0
  4784  0BE3  2BE7               	goto	u2760
  4785  0BE4  246C               	call	PL33	;select bank 0
  4786  0BE5  1788               	bsf	8,7
  4787  0BE6  2BE9               	goto	u2774
  4788  0BE7                     u2760:	
  4789  0BE7  246C               	call	PL33	;select bank 0
  4790  0BE8  1388               	bcf	8,7
  4791  0BE9                     u2774:	
  4792                           
  4793                           ;lcd(16).c: 129: _delay((unsigned long)((20)*(20000000/4000000.0)));
  4794  0BE9  3021               	movlw	33
  4795  0BEA  00F3               	movwf	??_lcd_put_byte
  4796  0BEB                     u3977:	
  4797  0BEB  0BF3               	decfsz	??_lcd_put_byte,f
  4798  0BEC  2BEB               	goto	u3977
  4799  0BED  246C               	call	PL33	;select bank 0
  4800                           
  4801                           ;lcd(16).c: 130: RD3 = 1;
  4802  0BEE  3021               	movlw	33
  4803  0BEF  1588               	bsf	8,3
  4804                           
  4805                           ;lcd(16).c: 131: _delay((unsigned long)((20)*(20000000/4000000.0)));
  4806  0BF0  00F3               	movwf	??_lcd_put_byte
  4807  0BF1                     u3987:	
  4808  0BF1  0BF3               	decfsz	??_lcd_put_byte,f
  4809  0BF2  2BF1               	goto	u3987
  4810  0BF3  246C               	call	PL33	;select bank 0
  4811                           
  4812                           ;lcd(16).c: 132: RD3 = 0;
  4813  0BF4  1188               	bcf	8,3
  4814                           
  4815                           ;lcd(16).c: 134: RD4 = temp.bits.b0;
  4816  0BF5  0876               	movf	lcd_put_byte@temp,w
  4817  0BF6  3901               	andlw	1
  4818  0BF7  00F3               	movwf	??_lcd_put_byte
  4819  0BF8  0C73               	rrf	??_lcd_put_byte,w
  4820  0BF9  1C03               	btfss	3,0
  4821  0BFA  2BFE               	goto	u2780
  4822  0BFB  246C               	call	PL33	;select bank 0
  4823  0BFC  1608               	bsf	8,4
  4824  0BFD  2C00               	goto	l6479
  4825  0BFE                     u2780:	
  4826  0BFE  246C               	call	PL33	;select bank 0
  4827  0BFF  1208               	bcf	8,4
  4828  0C00                     l6479:	
  4829                           
  4830                           ;lcd(16).c: 135: RD5 = temp.bits.b1;
  4831  0C00  0C76               	rrf	lcd_put_byte@temp,w
  4832  0C01  3901               	andlw	1
  4833  0C02  00F3               	movwf	??_lcd_put_byte
  4834  0C03  0C73               	rrf	??_lcd_put_byte,w
  4835  0C04  1C03               	btfss	3,0
  4836  0C05  2C09               	goto	u2800
  4837  0C06  246C               	call	PL33	;select bank 0
  4838  0C07  1688               	bsf	8,5
  4839  0C08  2C0B               	goto	l6481
  4840  0C09                     u2800:	
  4841  0C09  246C               	call	PL33	;select bank 0
  4842  0C0A  1288               	bcf	8,5
  4843  0C0B                     l6481:	
  4844                           
  4845                           ;lcd(16).c: 136: RD6 = temp.bits.b2;
  4846  0C0B  0C76               	rrf	lcd_put_byte@temp,w
  4847  0C0C  00F3               	movwf	??_lcd_put_byte
  4848  0C0D  0C73               	rrf	??_lcd_put_byte,w
  4849  0C0E  3901               	andlw	1
  4850  0C0F  00F4               	movwf	??_lcd_put_byte+1
  4851  0C10  0C74               	rrf	??_lcd_put_byte+1,w
  4852  0C11  1C03               	btfss	3,0
  4853  0C12  2C16               	goto	u2820
  4854  0C13  246C               	call	PL33	;select bank 0
  4855  0C14  1708               	bsf	8,6
  4856  0C15  2C18               	goto	l6483
  4857  0C16                     u2820:	
  4858  0C16  246C               	call	PL33	;select bank 0
  4859  0C17  1308               	bcf	8,6
  4860  0C18                     l6483:	
  4861                           
  4862                           ;lcd(16).c: 137: RD7 = temp.bits.b3;
  4863  0C18  0C76               	rrf	lcd_put_byte@temp,w
  4864  0C19  2465  120A  158A   	fcall	PL29	;call to abstracted procedure
  4865  0C1C  1C03               	btfss	3,0
  4866  0C1D  2C21               	goto	u2840
  4867  0C1E  246C               	call	PL33	;select bank 0
  4868  0C1F  1788               	bsf	8,7
  4869  0C20  2C23               	goto	u2854
  4870  0C21                     u2840:	
  4871  0C21  246C               	call	PL33	;select bank 0
  4872  0C22  1388               	bcf	8,7
  4873  0C23                     u2854:	
  4874                           
  4875                           ;lcd(16).c: 138: _delay((unsigned long)((20)*(20000000/4000000.0)));
  4876  0C23  3021               	movlw	33
  4877  0C24  00F3               	movwf	??_lcd_put_byte
  4878  0C25                     u3997:	
  4879  0C25  0BF3               	decfsz	??_lcd_put_byte,f
  4880  0C26  2C25               	goto	u3997
  4881  0C27  246C               	call	PL33	;select bank 0
  4882                           
  4883                           ;lcd(16).c: 139: RD3 = 1;
  4884  0C28  3021               	movlw	33
  4885  0C29  1588               	bsf	8,3
  4886                           
  4887                           ;lcd(16).c: 140: _delay((unsigned long)((20)*(20000000/4000000.0)));
  4888  0C2A  00F3               	movwf	??_lcd_put_byte
  4889  0C2B                     u4007:	
  4890  0C2B  0BF3               	decfsz	??_lcd_put_byte,f
  4891  0C2C  2C2B               	goto	u4007
  4892  0C2D  246C               	call	PL33	;select bank 0
  4893                           
  4894                           ;lcd(16).c: 141: RD3 = 0;
  4895  0C2E  1188               	bcf	8,3
  4896  0C2F  0008               	return
  4897  0C30                     __end_of_lcd_put_byte:	
  4898  0C30                     __ptext531:	
  4899 ;; =============== function ___ftadd ends ============
  4900                           
  4901                           
  4902 ;; *************** function _lcd_busy *****************
  4903 ;; Defined at:
  4904 ;;		line 47 in file "C:\Online Class\HK6\Practice_Micro\bai1_timer1\Program\lcd(16).c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;		None
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;  busy            1    3[COMMON] unsigned char 
  4909 ;; Return value:  Size  Location     Type
  4910 ;;                  1    wreg      unsigned char 
  4911 ;; Registers used:
  4912 ;;		wreg
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 60/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4918 ;;      Params:         0       0       0       0       0
  4919 ;;      Locals:         1       0       0       0       0
  4920 ;;      Temps:          1       0       0       0       0
  4921 ;;      Totals:         2       0       0       0       0
  4922 ;;Total ram usage:        2 bytes
  4923 ;; Hardware stack levels used:    1
  4924 ;; Hardware stack levels required when called:    1
  4925 ;; This function calls:
  4926 ;;		Nothing
  4927 ;; This function is called by:
  4928 ;;		_lcd_init
  4929 ;;		_lcd_putc
  4930 ;;		_lcd_gotoxy
  4931 ;; This function uses a non-reentrant model
  4932 ;;
  4933  0C30                     _lcd_busy:	
  4934                           
  4935                           ;lcd(16).c: 48: unsigned char busy;
  4936                           ;lcd(16).c: 50: TRISD4 = 1;
  4937                           
  4938                           ; Regs used in _lcd_busy: [wreg]
  4939  0C30  1683               	bsf	3,5	;RP0=1, select bank1
  4940  0C31  1303               	bcf	3,6	;RP1=0, select bank1
  4941  0C32  1608               	bsf	8,4
  4942                           
  4943                           ;lcd(16).c: 51: TRISD5 = 1;
  4944  0C33  1688               	bsf	8,5
  4945                           
  4946                           ;lcd(16).c: 52: TRISD6 = 1;
  4947  0C34  1708               	bsf	8,6
  4948                           
  4949                           ;lcd(16).c: 53: TRISD7 = 1;
  4950  0C35  1788               	bsf	8,7
  4951                           
  4952                           ;lcd(16).c: 55: RD2 = 1;
  4953  0C36  1283               	bcf	3,5	;RP0=0, select bank0
  4954  0C37  3021               	movlw	33
  4955  0C38  1508               	bsf	8,2
  4956                           
  4957                           ;lcd(16).c: 56: RD1 = 0;
  4958  0C39  1088               	bcf	8,1
  4959                           
  4960                           ;lcd(16).c: 57: _delay((unsigned long)((20)*(20000000/4000000.0)));
  4961  0C3A  00F2               	movwf	??_lcd_busy
  4962  0C3B                     u3917:	
  4963  0C3B  0BF2               	decfsz	??_lcd_busy,f
  4964  0C3C  2C3B               	goto	u3917
  4965  0C3D  246C               	call	PL33	;select bank 0
  4966                           
  4967                           ;lcd(16).c: 58: RD3 = 1;
  4968  0C3E  3021               	movlw	33
  4969  0C3F  1588               	bsf	8,3
  4970                           
  4971                           ;lcd(16).c: 59: _delay((unsigned long)((20)*(20000000/4000000.0)));
  4972  0C40  00F2               	movwf	??_lcd_busy
  4973  0C41                     u3927:	
  4974  0C41  0BF2               	decfsz	??_lcd_busy,f
  4975  0C42  2C41               	goto	u3927
  4976                           
  4977                           ;lcd(16).c: 61: busy = RD7;
  4978  0C43  3000               	movlw	0
  4979  0C44  246C               	call	PL33	;select bank 0
  4980  0C45  1B88               	btfsc	8,7
  4981  0C46  3001               	movlw	1
  4982  0C47  00F3               	movwf	lcd_busy@busy
  4983  0C48  3021               	movlw	33
  4984                           
  4985                           ;lcd(16).c: 63: RD3 = 0;
  4986  0C49  1188               	bcf	8,3
  4987                           
  4988                           ;lcd(16).c: 64: _delay((unsigned long)((20)*(20000000/4000000.0)));
  4989  0C4A  00F2               	movwf	??_lcd_busy
  4990  0C4B                     u3937:	
  4991  0C4B  0BF2               	decfsz	??_lcd_busy,f
  4992  0C4C  2C4B               	goto	u3937
  4993  0C4D  246C               	call	PL33	;select bank 0
  4994                           
  4995                           ;lcd(16).c: 65: RD3 = 1;
  4996  0C4E  3021               	movlw	33
  4997  0C4F  1588               	bsf	8,3
  4998                           
  4999                           ;lcd(16).c: 66: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5000  0C50  00F2               	movwf	??_lcd_busy
  5001  0C51                     u3947:	
  5002  0C51  0BF2               	decfsz	??_lcd_busy,f
  5003  0C52  2C51               	goto	u3947
  5004  0C53  246C               	call	PL33	;select bank 0
  5005                           
  5006                           ;lcd(16).c: 67: RD3 = 0;
  5007  0C54  1188               	bcf	8,3
  5008                           
  5009                           ;lcd(16).c: 70: return busy;
  5010  0C55  0873               	movf	lcd_busy@busy,w
  5011  0C56  0008               	return
  5012  0C57                     __end_of_lcd_busy:	
  5013  0C57                     __ptext548:	
  5014 ;; =============== function _isdigit ends ============
  5015                           
  5016                           
  5017 ;; *************** function _isprint *****************
  5018 ;; Defined at:
  5019 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isprint.c"
  5020 ;; Parameters:    Size  Location     Type
  5021 ;;  c               1    wreg     unsigned char 
  5022 ;; Auto vars:     Size  Location     Type
  5023 ;;  c               1    3[COMMON] unsigned char 
  5024 ;; Return value:  Size  Location     Type
  5025 ;;		None               void
  5026 ;; Registers used:
  5027 ;;		wreg, status,2, status,0
  5028 ;; Tracked objects:
  5029 ;;		On entry : 0/20
  5030 ;;		On exit  : 0/20
  5031 ;;		Unchanged: FFFFF/0
  5032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5033 ;;      Params:         0       0       0       0       0
  5034 ;;      Locals:         2       0       0       0       0
  5035 ;;      Temps:          0       0       0       0       0
  5036 ;;      Totals:         2       0       0       0       0
  5037 ;;Total ram usage:        2 bytes
  5038 ;; Hardware stack levels used:    1
  5039 ;; Hardware stack levels required when called:    1
  5040 ;; This function calls:
  5041 ;;		Nothing
  5042 ;; This function is called by:
  5043 ;;		_lcd_putc
  5044 ;; This function uses a non-reentrant model
  5045 ;;
  5046  0C57                     _isprint:	
  5047                           
  5048                           ; Regs used in _isprint: [wreg+status,2+status,0]
  5049                           ;isprint@c stored from wreg
  5050  0C57  00F3               	movwf	isprint@c
  5051  0C58  307F               	movlw	127
  5052  0C59  01F2               	clrf	_isprint$3663
  5053  0C5A  0273               	subwf	isprint@c,w
  5054  0C5B  1803               	skipnc
  5055  0C5C  2C63               	goto	l6041
  5056  0C5D  3020               	movlw	32
  5057  0C5E  0273               	subwf	isprint@c,w
  5058  0C5F  1C03               	skipc
  5059  0C60  2C63               	goto	l6041
  5060  0C61  01F2               	clrf	_isprint$3663
  5061  0C62  0AF2               	incf	_isprint$3663,f
  5062  0C63                     l6041:	
  5063  0C63  0C72               	rrf	_isprint$3663,w
  5064  0C64  0008               	return
  5065  0C65                     __end_of_isprint:	
  5066  0C65                     PL29:	
  5067  0C65  00F3               	movwf	??_lcd_put_byte
  5068  0C66  0CF3               	rrf	??_lcd_put_byte,f
  5069  0C67  0C73               	rrf	??_lcd_put_byte,w
  5070  0C68  3901               	andlw	1
  5071  0C69  00F4               	movwf	??_lcd_put_byte+1
  5072  0C6A  0C74               	rrf	??_lcd_put_byte+1,w
  5073  0C6B  0008               	return
  5074  0C6C                     PL33:	
  5075  0C6C  1283               	bcf	3,5	;RP0=0, select bank0
  5076  0C6D  1303               	bcf	3,6	;RP1=0, select bank0
  5077  0C6E  0008               	return
  5078                           
  5079                           	psect	text529
  5080  0C6F                     __ptext529:	
  5081 ;; =============== function ___ftmul ends ============
  5082                           
  5083                           
  5084 ;; *************** function ___ftdiv *****************
  5085 ;; Defined at:
  5086 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  5087 ;; Parameters:    Size  Location     Type
  5088 ;;  f2              3    4[BANK0 ] float 
  5089 ;;  f1              3    7[BANK0 ] float 
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;  f3              3   14[BANK0 ] float 
  5092 ;;  sign            1   18[BANK0 ] unsigned char 
  5093 ;;  exp             1   17[BANK0 ] unsigned char 
  5094 ;;  cntr            1   13[BANK0 ] unsigned char 
  5095 ;; Return value:  Size  Location     Type
  5096 ;;                  3    4[BANK0 ] float 
  5097 ;; Registers used:
  5098 ;;		wreg, status,2, status,0, pclath, cstack
  5099 ;; Tracked objects:
  5100 ;;		On entry : 60/0
  5101 ;;		On exit  : 60/0
  5102 ;;		Unchanged: FFF9F/0
  5103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5104 ;;      Params:         0       6       0       0       0
  5105 ;;      Locals:         0       6       0       0       0
  5106 ;;      Temps:          0       3       0       0       0
  5107 ;;      Totals:         0      15       0       0       0
  5108 ;;Total ram usage:       15 bytes
  5109 ;; Hardware stack levels used:    1
  5110 ;; Hardware stack levels required when called:    2
  5111 ;; This function calls:
  5112 ;;		___ftpack
  5113 ;; This function is called by:
  5114 ;;		_main
  5115 ;; This function uses a non-reentrant model
  5116 ;;
  5117  0C6F                     ___ftdiv:	
  5118                           
  5119                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  5120  0C6F  0827               	movf	___ftdiv@f1,w
  5121  0C70  00AA               	movwf	??___ftdiv
  5122  0C71  0828               	movf	___ftdiv@f1+1,w
  5123  0C72  00AB               	movwf	??___ftdiv+1
  5124  0C73  0829               	movf	___ftdiv@f1+2,w
  5125  0C74  00AC               	movwf	??___ftdiv+2
  5126  0C75  1003               	clrc
  5127  0C76  0D2B               	rlf	??___ftdiv+1,w
  5128  0C77  0D2C               	rlf	??___ftdiv+2,w
  5129  0C78  00B1               	movwf	___ftdiv@exp
  5130  0C79  08B1               	movf	___ftdiv@exp,f
  5131  0C7A  1D03               	skipz
  5132  0C7B  2C80               	goto	l6587
  5133  0C7C  01A4               	clrf	?___ftdiv
  5134  0C7D  01A5               	clrf	?___ftdiv+1
  5135  0C7E  01A6               	clrf	?___ftdiv+2
  5136  0C7F  0008               	return
  5137  0C80                     l6587:	
  5138  0C80  0824               	movf	___ftdiv@f2,w
  5139  0C81  00AA               	movwf	??___ftdiv
  5140  0C82  0825               	movf	___ftdiv@f2+1,w
  5141  0C83  00AB               	movwf	??___ftdiv+1
  5142  0C84  0826               	movf	___ftdiv@f2+2,w
  5143  0C85  00AC               	movwf	??___ftdiv+2
  5144  0C86  1003               	clrc
  5145  0C87  0D2B               	rlf	??___ftdiv+1,w
  5146  0C88  0D2C               	rlf	??___ftdiv+2,w
  5147  0C89  00B2               	movwf	___ftdiv@sign
  5148  0C8A  08B2               	movf	___ftdiv@sign,f
  5149  0C8B  1D03               	skipz
  5150  0C8C  2C91               	goto	l3359
  5151  0C8D  01A4               	clrf	?___ftdiv
  5152  0C8E  01A5               	clrf	?___ftdiv+1
  5153  0C8F  01A6               	clrf	?___ftdiv+2
  5154  0C90  0008               	return
  5155  0C91                     l3359:	
  5156  0C91  3089               	movlw	137
  5157  0C92  01AE               	clrf	___ftdiv@f3
  5158  0C93  01AF               	clrf	___ftdiv@f3+1
  5159  0C94  01B0               	clrf	___ftdiv@f3+2
  5160  0C95  0732               	addwf	___ftdiv@sign,w
  5161  0C96  00AA               	movwf	??___ftdiv
  5162  0C97  02B1               	subwf	___ftdiv@exp,f
  5163  0C98  0829               	movf	___ftdiv@f1+2,w
  5164  0C99  00B2               	movwf	___ftdiv@sign
  5165  0C9A  0826               	movf	___ftdiv@f2+2,w
  5166  0C9B  06B2               	xorwf	___ftdiv@sign,f
  5167  0C9C  3080               	movlw	128
  5168  0C9D  05B2               	andwf	___ftdiv@sign,f
  5169  0C9E  3018               	movlw	24
  5170  0C9F  17A8               	bsf	___ftdiv@f1+1,7
  5171  0CA0  01A9               	clrf	___ftdiv@f1+2
  5172  0CA1  17A5               	bsf	___ftdiv@f2+1,7
  5173  0CA2  01A6               	clrf	___ftdiv@f2+2
  5174  0CA3  00AD               	movwf	___ftdiv@cntr
  5175  0CA4                     l6611:	
  5176  0CA4  1003               	clrc
  5177  0CA5  0DAE               	rlf	___ftdiv@f3,f
  5178  0CA6  0DAF               	rlf	___ftdiv@f3+1,f
  5179  0CA7  0DB0               	rlf	___ftdiv@f3+2,f
  5180  0CA8  0826               	movf	___ftdiv@f2+2,w
  5181  0CA9  0229               	subwf	___ftdiv@f1+2,w
  5182  0CAA  1D03               	skipz
  5183  0CAB  2CB2               	goto	u3085
  5184  0CAC  0825               	movf	___ftdiv@f2+1,w
  5185  0CAD  0228               	subwf	___ftdiv@f1+1,w
  5186  0CAE  1D03               	skipz
  5187  0CAF  2CB2               	goto	u3085
  5188  0CB0  0824               	movf	___ftdiv@f2,w
  5189  0CB1  0227               	subwf	___ftdiv@f1,w
  5190  0CB2                     u3085:	
  5191  0CB2  1C03               	skipc
  5192  0CB3  2CC0               	goto	L6
  5193  0CB4  0824               	movf	___ftdiv@f2,w
  5194  0CB5  02A7               	subwf	___ftdiv@f1,f
  5195  0CB6  0825               	movf	___ftdiv@f2+1,w
  5196  0CB7  1C03               	skipc
  5197  0CB8  0F25               	incfsz	___ftdiv@f2+1,w
  5198  0CB9  02A8               	subwf	___ftdiv@f1+1,f
  5199  0CBA  0826               	movf	___ftdiv@f2+2,w
  5200  0CBB  1C03               	skipc
  5201  0CBC  0A26               	incf	___ftdiv@f2+2,w
  5202  0CBD  02A9               	subwf	___ftdiv@f1+2,f
  5203  0CBE  142E               	bsf	___ftdiv@f3,0
  5204  0CBF  1003               	clrc
  5205  0CC0                     L6:	
  5206  0CC0  0DA7               	rlf	___ftdiv@f1,f
  5207  0CC1  0DA8               	rlf	___ftdiv@f1+1,f
  5208  0CC2  0DA9               	rlf	___ftdiv@f1+2,f
  5209  0CC3  0BAD               	decfsz	___ftdiv@cntr,f
  5210  0CC4  2CA4               	goto	l6611
  5211  0CC5  082E               	movf	___ftdiv@f3,w
  5212  0CC6  00F2               	movwf	?___ftpack
  5213  0CC7  082F               	movf	___ftdiv@f3+1,w
  5214  0CC8  00F3               	movwf	?___ftpack+1
  5215  0CC9  0830               	movf	___ftdiv@f3+2,w
  5216  0CCA  00F4               	movwf	?___ftpack+2
  5217  0CCB  0831               	movf	___ftdiv@exp,w
  5218  0CCC  00F5               	movwf	?___ftpack+3
  5219  0CCD  0832               	movf	___ftdiv@sign,w
  5220  0CCE  00F6               	movwf	?___ftpack+4
  5221  0CCF  2769               	fcall	___ftpack
  5222  0CD0  0872               	movf	?___ftpack,w
  5223  0CD1  00A4               	movwf	?___ftdiv
  5224  0CD2  0873               	movf	?___ftpack+1,w
  5225  0CD3  00A5               	movwf	?___ftdiv+1
  5226  0CD4  0874               	movf	?___ftpack+2,w
  5227  0CD5  00A6               	movwf	?___ftdiv+2
  5228  0CD6  0008               	return
  5229  0CD7                     __end_of___ftdiv:	
  5230  0CD7                     __ptext523:	
  5231 ;; =============== function ___ftsub ends ============
  5232                           
  5233                           
  5234 ;; *************** function _scale *****************
  5235 ;; Defined at:
  5236 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  5237 ;; Parameters:    Size  Location     Type
  5238 ;;  scl             1    wreg     char 
  5239 ;; Auto vars:     Size  Location     Type
  5240 ;;  scl             1   42[BANK0 ] char 
  5241 ;; Return value:  Size  Location     Type
  5242 ;;                  3   32[BANK0 ] char 
  5243 ;; Registers used:
  5244 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5245 ;; Tracked objects:
  5246 ;;		On entry : 60/20
  5247 ;;		On exit  : 60/0
  5248 ;;		Unchanged: FFF9F/0
  5249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5250 ;;      Params:         0       3       0       0       0
  5251 ;;      Locals:         0       4       0       0       0
  5252 ;;      Temps:          0       4       0       0       0
  5253 ;;      Totals:         0      11       0       0       0
  5254 ;;Total ram usage:       11 bytes
  5255 ;; Hardware stack levels used:    1
  5256 ;; Hardware stack levels required when called:    3
  5257 ;; This function calls:
  5258 ;;		___awmod
  5259 ;;		___awdiv
  5260 ;;		___ftmul
  5261 ;;		___bmul
  5262 ;; This function is called by:
  5263 ;;		_printf
  5264 ;; This function uses a non-reentrant model
  5265 ;;
  5266  0CD7                     _scale:	
  5267                           
  5268                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5269                           ;scale@scl stored from wreg
  5270  0CD7  1283               	bcf	3,5	;RP0=0, select bank0
  5271  0CD8  00CA               	movwf	scale@scl
  5272  0CD9  1FCA               	btfss	scale@scl,7
  5273  0CDA  2DA3               	goto	l6785
  5274  0CDB  09CA               	comf	scale@scl,f
  5275  0CDC  0ACA               	incf	scale@scl,f
  5276  0CDD  084A               	movf	scale@scl,w
  5277  0CDE  3A80               	xorlw	128
  5278  0CDF  3E12               	addlw	-238
  5279  0CE0  1C03               	skipc
  5280  0CE1  2D47               	goto	l6775
  5281  0CE2  300A               	movlw	10
  5282  0CE3  27CB  120A  158A   	fcall	PL15	;call to abstracted procedure
  5283  0CE6  26AF  120A  158A   	fcall	___awmod
  5284  0CE9  0873               	movf	?___awmod+1,w
  5285  0CEA  00FB               	movwf	?___awdiv+3
  5286  0CEB  0872               	movf	?___awmod,w
  5287  0CEC  00FA               	movwf	?___awdiv+2
  5288  0CED  2669  120A  158A   	fcall	___awdiv
  5289  0CF0  27F8               	fcall	PL26	;call to abstracted procedure
  5290  0CF1  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5291  0CF2  0084               	movwf	4
  5292  0CF3  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5293  0CF8  00B1               	movwf	?___ftmul
  5294  0CF9  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5295  0CFE  00B2               	movwf	?___ftmul+1
  5296  0CFF  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5297  0D04  27E0  120A  158A   	fcall	PL23	;call to abstracted procedure
  5298  0D07  1BFA               	btfsc	?___awdiv+2,7
  5299  0D08  03FB               	decf	?___awdiv+3,f
  5300  0D09  2669  120A  158A   	fcall	___awdiv
  5301  0D0C  27C3               	fcall	PL11	;call to abstracted procedure
  5302  0D0D  3E37               	addlw	low ((__npowers_-__stringbase+54))
  5303  0D0E  0084               	movwf	4
  5304  0D0F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5305  0D14  00B4               	movwf	?___ftmul+3
  5306  0D15  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5307  0D1A  00B5               	movwf	?___ftmul+4
  5308  0D1B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5309  0D20  00B6               	movwf	?___ftmul+5
  5310  0D21  26EC  120A  158A   	fcall	___ftmul
  5311  0D24  27AE  120A  158A   	fcall	PL8	;call to abstracted procedure
  5312  0D27  1BF4               	btfsc	?___awmod+2,7
  5313  0D28  03F5               	decf	?___awmod+3,f
  5314  0D29  26AF  120A  158A   	fcall	___awmod
  5315  0D2C  27BB               	fcall	PL10	;call to abstracted procedure
  5316  0D2D  3E01               	addlw	low (__npowers_-__stringbase)
  5317  0D2E  0084               	movwf	4
  5318  0D2F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5319  0D34  00B1               	movwf	?___ftmul
  5320  0D35  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5321  0D3A  00B2               	movwf	?___ftmul+1
  5322  0D3B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5323  0D40  27E8  120A  158A   	fcall	PL24	;call to abstracted procedure
  5324  0D43  26EC  120A  158A   	fcall	___ftmul
  5325  0D46  2FA7               	ljmp	PL7	;call to abstracted procedure
  5326  0D47                     l6775:	
  5327  0D47  084A               	movf	scale@scl,w
  5328  0D48  3A80               	xorlw	128
  5329  0D49  3E75               	addlw	-139
  5330  0D4A  1C03               	skipc
  5331  0D4B  2D8C               	goto	l6781
  5332  0D4C  300A               	movlw	10
  5333  0D4D  00F2               	movwf	?___awmod
  5334  0D4E  01F3               	clrf	?___awmod+1
  5335  0D4F  084A               	movf	scale@scl,w
  5336  0D50  00F4               	movwf	?___awmod+2
  5337  0D51  01F5               	clrf	?___awmod+3
  5338  0D52  1BF4               	btfsc	?___awmod+2,7
  5339  0D53  03F5               	decf	?___awmod+3,f
  5340  0D54  26AF  120A  158A   	fcall	___awmod
  5341  0D57  27BB               	fcall	PL10	;call to abstracted procedure
  5342  0D58  3E01               	addlw	low (__npowers_-__stringbase)
  5343  0D59  0084               	movwf	4
  5344  0D5A  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5345  0D5F  00B1               	movwf	?___ftmul
  5346  0D60  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5347  0D65  00B2               	movwf	?___ftmul+1
  5348  0D66  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5349  0D6B  27F0  120A  158A   	fcall	PL25	;call to abstracted procedure
  5350  0D6E  1BFA               	btfsc	?___awdiv+2,7
  5351  0D6F  03FB               	decf	?___awdiv+3,f
  5352  0D70  2669  120A  158A   	fcall	___awdiv
  5353  0D73  27C3               	fcall	PL11	;call to abstracted procedure
  5354  0D74  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5355  0D75  0084               	movwf	4
  5356  0D76  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5357  0D7B  00B4               	movwf	?___ftmul+3
  5358  0D7C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5359  0D81  00B5               	movwf	?___ftmul+4
  5360  0D82  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5361  0D87  00B6               	movwf	?___ftmul+5
  5362  0D88  26EC  120A  158A   	fcall	___ftmul
  5363  0D8B  2FA7               	ljmp	PL7	;call to abstracted procedure
  5364  0D8C                     l6781:	
  5365  0D8C  3003               	movlw	3
  5366  0D8D  00FB               	movwf	?___bmul
  5367  0D8E  084A               	movf	scale@scl,w
  5368  0D8F  275B               	fcall	___bmul
  5369  0D90  3E01               	addlw	low (__npowers_-__stringbase)
  5370  0D91  0084               	movwf	4
  5371  0D92  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5372  0D97  00C0               	movwf	?_scale
  5373  0D98  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5374  0D9D  00C1               	movwf	?_scale+1
  5375  0D9E  160A  118A  2000   	fcall	stringdir
  5376  0DA1  00C2               	movwf	?_scale+2
  5377  0DA2  0008               	return
  5378  0DA3                     l6785:	
  5379  0DA3  084A               	movf	scale@scl,w
  5380  0DA4  3A80               	xorlw	128
  5381  0DA5  3E12               	addlw	-238
  5382  0DA6  1C03               	skipc
  5383  0DA7  2E0D               	goto	l6793
  5384  0DA8  300A               	movlw	10
  5385  0DA9  27CB  120A  158A   	fcall	PL15	;call to abstracted procedure
  5386  0DAC  26AF  120A  158A   	fcall	___awmod
  5387  0DAF  0873               	movf	?___awmod+1,w
  5388  0DB0  00FB               	movwf	?___awdiv+3
  5389  0DB1  0872               	movf	?___awmod,w
  5390  0DB2  00FA               	movwf	?___awdiv+2
  5391  0DB3  2669  120A  158A   	fcall	___awdiv
  5392  0DB6  27F8               	fcall	PL26	;call to abstracted procedure
  5393  0DB7  3E43               	addlw	low ((__powers_-__stringbase+27))
  5394  0DB8  0084               	movwf	4
  5395  0DB9  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5396  0DBE  00B1               	movwf	?___ftmul
  5397  0DBF  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5398  0DC4  00B2               	movwf	?___ftmul+1
  5399  0DC5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5400  0DCA  27E0  120A  158A   	fcall	PL23	;call to abstracted procedure
  5401  0DCD  1BFA               	btfsc	?___awdiv+2,7
  5402  0DCE  03FB               	decf	?___awdiv+3,f
  5403  0DCF  2669  120A  158A   	fcall	___awdiv
  5404  0DD2  27C3               	fcall	PL11	;call to abstracted procedure
  5405  0DD3  3E5E               	addlw	low ((__powers_-__stringbase+54))
  5406  0DD4  0084               	movwf	4
  5407  0DD5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5408  0DDA  00B4               	movwf	?___ftmul+3
  5409  0DDB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5410  0DE0  00B5               	movwf	?___ftmul+4
  5411  0DE1  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5412  0DE6  00B6               	movwf	?___ftmul+5
  5413  0DE7  26EC  120A  158A   	fcall	___ftmul
  5414  0DEA  27AE  120A  158A   	fcall	PL8	;call to abstracted procedure
  5415  0DED  1BF4               	btfsc	?___awmod+2,7
  5416  0DEE  03F5               	decf	?___awmod+3,f
  5417  0DEF  26AF  120A  158A   	fcall	___awmod
  5418  0DF2  27BB               	fcall	PL10	;call to abstracted procedure
  5419  0DF3  3E28               	addlw	low (__powers_-__stringbase)
  5420  0DF4  0084               	movwf	4
  5421  0DF5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5422  0DFA  00B1               	movwf	?___ftmul
  5423  0DFB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5424  0E00  00B2               	movwf	?___ftmul+1
  5425  0E01  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5426  0E06  27E8  120A  158A   	fcall	PL24	;call to abstracted procedure
  5427  0E09  26EC  120A  158A   	fcall	___ftmul
  5428  0E0C  2FA7               	ljmp	PL7	;call to abstracted procedure
  5429  0E0D                     l6793:	
  5430  0E0D  084A               	movf	scale@scl,w
  5431  0E0E  3A80               	xorlw	128
  5432  0E0F  3E75               	addlw	-139
  5433  0E10  1C03               	skipc
  5434  0E11  2E52               	goto	l6799
  5435  0E12  300A               	movlw	10
  5436  0E13  00F2               	movwf	?___awmod
  5437  0E14  01F3               	clrf	?___awmod+1
  5438  0E15  084A               	movf	scale@scl,w
  5439  0E16  00F4               	movwf	?___awmod+2
  5440  0E17  01F5               	clrf	?___awmod+3
  5441  0E18  1BF4               	btfsc	?___awmod+2,7
  5442  0E19  03F5               	decf	?___awmod+3,f
  5443  0E1A  26AF  120A  158A   	fcall	___awmod
  5444  0E1D  27BB               	fcall	PL10	;call to abstracted procedure
  5445  0E1E  3E28               	addlw	low (__powers_-__stringbase)
  5446  0E1F  0084               	movwf	4
  5447  0E20  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5448  0E25  00B1               	movwf	?___ftmul
  5449  0E26  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5450  0E2B  00B2               	movwf	?___ftmul+1
  5451  0E2C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5452  0E31  27F0  120A  158A   	fcall	PL25	;call to abstracted procedure
  5453  0E34  1BFA               	btfsc	?___awdiv+2,7
  5454  0E35  03FB               	decf	?___awdiv+3,f
  5455  0E36  2669  120A  158A   	fcall	___awdiv
  5456  0E39  27C3               	fcall	PL11	;call to abstracted procedure
  5457  0E3A  3E43               	addlw	low ((__powers_-__stringbase+27))
  5458  0E3B  0084               	movwf	4
  5459  0E3C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5460  0E41  00B4               	movwf	?___ftmul+3
  5461  0E42  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5462  0E47  00B5               	movwf	?___ftmul+4
  5463  0E48  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5464  0E4D  00B6               	movwf	?___ftmul+5
  5465  0E4E  26EC  120A  158A   	fcall	___ftmul
  5466  0E51  2FA7               	ljmp	PL7	;call to abstracted procedure
  5467  0E52                     l6799:	
  5468  0E52  3003               	movlw	3
  5469  0E53  00FB               	movwf	?___bmul
  5470  0E54  084A               	movf	scale@scl,w
  5471  0E55  275B               	fcall	___bmul
  5472  0E56  3E28               	addlw	low (__powers_-__stringbase)
  5473  0E57  0084               	movwf	4
  5474  0E58  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5475  0E5D  00C0               	movwf	?_scale
  5476  0E5E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5477  0E63  00C1               	movwf	?_scale+1
  5478  0E64  160A  118A  2000   	fcall	stringdir
  5479  0E67  00C2               	movwf	?_scale+2
  5480  0E68  0008               	return
  5481  0E69                     __end_of_scale:	
  5482  0E69                     __ptext538:	
  5483 ;; =============== function ___llmod ends ============
  5484                           
  5485                           
  5486 ;; *************** function ___awdiv *****************
  5487 ;; Defined at:
  5488 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;  divisor         2    8[COMMON] int 
  5491 ;;  dividend        2   10[COMMON] int 
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;  quotient        2    2[BANK0 ] int 
  5494 ;;  sign            1    1[BANK0 ] unsigned char 
  5495 ;;  counter         1    0[BANK0 ] unsigned char 
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  2    8[COMMON] int 
  5498 ;; Registers used:
  5499 ;;		wreg, status,2, status,0
  5500 ;; Tracked objects:
  5501 ;;		On entry : 40/20
  5502 ;;		On exit  : 60/0
  5503 ;;		Unchanged: FFF9F/0
  5504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5505 ;;      Params:         4       0       0       0       0
  5506 ;;      Locals:         0       4       0       0       0
  5507 ;;      Temps:          0       0       0       0       0
  5508 ;;      Totals:         4       4       0       0       0
  5509 ;;Total ram usage:        8 bytes
  5510 ;; Hardware stack levels used:    1
  5511 ;; Hardware stack levels required when called:    1
  5512 ;; This function calls:
  5513 ;;		Nothing
  5514 ;; This function is called by:
  5515 ;;		_scale
  5516 ;;		_printf
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519  0E69                     ___awdiv:	
  5520                           
  5521                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5522  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  5523  0E6A  01A1               	clrf	___awdiv@sign
  5524  0E6B  1FF9               	btfss	___awdiv@divisor+1,7
  5525  0E6C  2E74               	goto	l6307
  5526  0E6D  09F8               	comf	___awdiv@divisor,f
  5527  0E6E  09F9               	comf	___awdiv@divisor+1,f
  5528  0E6F  0AF8               	incf	___awdiv@divisor,f
  5529  0E70  1903               	skipnz
  5530  0E71  0AF9               	incf	___awdiv@divisor+1,f
  5531  0E72  01A1               	clrf	___awdiv@sign
  5532  0E73  0AA1               	incf	___awdiv@sign,f
  5533  0E74                     l6307:	
  5534  0E74  1FFB               	btfss	___awdiv@dividend+1,7
  5535  0E75  2E7D               	goto	l6313
  5536  0E76  09FA               	comf	___awdiv@dividend,f
  5537  0E77  09FB               	comf	___awdiv@dividend+1,f
  5538  0E78  0AFA               	incf	___awdiv@dividend,f
  5539  0E79  1903               	skipnz
  5540  0E7A  0AFB               	incf	___awdiv@dividend+1,f
  5541  0E7B  3001               	movlw	1
  5542  0E7C  06A1               	xorwf	___awdiv@sign,f
  5543  0E7D                     l6313:	
  5544  0E7D  01A2               	clrf	___awdiv@quotient
  5545  0E7E  01A3               	clrf	___awdiv@quotient+1
  5546  0E7F  0879               	movf	___awdiv@divisor+1,w
  5547  0E80  0478               	iorwf	___awdiv@divisor,w
  5548  0E81  1903               	skipnz
  5549  0E82  2EA2               	goto	l6335
  5550  0E83  01A0               	clrf	___awdiv@counter
  5551  0E84                     L15:	
  5552  0E84  0AA0               	incf	___awdiv@counter,f
  5553  0E85  1BF9               	btfsc	___awdiv@divisor+1,7
  5554  0E86  2E8B               	goto	l6323
  5555  0E87  1003               	clrc
  5556  0E88  0DF8               	rlf	___awdiv@divisor,f
  5557  0E89  0DF9               	rlf	___awdiv@divisor+1,f
  5558  0E8A  2E84               	goto	L15
  5559  0E8B                     l6323:	
  5560  0E8B  1003               	clrc
  5561  0E8C  0DA2               	rlf	___awdiv@quotient,f
  5562  0E8D  0DA3               	rlf	___awdiv@quotient+1,f
  5563  0E8E  0879               	movf	___awdiv@divisor+1,w
  5564  0E8F  027B               	subwf	___awdiv@dividend+1,w
  5565  0E90  1D03               	skipz
  5566  0E91  2E94               	goto	u2475
  5567  0E92  0878               	movf	___awdiv@divisor,w
  5568  0E93  027A               	subwf	___awdiv@dividend,w
  5569  0E94                     u2475:	
  5570  0E94  1C03               	skipc
  5571  0E95  2E9E               	goto	L16
  5572  0E96  0878               	movf	___awdiv@divisor,w
  5573  0E97  02FA               	subwf	___awdiv@dividend,f
  5574  0E98  0879               	movf	___awdiv@divisor+1,w
  5575  0E99  1C03               	skipc
  5576  0E9A  03FB               	decf	___awdiv@dividend+1,f
  5577  0E9B  02FB               	subwf	___awdiv@dividend+1,f
  5578  0E9C  1422               	bsf	___awdiv@quotient,0
  5579  0E9D  1003               	clrc
  5580  0E9E                     L16:	
  5581  0E9E  0CF9               	rrf	___awdiv@divisor+1,f
  5582  0E9F  0CF8               	rrf	___awdiv@divisor,f
  5583  0EA0  0BA0               	decfsz	___awdiv@counter,f
  5584  0EA1  2E8B               	goto	l6323
  5585  0EA2                     l6335:	
  5586  0EA2  0821               	movf	___awdiv@sign,w
  5587  0EA3  1903               	btfsc	3,2
  5588  0EA4  2EAA               	goto	l6339
  5589  0EA5  09A2               	comf	___awdiv@quotient,f
  5590  0EA6  09A3               	comf	___awdiv@quotient+1,f
  5591  0EA7  0AA2               	incf	___awdiv@quotient,f
  5592  0EA8  1903               	skipnz
  5593  0EA9  0AA3               	incf	___awdiv@quotient+1,f
  5594  0EAA                     l6339:	
  5595  0EAA  0823               	movf	___awdiv@quotient+1,w
  5596  0EAB  00F9               	movwf	?___awdiv+1
  5597  0EAC  0822               	movf	___awdiv@quotient,w
  5598  0EAD  00F8               	movwf	?___awdiv
  5599  0EAE  0008               	return
  5600  0EAF                     __end_of___awdiv:	
  5601  0EAF                     __ptext533:	
  5602 ;; =============== function _lcd_put_byte ends ============
  5603                           
  5604                           
  5605 ;; *************** function ___awmod *****************
  5606 ;; Defined at:
  5607 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  5608 ;; Parameters:    Size  Location     Type
  5609 ;;  divisor         2    2[COMMON] int 
  5610 ;;  dividend        2    4[COMMON] int 
  5611 ;; Auto vars:     Size  Location     Type
  5612 ;;  sign            1    7[COMMON] unsigned char 
  5613 ;;  counter         1    6[COMMON] unsigned char 
  5614 ;; Return value:  Size  Location     Type
  5615 ;;                  2    2[COMMON] int 
  5616 ;; Registers used:
  5617 ;;		wreg, status,2, status,0
  5618 ;; Tracked objects:
  5619 ;;		On entry : 60/0
  5620 ;;		On exit  : 60/0
  5621 ;;		Unchanged: FFF9F/0
  5622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5623 ;;      Params:         4       0       0       0       0
  5624 ;;      Locals:         2       0       0       0       0
  5625 ;;      Temps:          0       0       0       0       0
  5626 ;;      Totals:         6       0       0       0       0
  5627 ;;Total ram usage:        6 bytes
  5628 ;; Hardware stack levels used:    1
  5629 ;; Hardware stack levels required when called:    1
  5630 ;; This function calls:
  5631 ;;		Nothing
  5632 ;; This function is called by:
  5633 ;;		_scale
  5634 ;; This function uses a non-reentrant model
  5635 ;;
  5636  0EAF                     ___awmod:	
  5637                           
  5638                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5639  0EAF  01F7               	clrf	___awmod@sign
  5640  0EB0  1FF5               	btfss	___awmod@dividend+1,7
  5641  0EB1  2EB9               	goto	l6425
  5642  0EB2  09F4               	comf	___awmod@dividend,f
  5643  0EB3  09F5               	comf	___awmod@dividend+1,f
  5644  0EB4  0AF4               	incf	___awmod@dividend,f
  5645  0EB5  1903               	skipnz
  5646  0EB6  0AF5               	incf	___awmod@dividend+1,f
  5647  0EB7  01F7               	clrf	___awmod@sign
  5648  0EB8  0AF7               	incf	___awmod@sign,f
  5649  0EB9                     l6425:	
  5650  0EB9  1FF3               	btfss	___awmod@divisor+1,7
  5651  0EBA  2EC0               	goto	l6429
  5652  0EBB  09F2               	comf	___awmod@divisor,f
  5653  0EBC  09F3               	comf	___awmod@divisor+1,f
  5654  0EBD  0AF2               	incf	___awmod@divisor,f
  5655  0EBE  1903               	skipnz
  5656  0EBF  0AF3               	incf	___awmod@divisor+1,f
  5657  0EC0                     l6429:	
  5658  0EC0  0873               	movf	___awmod@divisor+1,w
  5659  0EC1  0472               	iorwf	___awmod@divisor,w
  5660  0EC2  1903               	skipnz
  5661  0EC3  2EDF               	goto	l6445
  5662  0EC4  01F6               	clrf	___awmod@counter
  5663  0EC5                     L8:	
  5664  0EC5  0AF6               	incf	___awmod@counter,f
  5665  0EC6  1BF3               	btfsc	___awmod@divisor+1,7
  5666  0EC7  2ECC               	goto	l6437
  5667  0EC8  1003               	clrc
  5668  0EC9  0DF2               	rlf	___awmod@divisor,f
  5669  0ECA  0DF3               	rlf	___awmod@divisor+1,f
  5670  0ECB  2EC5               	goto	L8
  5671  0ECC                     l6437:	
  5672  0ECC  0873               	movf	___awmod@divisor+1,w
  5673  0ECD  0275               	subwf	___awmod@dividend+1,w
  5674  0ECE  1D03               	skipz
  5675  0ECF  2ED2               	goto	u2665
  5676  0ED0  0872               	movf	___awmod@divisor,w
  5677  0ED1  0274               	subwf	___awmod@dividend,w
  5678  0ED2                     u2665:	
  5679  0ED2  1C03               	skipc
  5680  0ED3  2EDB               	goto	L9
  5681  0ED4  0872               	movf	___awmod@divisor,w
  5682  0ED5  02F4               	subwf	___awmod@dividend,f
  5683  0ED6  0873               	movf	___awmod@divisor+1,w
  5684  0ED7  1C03               	skipc
  5685  0ED8  03F5               	decf	___awmod@dividend+1,f
  5686  0ED9  02F5               	subwf	___awmod@dividend+1,f
  5687  0EDA  1003               	clrc
  5688  0EDB                     L9:	
  5689  0EDB  0CF3               	rrf	___awmod@divisor+1,f
  5690  0EDC  0CF2               	rrf	___awmod@divisor,f
  5691  0EDD  0BF6               	decfsz	___awmod@counter,f
  5692  0EDE  2ECC               	goto	l6437
  5693  0EDF                     l6445:	
  5694  0EDF  0877               	movf	___awmod@sign,w
  5695  0EE0  1903               	btfsc	3,2
  5696  0EE1  2EE7               	goto	l6449
  5697  0EE2  09F4               	comf	___awmod@dividend,f
  5698  0EE3  09F5               	comf	___awmod@dividend+1,f
  5699  0EE4  0AF4               	incf	___awmod@dividend,f
  5700  0EE5  1903               	skipnz
  5701  0EE6  0AF5               	incf	___awmod@dividend+1,f
  5702  0EE7                     l6449:	
  5703  0EE7  0875               	movf	___awmod@dividend+1,w
  5704  0EE8  00F3               	movwf	?___awmod+1
  5705  0EE9  0874               	movf	___awmod@dividend,w
  5706  0EEA  00F2               	movwf	?___awmod
  5707  0EEB  0008               	return
  5708  0EEC                     __end_of___awmod:	
  5709  0EEC                     __ptext528:	
  5710 ;; =============== function ___lltoft ends ============
  5711                           
  5712                           
  5713 ;; *************** function ___ftmul *****************
  5714 ;; Defined at:
  5715 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  5716 ;; Parameters:    Size  Location     Type
  5717 ;;  f1              3   17[BANK0 ] float 
  5718 ;;  f2              3   20[BANK0 ] float 
  5719 ;; Auto vars:     Size  Location     Type
  5720 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  5721 ;;  sign            1   31[BANK0 ] unsigned char 
  5722 ;;  cntr            1   30[BANK0 ] unsigned char 
  5723 ;;  exp             1   26[BANK0 ] unsigned char 
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  3   17[BANK0 ] float 
  5726 ;; Registers used:
  5727 ;;		wreg, status,2, status,0, pclath, cstack
  5728 ;; Tracked objects:
  5729 ;;		On entry : 60/0
  5730 ;;		On exit  : 60/0
  5731 ;;		Unchanged: FFF9F/0
  5732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5733 ;;      Params:         0       6       0       0       0
  5734 ;;      Locals:         0       6       0       0       0
  5735 ;;      Temps:          0       3       0       0       0
  5736 ;;      Totals:         0      15       0       0       0
  5737 ;;Total ram usage:       15 bytes
  5738 ;; Hardware stack levels used:    1
  5739 ;; Hardware stack levels required when called:    2
  5740 ;; This function calls:
  5741 ;;		___ftpack
  5742 ;; This function is called by:
  5743 ;;		_fround
  5744 ;;		_scale
  5745 ;;		_printf
  5746 ;; This function uses a non-reentrant model
  5747 ;;
  5748  0EEC                     ___ftmul:	
  5749                           
  5750                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5751  0EEC  0831               	movf	___ftmul@f1,w
  5752  0EED  00B7               	movwf	??___ftmul
  5753  0EEE  0832               	movf	___ftmul@f1+1,w
  5754  0EEF  00B8               	movwf	??___ftmul+1
  5755  0EF0  0833               	movf	___ftmul@f1+2,w
  5756  0EF1  00B9               	movwf	??___ftmul+2
  5757  0EF2  1003               	clrc
  5758  0EF3  0D38               	rlf	??___ftmul+1,w
  5759  0EF4  0D39               	rlf	??___ftmul+2,w
  5760  0EF5  00BA               	movwf	___ftmul@exp
  5761  0EF6  08BA               	movf	___ftmul@exp,f
  5762  0EF7  1D03               	skipz
  5763  0EF8  2EFD               	goto	l6631
  5764  0EF9  01B1               	clrf	?___ftmul
  5765  0EFA  01B2               	clrf	?___ftmul+1
  5766  0EFB  01B3               	clrf	?___ftmul+2
  5767  0EFC  0008               	return
  5768  0EFD                     l6631:	
  5769  0EFD  0834               	movf	___ftmul@f2,w
  5770  0EFE  00B7               	movwf	??___ftmul
  5771  0EFF  0835               	movf	___ftmul@f2+1,w
  5772  0F00  00B8               	movwf	??___ftmul+1
  5773  0F01  0836               	movf	___ftmul@f2+2,w
  5774  0F02  00B9               	movwf	??___ftmul+2
  5775  0F03  1003               	clrc
  5776  0F04  0D38               	rlf	??___ftmul+1,w
  5777  0F05  0D39               	rlf	??___ftmul+2,w
  5778  0F06  00BF               	movwf	___ftmul@sign
  5779  0F07  08BF               	movf	___ftmul@sign,f
  5780  0F08  1D03               	skipz
  5781  0F09  2F0E               	goto	l6637
  5782  0F0A  01B1               	clrf	?___ftmul
  5783  0F0B  01B2               	clrf	?___ftmul+1
  5784  0F0C  01B3               	clrf	?___ftmul+2
  5785  0F0D  0008               	return
  5786  0F0E                     l6637:	
  5787  0F0E  083F               	movf	___ftmul@sign,w
  5788  0F0F  3E7B               	addlw	123
  5789  0F10  07BA               	addwf	___ftmul@exp,f
  5790  0F11  0833               	movf	___ftmul@f1+2,w
  5791  0F12  00BF               	movwf	___ftmul@sign
  5792  0F13  0836               	movf	___ftmul@f2+2,w
  5793  0F14  06BF               	xorwf	___ftmul@sign,f
  5794  0F15  3080               	movlw	128
  5795  0F16  05BF               	andwf	___ftmul@sign,f
  5796  0F17  3007               	movlw	7
  5797  0F18  17B2               	bsf	___ftmul@f1+1,7
  5798  0F19  17B5               	bsf	___ftmul@f2+1,7
  5799  0F1A  01B6               	clrf	___ftmul@f2+2
  5800  0F1B  01BB               	clrf	___ftmul@f3_as_product
  5801  0F1C  01BC               	clrf	___ftmul@f3_as_product+1
  5802  0F1D  01BD               	clrf	___ftmul@f3_as_product+2
  5803  0F1E  00BE               	movwf	___ftmul@cntr
  5804  0F1F                     l6655:	
  5805  0F1F  1C31               	btfss	___ftmul@f1,0
  5806  0F20  2F29               	goto	l6659
  5807  0F21  0834               	movf	___ftmul@f2,w
  5808  0F22  27D6  120A  158A   	fcall	PL18	;call to abstracted procedure
  5809  0F25  1803               	skipnc
  5810  0F26  0A36               	incf	___ftmul@f2+2,w
  5811  0F27  1D03               	btfss	3,2
  5812  0F28  07BD               	addwf	___ftmul@f3_as_product+2,f
  5813  0F29                     l6659:	
  5814  0F29  1003               	clrc
  5815  0F2A  0CB3               	rrf	___ftmul@f1+2,f
  5816  0F2B  0CB2               	rrf	___ftmul@f1+1,f
  5817  0F2C  0CB1               	rrf	___ftmul@f1,f
  5818  0F2D  1003               	clrc
  5819  0F2E  0DB4               	rlf	___ftmul@f2,f
  5820  0F2F  0DB5               	rlf	___ftmul@f2+1,f
  5821  0F30  0DB6               	rlf	___ftmul@f2+2,f
  5822  0F31  0BBE               	decfsz	___ftmul@cntr,f
  5823  0F32  2F1F               	goto	l6655
  5824  0F33  3009               	movlw	9
  5825  0F34  00BE               	movwf	___ftmul@cntr
  5826  0F35                     l6667:	
  5827  0F35  1C31               	btfss	___ftmul@f1,0
  5828  0F36  2F3F               	goto	l6671
  5829  0F37  0834               	movf	___ftmul@f2,w
  5830  0F38  27D6  120A  158A   	fcall	PL18	;call to abstracted procedure
  5831  0F3B  1803               	skipnc
  5832  0F3C  0A36               	incf	___ftmul@f2+2,w
  5833  0F3D  1D03               	btfss	3,2
  5834  0F3E  07BD               	addwf	___ftmul@f3_as_product+2,f
  5835  0F3F                     l6671:	
  5836  0F3F  1003               	clrc
  5837  0F40  0CB3               	rrf	___ftmul@f1+2,f
  5838  0F41  0CB2               	rrf	___ftmul@f1+1,f
  5839  0F42  0CB1               	rrf	___ftmul@f1,f
  5840  0F43  1003               	clrc
  5841  0F44  0CBD               	rrf	___ftmul@f3_as_product+2,f
  5842  0F45  0CBC               	rrf	___ftmul@f3_as_product+1,f
  5843  0F46  0CBB               	rrf	___ftmul@f3_as_product,f
  5844  0F47  0BBE               	decfsz	___ftmul@cntr,f
  5845  0F48  2F35               	goto	l6667
  5846  0F49  083B               	movf	___ftmul@f3_as_product,w
  5847  0F4A  00F2               	movwf	?___ftpack
  5848  0F4B  083C               	movf	___ftmul@f3_as_product+1,w
  5849  0F4C  00F3               	movwf	?___ftpack+1
  5850  0F4D  083D               	movf	___ftmul@f3_as_product+2,w
  5851  0F4E  00F4               	movwf	?___ftpack+2
  5852  0F4F  083A               	movf	___ftmul@exp,w
  5853  0F50  00F5               	movwf	?___ftpack+3
  5854  0F51  083F               	movf	___ftmul@sign,w
  5855  0F52  00F6               	movwf	?___ftpack+4
  5856  0F53  2769               	fcall	___ftpack
  5857  0F54  0872               	movf	?___ftpack,w
  5858  0F55  00B1               	movwf	?___ftmul
  5859  0F56  0873               	movf	?___ftpack+1,w
  5860  0F57  00B2               	movwf	?___ftmul+1
  5861  0F58  0874               	movf	?___ftpack+2,w
  5862  0F59  00B3               	movwf	?___ftmul+2
  5863  0F5A  0008               	return
  5864  0F5B                     __end_of___ftmul:	
  5865  0F5B                     __ptext544:	
  5866 ;; =============== function ___wmul ends ============
  5867                           
  5868                           
  5869 ;; *************** function ___bmul *****************
  5870 ;; Defined at:
  5871 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  5872 ;; Parameters:    Size  Location     Type
  5873 ;;  multiplier      1    wreg     unsigned char 
  5874 ;;  multiplicand    1   11[COMMON] unsigned char 
  5875 ;; Auto vars:     Size  Location     Type
  5876 ;;  multiplier      1    1[BANK0 ] unsigned char 
  5877 ;;  product         1    0[BANK0 ] unsigned char 
  5878 ;; Return value:  Size  Location     Type
  5879 ;;                  1    wreg      unsigned char 
  5880 ;; Registers used:
  5881 ;;		wreg, status,2, status,0
  5882 ;; Tracked objects:
  5883 ;;		On entry : 60/0
  5884 ;;		On exit  : 60/0
  5885 ;;		Unchanged: FFF9F/0
  5886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5887 ;;      Params:         1       0       0       0       0
  5888 ;;      Locals:         0       2       0       0       0
  5889 ;;      Temps:          0       0       0       0       0
  5890 ;;      Totals:         1       2       0       0       0
  5891 ;;Total ram usage:        3 bytes
  5892 ;; Hardware stack levels used:    1
  5893 ;; Hardware stack levels required when called:    1
  5894 ;; This function calls:
  5895 ;;		Nothing
  5896 ;; This function is called by:
  5897 ;;		_fround
  5898 ;;		_scale
  5899 ;; This function uses a non-reentrant model
  5900 ;;
  5901  0F5B                     ___bmul:	
  5902                           
  5903                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5904                           ;___bmul@multiplier stored from wreg
  5905  0F5B  00A1               	movwf	___bmul@multiplier
  5906  0F5C  01A0               	clrf	___bmul@product
  5907  0F5D                     l6161:	
  5908  0F5D  087B               	movf	___bmul@multiplicand,w
  5909  0F5E  1821               	btfsc	___bmul@multiplier,0
  5910  0F5F  07A0               	addwf	___bmul@product,f
  5911  0F60  1003               	clrc
  5912  0F61  0DFB               	rlf	___bmul@multiplicand,f
  5913  0F62  1003               	clrc
  5914  0F63  0CA1               	rrf	___bmul@multiplier,f
  5915  0F64  08A1               	movf	___bmul@multiplier,f
  5916  0F65  1D03               	skipz
  5917  0F66  2F5D               	goto	l6161
  5918  0F67  0820               	movf	___bmul@product,w
  5919  0F68  0008               	return
  5920  0F69                     __end_of___bmul:	
  5921  0F69                     __ptext540:	
  5922 ;; =============== function ___fttol ends ============
  5923                           
  5924                           
  5925 ;; *************** function ___ftpack *****************
  5926 ;; Defined at:
  5927 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  5928 ;; Parameters:    Size  Location     Type
  5929 ;;  arg             3    2[COMMON] unsigned um
  5930 ;;  exp             1    5[COMMON] unsigned char 
  5931 ;;  sign            1    6[COMMON] unsigned char 
  5932 ;; Auto vars:     Size  Location     Type
  5933 ;;		None
  5934 ;; Return value:  Size  Location     Type
  5935 ;;                  3    2[COMMON] float 
  5936 ;; Registers used:
  5937 ;;		wreg, status,2, status,0
  5938 ;; Tracked objects:
  5939 ;;		On entry : 60/0
  5940 ;;		On exit  : 60/0
  5941 ;;		Unchanged: FFF9F/0
  5942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5943 ;;      Params:         5       0       0       0       0
  5944 ;;      Locals:         0       0       0       0       0
  5945 ;;      Temps:          3       0       0       0       0
  5946 ;;      Totals:         8       0       0       0       0
  5947 ;;Total ram usage:        8 bytes
  5948 ;; Hardware stack levels used:    1
  5949 ;; Hardware stack levels required when called:    1
  5950 ;; This function calls:
  5951 ;;		Nothing
  5952 ;; This function is called by:
  5953 ;;		___ftadd
  5954 ;;		___ftdiv
  5955 ;;		___ftmul
  5956 ;;		___lltoft
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959  0F69                     ___ftpack:	
  5960                           
  5961                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  5962  0F69  0875               	movf	___ftpack@exp,w
  5963  0F6A  1903               	btfsc	3,2
  5964  0F6B  2F71               	goto	l6237
  5965  0F6C  0874               	movf	___ftpack@arg+2,w
  5966  0F6D  0473               	iorwf	___ftpack@arg+1,w
  5967  0F6E  0472               	iorwf	___ftpack@arg,w
  5968  0F6F  1D03               	skipz
  5969  0F70  2F7A               	goto	l6243
  5970  0F71                     l6237:	
  5971  0F71  01F2               	clrf	?___ftpack
  5972  0F72  01F3               	clrf	?___ftpack+1
  5973  0F73  01F4               	clrf	?___ftpack+2
  5974  0F74  0008               	return
  5975  0F75                     l6241:	
  5976  0F75  0AF5               	incf	___ftpack@exp,f
  5977  0F76  1003               	clrc
  5978  0F77  0CF4               	rrf	___ftpack@arg+2,f
  5979  0F78  0CF3               	rrf	___ftpack@arg+1,f
  5980  0F79  0CF2               	rrf	___ftpack@arg,f
  5981  0F7A                     l6243:	
  5982  0F7A  30FE               	movlw	254
  5983  0F7B  0574               	andwf	___ftpack@arg+2,w
  5984  0F7C  1903               	btfsc	3,2
  5985  0F7D  2F89               	goto	l6247
  5986  0F7E  2F75               	goto	l6241
  5987  0F7F                     l6245:	
  5988  0F7F  0AF5               	incf	___ftpack@exp,f
  5989  0F80  0AF2               	incf	___ftpack@arg,f
  5990  0F81  1903               	skipnz
  5991  0F82  0AF3               	incf	___ftpack@arg+1,f
  5992  0F83  1903               	skipnz
  5993  0F84  0AF4               	incf	___ftpack@arg+2,f
  5994  0F85  1003               	clrc
  5995  0F86  0CF4               	rrf	___ftpack@arg+2,f
  5996  0F87  0CF3               	rrf	___ftpack@arg+1,f
  5997  0F88  0CF2               	rrf	___ftpack@arg,f
  5998  0F89                     l6247:	
  5999  0F89  30FF               	movlw	255
  6000  0F8A  0574               	andwf	___ftpack@arg+2,w
  6001  0F8B  1903               	btfsc	3,2
  6002  0F8C  2F93               	goto	l6251
  6003  0F8D  2F7F               	goto	l6245
  6004  0F8E                     l6249:	
  6005  0F8E  03F5               	decf	___ftpack@exp,f
  6006  0F8F  1003               	clrc
  6007  0F90  0DF2               	rlf	___ftpack@arg,f
  6008  0F91  0DF3               	rlf	___ftpack@arg+1,f
  6009  0F92  0DF4               	rlf	___ftpack@arg+2,f
  6010  0F93                     l6251:	
  6011  0F93  1FF3               	btfss	___ftpack@arg+1,7
  6012  0F94  2F8E               	goto	l6249
  6013  0F95  1C75               	btfss	___ftpack@exp,0
  6014  0F96  13F3               	bcf	___ftpack@arg+1,7
  6015  0F97  1003               	clrc
  6016  0F98  0CF5               	rrf	___ftpack@exp,f
  6017  0F99  0875               	movf	___ftpack@exp,w
  6018  0F9A  00F9               	movwf	??___ftpack+2
  6019  0F9B  01F8               	clrf	??___ftpack+1
  6020  0F9C  01F7               	clrf	??___ftpack
  6021  0F9D  0877               	movf	??___ftpack,w
  6022  0F9E  04F2               	iorwf	___ftpack@arg,f
  6023  0F9F  0878               	movf	??___ftpack+1,w
  6024  0FA0  04F3               	iorwf	___ftpack@arg+1,f
  6025  0FA1  0879               	movf	??___ftpack+2,w
  6026  0FA2  04F4               	iorwf	___ftpack@arg+2,f
  6027  0FA3  0876               	movf	___ftpack@sign,w
  6028  0FA4  1D03               	skipz
  6029  0FA5  17F4               	bsf	___ftpack@arg+2,7
  6030  0FA6  0008               	return
  6031  0FA7                     __end_of___ftpack:	
  6032  0FA7                     PL7:	
  6033  0FA7  0831               	movf	?___ftmul,w
  6034  0FA8  00C0               	movwf	?_scale
  6035  0FA9  0832               	movf	?___ftmul+1,w
  6036  0FAA  00C1               	movwf	?_scale+1
  6037  0FAB  0833               	movf	?___ftmul+2,w
  6038  0FAC  00C2               	movwf	?_scale+2
  6039  0FAD  0008               	return
  6040  0FAE                     PL8:	
  6041  0FAE  0831               	movf	?___ftmul,w
  6042  0FAF  00C7               	movwf	_scale$4104
  6043  0FB0  0832               	movf	?___ftmul+1,w
  6044  0FB1  00C8               	movwf	_scale$4104+1
  6045  0FB2  0833               	movf	?___ftmul+2,w
  6046  0FB3  00C9               	movwf	_scale$4104+2
  6047  0FB4  300A               	movlw	10
  6048  0FB5  00F2               	movwf	?___awmod
  6049  0FB6  01F3               	clrf	?___awmod+1
  6050  0FB7  084A               	movf	scale@scl,w
  6051  0FB8  00F4               	movwf	?___awmod+2
  6052  0FB9  01F5               	clrf	?___awmod+3
  6053  0FBA  0008               	return
  6054  0FBB                     PL10:	
  6055  0FBB  0872               	movf	?___awmod,w
  6056  0FBC  00C3               	movwf	??_scale
  6057  0FBD  0873               	movf	?___awmod+1,w
  6058  0FBE  00C4               	movwf	??_scale+1
  6059  0FBF  0843               	movf	??_scale,w
  6060  0FC0  0743               	addwf	??_scale,w
  6061  0FC1  0743               	addwf	??_scale,w
  6062  0FC2  0008               	return
  6063  0FC3                     PL11:	
  6064  0FC3  0878               	movf	?___awdiv,w
  6065  0FC4  00C5               	movwf	??_scale+2
  6066  0FC5  0879               	movf	?___awdiv+1,w
  6067  0FC6  00C6               	movwf	??_scale+3
  6068  0FC7  0845               	movf	??_scale+2,w
  6069  0FC8  0745               	addwf	??_scale+2,w
  6070  0FC9  0745               	addwf	??_scale+2,w
  6071  0FCA  0008               	return
  6072  0FCB                     PL15:	
  6073  0FCB  00F8               	movwf	?___awdiv
  6074  0FCC  01F9               	clrf	?___awdiv+1
  6075  0FCD  084A               	movf	scale@scl,w
  6076  0FCE  00F4               	movwf	?___awmod+2
  6077  0FCF  01F5               	clrf	?___awmod+3
  6078  0FD0  1BF4               	btfsc	?___awmod+2,7
  6079  0FD1  03F5               	decf	?___awmod+3,f
  6080  0FD2  3064               	movlw	100
  6081  0FD3  00F2               	movwf	?___awmod
  6082  0FD4  01F3               	clrf	?___awmod+1
  6083  0FD5  0008               	return
  6084  0FD6                     PL18:	
  6085  0FD6  07BB               	addwf	___ftmul@f3_as_product,f
  6086  0FD7  0835               	movf	___ftmul@f2+1,w
  6087  0FD8  1103               	clrz
  6088  0FD9  1803               	skipnc
  6089  0FDA  0A35               	incf	___ftmul@f2+1,w
  6090  0FDB  1D03               	btfss	3,2
  6091  0FDC  07BC               	addwf	___ftmul@f3_as_product+1,f
  6092  0FDD  0836               	movf	___ftmul@f2+2,w
  6093  0FDE  1103               	clrz
  6094  0FDF  0008               	return
  6095  0FE0                     PL23:	
  6096  0FE0  00B3               	movwf	?___ftmul+2
  6097  0FE1  3064               	movlw	100
  6098  0FE2  00F8               	movwf	?___awdiv
  6099  0FE3  01F9               	clrf	?___awdiv+1
  6100  0FE4  084A               	movf	scale@scl,w
  6101  0FE5  00FA               	movwf	?___awdiv+2
  6102  0FE6  01FB               	clrf	?___awdiv+3
  6103  0FE7  0008               	return
  6104  0FE8                     PL24:	
  6105  0FE8  00B3               	movwf	?___ftmul+2
  6106  0FE9  0847               	movf	_scale$4104,w
  6107  0FEA  00B4               	movwf	?___ftmul+3
  6108  0FEB  0848               	movf	_scale$4104+1,w
  6109  0FEC  00B5               	movwf	?___ftmul+4
  6110  0FED  0849               	movf	_scale$4104+2,w
  6111  0FEE  00B6               	movwf	?___ftmul+5
  6112  0FEF  0008               	return
  6113  0FF0                     PL25:	
  6114  0FF0  00B3               	movwf	?___ftmul+2
  6115  0FF1  300A               	movlw	10
  6116  0FF2  00F8               	movwf	?___awdiv
  6117  0FF3  01F9               	clrf	?___awdiv+1
  6118  0FF4  084A               	movf	scale@scl,w
  6119  0FF5  00FA               	movwf	?___awdiv+2
  6120  0FF6  01FB               	clrf	?___awdiv+3
  6121  0FF7  0008               	return
  6122  0FF8                     PL26:	
  6123  0FF8  0878               	movf	?___awdiv,w
  6124  0FF9  00C3               	movwf	??_scale
  6125  0FFA  0879               	movf	?___awdiv+1,w
  6126  0FFB  00C4               	movwf	??_scale+1
  6127  0FFC  0843               	movf	??_scale,w
  6128  0FFD  0743               	addwf	??_scale,w
  6129  0FFE  0743               	addwf	??_scale,w
  6130  0FFF  0008               	return
  6131                           
  6132                           	psect	text530
  6133  173E                     __ptext530:	
  6134 ;; =============== function ___ftdiv ends ============
  6135                           
  6136                           
  6137 ;; *************** function ___ftadd *****************
  6138 ;; Defined at:
  6139 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  6140 ;; Parameters:    Size  Location     Type
  6141 ;;  f1              3   32[BANK0 ] float 
  6142 ;;  f2              3   35[BANK0 ] float 
  6143 ;; Auto vars:     Size  Location     Type
  6144 ;;  exp1            1   43[BANK0 ] unsigned char 
  6145 ;;  exp2            1   42[BANK0 ] unsigned char 
  6146 ;;  sign            1   41[BANK0 ] unsigned char 
  6147 ;; Return value:  Size  Location     Type
  6148 ;;                  3   32[BANK0 ] float 
  6149 ;; Registers used:
  6150 ;;		wreg, status,2, status,0, pclath, cstack
  6151 ;; Tracked objects:
  6152 ;;		On entry : 60/0
  6153 ;;		On exit  : 60/0
  6154 ;;		Unchanged: FFF9F/0
  6155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6156 ;;      Params:         0       6       0       0       0
  6157 ;;      Locals:         0       3       0       0       0
  6158 ;;      Temps:          0       3       0       0       0
  6159 ;;      Totals:         0      12       0       0       0
  6160 ;;Total ram usage:       12 bytes
  6161 ;; Hardware stack levels used:    1
  6162 ;; Hardware stack levels required when called:    2
  6163 ;; This function calls:
  6164 ;;		___ftpack
  6165 ;; This function is called by:
  6166 ;;		_printf
  6167 ;;		___ftsub
  6168 ;; This function uses a non-reentrant model
  6169 ;;
  6170  173E                     ___ftadd:	
  6171                           
  6172                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6173  173E  0840               	movf	___ftadd@f1,w
  6174  173F  00C6               	movwf	??___ftadd
  6175  1740  0841               	movf	___ftadd@f1+1,w
  6176  1741  00C7               	movwf	??___ftadd+1
  6177  1742  0842               	movf	___ftadd@f1+2,w
  6178  1743  00C8               	movwf	??___ftadd+2
  6179  1744  1003               	clrc
  6180  1745  0D47               	rlf	??___ftadd+1,w
  6181  1746  0D48               	rlf	??___ftadd+2,w
  6182  1747  00CB               	movwf	___ftadd@exp1
  6183  1748  0843               	movf	___ftadd@f2,w
  6184  1749  00C6               	movwf	??___ftadd
  6185  174A  0844               	movf	___ftadd@f2+1,w
  6186  174B  00C7               	movwf	??___ftadd+1
  6187  174C  0845               	movf	___ftadd@f2+2,w
  6188  174D  00C8               	movwf	??___ftadd+2
  6189  174E  1003               	clrc
  6190  174F  0D47               	rlf	??___ftadd+1,w
  6191  1750  0D48               	rlf	??___ftadd+2,w
  6192  1751  00CA               	movwf	___ftadd@exp2
  6193  1752  084B               	movf	___ftadd@exp1,w
  6194  1753  1903               	btfsc	3,2
  6195  1754  2F61               	goto	l6511
  6196  1755  084A               	movf	___ftadd@exp2,w
  6197  1756  024B               	subwf	___ftadd@exp1,w
  6198  1757  084A               	movf	___ftadd@exp2,w
  6199  1758  1803               	skipnc
  6200  1759  2F69               	goto	L7
  6201  175A  00C6               	movwf	??___ftadd
  6202  175B  084B               	movf	___ftadd@exp1,w
  6203  175C  02C6               	subwf	??___ftadd,f
  6204  175D  3019               	movlw	25
  6205  175E  0246               	subwf	??___ftadd,w
  6206  175F  1C03               	skipc
  6207  1760  2F68               	goto	l6515
  6208  1761                     l6511:	
  6209  1761  0843               	movf	___ftadd@f2,w
  6210  1762  00C0               	movwf	?___ftadd
  6211  1763  0844               	movf	___ftadd@f2+1,w
  6212  1764  00C1               	movwf	?___ftadd+1
  6213  1765  0845               	movf	___ftadd@f2+2,w
  6214  1766  00C2               	movwf	?___ftadd+2
  6215  1767  0008               	return
  6216  1768                     l6515:	
  6217  1768  084A               	movf	___ftadd@exp2,w
  6218  1769                     L7:	
  6219  1769  1903               	btfsc	3,2
  6220  176A  0008               	return
  6221  176B  084B               	movf	___ftadd@exp1,w
  6222  176C  024A               	subwf	___ftadd@exp2,w
  6223  176D  1803               	skipnc
  6224  176E  2F77               	goto	l6521
  6225  176F  084B               	movf	___ftadd@exp1,w
  6226  1770  00C6               	movwf	??___ftadd
  6227  1771  084A               	movf	___ftadd@exp2,w
  6228  1772  02C6               	subwf	??___ftadd,f
  6229  1773  3019               	movlw	25
  6230  1774  0246               	subwf	??___ftadd,w
  6231  1775  1803               	btfsc	3,0
  6232  1776  0008               	return
  6233  1777                     l6521:	
  6234  1777  3006               	movlw	6
  6235  1778  00C9               	movwf	___ftadd@sign
  6236  1779  1BC2               	btfsc	___ftadd@f1+2,7
  6237  177A  17C9               	bsf	___ftadd@sign,7
  6238  177B  1BC5               	btfsc	___ftadd@f2+2,7
  6239  177C  1749               	bsf	___ftadd@sign,6
  6240  177D  17C1               	bsf	___ftadd@f1+1,7
  6241  177E  01C2               	clrf	___ftadd@f1+2
  6242  177F  17C4               	bsf	___ftadd@f2+1,7
  6243  1780  01C5               	clrf	___ftadd@f2+2
  6244  1781  084A               	movf	___ftadd@exp2,w
  6245  1782  024B               	subwf	___ftadd@exp1,w
  6246  1783  1803               	skipnc
  6247  1784  2F9E               	goto	l6543
  6248  1785                     l6533:	
  6249  1785  1003               	clrc
  6250  1786  0DC3               	rlf	___ftadd@f2,f
  6251  1787  0DC4               	rlf	___ftadd@f2+1,f
  6252  1788  0DC5               	rlf	___ftadd@f2+2,f
  6253  1789  03CA               	decf	___ftadd@exp2,f
  6254  178A  084A               	movf	___ftadd@exp2,w
  6255  178B  064B               	xorwf	___ftadd@exp1,w
  6256  178C  1903               	skipnz
  6257  178D  2F99               	goto	l6541
  6258  178E  03C9               	decf	___ftadd@sign,f
  6259  178F  0849               	movf	___ftadd@sign,w
  6260  1790  3907               	andlw	7
  6261  1791  1903               	btfsc	3,2
  6262  1792  2F99               	goto	l6541
  6263  1793  2F85               	goto	l6533
  6264  1794                     l6539:	
  6265  1794  1003               	clrc
  6266  1795  0CC2               	rrf	___ftadd@f1+2,f
  6267  1796  0CC1               	rrf	___ftadd@f1+1,f
  6268  1797  0CC0               	rrf	___ftadd@f1,f
  6269  1798  0ACB               	incf	___ftadd@exp1,f
  6270  1799                     l6541:	
  6271  1799  084B               	movf	___ftadd@exp1,w
  6272  179A  064A               	xorwf	___ftadd@exp2,w
  6273  179B  1903               	btfsc	3,2
  6274  179C  2FBA               	goto	l3330
  6275  179D  2F94               	goto	l6539
  6276  179E                     l6543:	
  6277  179E  084B               	movf	___ftadd@exp1,w
  6278  179F  024A               	subwf	___ftadd@exp2,w
  6279  17A0  1803               	skipnc
  6280  17A1  2FBA               	goto	l3330
  6281  17A2                     l6545:	
  6282  17A2  1003               	clrc
  6283  17A3  0DC0               	rlf	___ftadd@f1,f
  6284  17A4  0DC1               	rlf	___ftadd@f1+1,f
  6285  17A5  0DC2               	rlf	___ftadd@f1+2,f
  6286  17A6  03CB               	decf	___ftadd@exp1,f
  6287  17A7  084A               	movf	___ftadd@exp2,w
  6288  17A8  064B               	xorwf	___ftadd@exp1,w
  6289  17A9  1903               	skipnz
  6290  17AA  2FB6               	goto	l6553
  6291  17AB  03C9               	decf	___ftadd@sign,f
  6292  17AC  0849               	movf	___ftadd@sign,w
  6293  17AD  3907               	andlw	7
  6294  17AE  1903               	btfsc	3,2
  6295  17AF  2FB6               	goto	l6553
  6296  17B0  2FA2               	goto	l6545
  6297  17B1                     l6551:	
  6298  17B1  1003               	clrc
  6299  17B2  0CC5               	rrf	___ftadd@f2+2,f
  6300  17B3  0CC4               	rrf	___ftadd@f2+1,f
  6301  17B4  0CC3               	rrf	___ftadd@f2,f
  6302  17B5  0ACA               	incf	___ftadd@exp2,f
  6303  17B6                     l6553:	
  6304  17B6  084B               	movf	___ftadd@exp1,w
  6305  17B7  064A               	xorwf	___ftadd@exp2,w
  6306  17B8  1D03               	skipz
  6307  17B9  2FB1               	goto	l6551
  6308  17BA                     l3330:	
  6309  17BA  1FC9               	btfss	___ftadd@sign,7
  6310  17BB  2FC5               	goto	l6559
  6311  17BC  30FF               	movlw	255
  6312  17BD  06C0               	xorwf	___ftadd@f1,f
  6313  17BE  06C1               	xorwf	___ftadd@f1+1,f
  6314  17BF  06C2               	xorwf	___ftadd@f1+2,f
  6315  17C0  0AC0               	incf	___ftadd@f1,f
  6316  17C1  1903               	skipnz
  6317  17C2  0AC1               	incf	___ftadd@f1+1,f
  6318  17C3  1903               	skipnz
  6319  17C4  0AC2               	incf	___ftadd@f1+2,f
  6320  17C5                     l6559:	
  6321  17C5  1F49               	btfss	___ftadd@sign,6
  6322  17C6  2FD0               	goto	l6565
  6323  17C7  30FF               	movlw	255
  6324  17C8  06C3               	xorwf	___ftadd@f2,f
  6325  17C9  06C4               	xorwf	___ftadd@f2+1,f
  6326  17CA  06C5               	xorwf	___ftadd@f2+2,f
  6327  17CB  0AC3               	incf	___ftadd@f2,f
  6328  17CC  1903               	skipnz
  6329  17CD  0AC4               	incf	___ftadd@f2+1,f
  6330  17CE  1903               	skipnz
  6331  17CF  0AC5               	incf	___ftadd@f2+2,f
  6332  17D0                     l6565:	
  6333  17D0  01C9               	clrf	___ftadd@sign
  6334  17D1  0840               	movf	___ftadd@f1,w
  6335  17D2  07C3               	addwf	___ftadd@f2,f
  6336  17D3  0841               	movf	___ftadd@f1+1,w
  6337  17D4  1103               	clrz
  6338  17D5  1803               	skipnc
  6339  17D6  0A41               	incf	___ftadd@f1+1,w
  6340  17D7  1D03               	btfss	3,2
  6341  17D8  07C4               	addwf	___ftadd@f2+1,f
  6342  17D9  0842               	movf	___ftadd@f1+2,w
  6343  17DA  1103               	clrz
  6344  17DB  1803               	skipnc
  6345  17DC  0A42               	incf	___ftadd@f1+2,w
  6346  17DD  1D03               	btfss	3,2
  6347  17DE  07C5               	addwf	___ftadd@f2+2,f
  6348  17DF  1FC5               	btfss	___ftadd@f2+2,7
  6349  17E0  2FEC               	goto	l6577
  6350  17E1  30FF               	movlw	255
  6351  17E2  06C3               	xorwf	___ftadd@f2,f
  6352  17E3  06C4               	xorwf	___ftadd@f2+1,f
  6353  17E4  06C5               	xorwf	___ftadd@f2+2,f
  6354  17E5  0AC3               	incf	___ftadd@f2,f
  6355  17E6  1903               	skipnz
  6356  17E7  0AC4               	incf	___ftadd@f2+1,f
  6357  17E8  1903               	skipnz
  6358  17E9  0AC5               	incf	___ftadd@f2+2,f
  6359  17EA  01C9               	clrf	___ftadd@sign
  6360  17EB  0AC9               	incf	___ftadd@sign,f
  6361  17EC                     l6577:	
  6362  17EC  0843               	movf	___ftadd@f2,w
  6363  17ED  00F2               	movwf	?___ftpack
  6364  17EE  0844               	movf	___ftadd@f2+1,w
  6365  17EF  00F3               	movwf	?___ftpack+1
  6366  17F0  0845               	movf	___ftadd@f2+2,w
  6367  17F1  00F4               	movwf	?___ftpack+2
  6368  17F2  084B               	movf	___ftadd@exp1,w
  6369  17F3  00F5               	movwf	?___ftpack+3
  6370  17F4  0849               	movf	___ftadd@sign,w
  6371  17F5  00F6               	movwf	?___ftpack+4
  6372  17F6  120A  158A  2769   	fcall	___ftpack
  6373  17F9  0872               	movf	?___ftpack,w
  6374  17FA  00C0               	movwf	?___ftadd
  6375  17FB  0873               	movf	?___ftpack+1,w
  6376  17FC  00C1               	movwf	?___ftadd+1
  6377  17FD  0874               	movf	?___ftpack+2,w
  6378  17FE  00C2               	movwf	?___ftadd+2
  6379  17FF  0008               	return
  6380  1800                     __end_of___ftadd:	
  6381                           
  6382                           	psect	text545
  6383  0881                     __ptext545:	
  6384 ;; =============== function ___bmul ends ============
  6385                           
  6386                           
  6387 ;; *************** function __div_to_l_ *****************
  6388 ;; Defined at:
  6389 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fldivl.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;  f1              3    2[COMMON] unsigned char 
  6392 ;;  f2              3    5[COMMON] unsigned char 
  6393 ;; Auto vars:     Size  Location     Type
  6394 ;;  quot            4    8[BANK0 ] unsigned long 
  6395 ;;  exp1            1   13[BANK0 ] unsigned char 
  6396 ;;  cntr            1   12[BANK0 ] unsigned char 
  6397 ;; Return value:  Size  Location     Type
  6398 ;;                  4    2[COMMON] unsigned long 
  6399 ;; Registers used:
  6400 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6401 ;; Tracked objects:
  6402 ;;		On entry : 0/0
  6403 ;;		On exit  : 60/0
  6404 ;;		Unchanged: FFF9F/0
  6405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6406 ;;      Params:         6       0       0       0       0
  6407 ;;      Locals:         0       6       0       0       0
  6408 ;;      Temps:          0       8       0       0       0
  6409 ;;      Totals:         6      14       0       0       0
  6410 ;;Total ram usage:       20 bytes
  6411 ;; Hardware stack levels used:    1
  6412 ;; Hardware stack levels required when called:    1
  6413 ;; This function calls:
  6414 ;;		Nothing
  6415 ;; This function is called by:
  6416 ;;		_printf
  6417 ;; This function uses a non-reentrant model
  6418 ;;
  6419  0881                     __div_to_l_:	
  6420                           
  6421                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  6422  0881  3072               	movlw	low __div_to_l_@f1
  6423  0882  0084               	movwf	4
  6424  0883  0800               	movf	0,w
  6425  0884  1283               	bcf	3,5	;RP0=0, select bank0
  6426  0885  1303               	bcf	3,6	;RP1=0, select bank0
  6427  0886  00A0               	movwf	??__div_to_l_
  6428  0887  0A84               	incf	4,f
  6429  0888  0800               	movf	0,w
  6430  0889  00A1               	movwf	??__div_to_l_+1
  6431  088A  0A84               	incf	4,f
  6432  088B  0800               	movf	0,w
  6433  088C  00A2               	movwf	??__div_to_l_+2
  6434  088D  0A84               	incf	4,f
  6435  088E  0800               	movf	0,w
  6436  088F  00A3               	movwf	??__div_to_l_+3
  6437  0890  1003               	clrc
  6438  0891  0D22               	rlf	??__div_to_l_+2,w
  6439  0892  0D23               	rlf	??__div_to_l_+3,w
  6440  0893  00AD               	movwf	__div_to_l_@exp1
  6441  0894  08AD               	movf	__div_to_l_@exp1,f
  6442  0895  1D03               	skipz
  6443  0896  289C               	goto	l6117
  6444  0897                     l6115:	
  6445  0897  01F2               	clrf	?__div_to_l_
  6446  0898  01F3               	clrf	?__div_to_l_+1
  6447  0899  01F4               	clrf	?__div_to_l_+2
  6448  089A  01F5               	clrf	?__div_to_l_+3
  6449  089B  0008               	return
  6450  089C                     l6117:	
  6451  089C  3075               	movlw	low __div_to_l_@f2
  6452  089D  213F  120A  158A   	fcall	PL3	;call to abstracted procedure
  6453  08A0  1003               	clrc
  6454  08A1  0D22               	rlf	??__div_to_l_+2,w
  6455  08A2  0D23               	rlf	??__div_to_l_+3,w
  6456  08A3  00AC               	movwf	__div_to_l_@cntr
  6457  08A4  08AC               	movf	__div_to_l_@cntr,f
  6458  08A5  1903               	btfsc	3,2
  6459  08A6  2897               	goto	l6115
  6460  08A7  3072               	movlw	low __div_to_l_@f1
  6461  08A8  0084               	movwf	4
  6462  08A9  3080               	movlw	128
  6463  08AA  0A84               	incf	4,f
  6464  08AB  0A84               	incf	4,f
  6465  08AC  0480               	iorwf	0,f
  6466  08AD  3072               	movlw	low __div_to_l_@f1
  6467  08AE  0A84               	incf	4,f
  6468  08AF  0084               	movwf	4
  6469  08B0  3075               	movlw	low __div_to_l_@f2
  6470  08B1  0A84               	incf	4,f
  6471  08B2  0A84               	incf	4,f
  6472  08B3  0A84               	incf	4,f
  6473  08B4  0180               	clrf	0
  6474  08B5  0084               	movwf	4
  6475  08B6  3080               	movlw	128
  6476  08B7  0A84               	incf	4,f
  6477  08B8  0A84               	incf	4,f
  6478  08B9  0480               	iorwf	0,f
  6479  08BA  3075               	movlw	low __div_to_l_@f2
  6480  08BB  0A84               	incf	4,f
  6481  08BC  0084               	movwf	4
  6482  08BD  307F               	movlw	127
  6483  08BE  0A84               	incf	4,f
  6484  08BF  0A84               	incf	4,f
  6485  08C0  0A84               	incf	4,f
  6486  08C1  0180               	clrf	0
  6487  08C2  01A8               	clrf	__div_to_l_@quot
  6488  08C3  01A9               	clrf	__div_to_l_@quot+1
  6489  08C4  01AA               	clrf	__div_to_l_@quot+2
  6490  08C5  01AB               	clrf	__div_to_l_@quot+3
  6491  08C6  02AD               	subwf	__div_to_l_@exp1,f
  6492  08C7  30A0               	movlw	160
  6493  08C8  072C               	addwf	__div_to_l_@cntr,w
  6494  08C9  00A0               	movwf	??__div_to_l_
  6495  08CA  02AD               	subwf	__div_to_l_@exp1,f
  6496  08CB  3020               	movlw	32
  6497  08CC  00AC               	movwf	__div_to_l_@cntr
  6498  08CD                     l6131:	
  6499  08CD  3075               	movlw	low __div_to_l_@f2
  6500  08CE  1003               	clrc
  6501  08CF  0DA8               	rlf	__div_to_l_@quot,f
  6502  08D0  0DA9               	rlf	__div_to_l_@quot+1,f
  6503  08D1  0DAA               	rlf	__div_to_l_@quot+2,f
  6504  08D2  0DAB               	rlf	__div_to_l_@quot+3,f
  6505  08D3  213F  120A  158A   	fcall	PL3	;call to abstracted procedure
  6506  08D6  3072               	movlw	low __div_to_l_@f1
  6507  08D7  0084               	movwf	4
  6508  08D8  0800               	movf	0,w
  6509  08D9  00A4               	movwf	??__div_to_l_+4
  6510  08DA  0A84               	incf	4,f
  6511  08DB  0800               	movf	0,w
  6512  08DC  00A5               	movwf	??__div_to_l_+5
  6513  08DD  0A84               	incf	4,f
  6514  08DE  0800               	movf	0,w
  6515  08DF  00A6               	movwf	??__div_to_l_+6
  6516  08E0  0A84               	incf	4,f
  6517  08E1  0800               	movf	0,w
  6518  08E2  00A7               	movwf	??__div_to_l_+7
  6519  08E3  0823               	movf	??__div_to_l_+3,w
  6520  08E4  0227               	subwf	??__div_to_l_+7,w
  6521  08E5  1D03               	skipz
  6522  08E6  28F1               	goto	u2105
  6523  08E7  0822               	movf	??__div_to_l_+2,w
  6524  08E8  0226               	subwf	??__div_to_l_+6,w
  6525  08E9  1D03               	skipz
  6526  08EA  28F1               	goto	u2105
  6527  08EB  0821               	movf	??__div_to_l_+1,w
  6528  08EC  0225               	subwf	??__div_to_l_+5,w
  6529  08ED  1D03               	skipz
  6530  08EE  28F1               	goto	u2105
  6531  08EF  0820               	movf	??__div_to_l_,w
  6532  08F0  0224               	subwf	??__div_to_l_+4,w
  6533  08F1                     u2105:	
  6534  08F1  1C03               	skipc
  6535  08F2  290D               	goto	l3559
  6536  08F3  3075               	movlw	low __div_to_l_@f2
  6537  08F4  213F  120A  158A   	fcall	PL3	;call to abstracted procedure
  6538  08F7  3072               	movlw	low __div_to_l_@f1
  6539  08F8  0084               	movwf	4
  6540  08F9  0820               	movf	??__div_to_l_,w
  6541  08FA  0280               	subwf	0,f
  6542  08FB  0A84               	incf	4,f
  6543  08FC  0821               	movf	??__div_to_l_+1,w
  6544  08FD  1C03               	skipc
  6545  08FE  0F21               	incfsz	??__div_to_l_+1,w
  6546  08FF  0280               	subwf	0,f
  6547  0900  0A84               	incf	4,f
  6548  0901  0822               	movf	??__div_to_l_+2,w
  6549  0902  1C03               	skipc
  6550  0903  0F22               	incfsz	??__div_to_l_+2,w
  6551  0904  0280               	subwf	0,f
  6552  0905  0A84               	incf	4,f
  6553  0906  0823               	movf	??__div_to_l_+3,w
  6554  0907  1C03               	skipc
  6555  0908  0A23               	incf	??__div_to_l_+3,w
  6556  0909  0280               	subwf	0,f
  6557  090A  3003               	movlw	3
  6558  090B  0284               	subwf	4,f
  6559  090C  1428               	bsf	__div_to_l_@quot,0
  6560  090D                     l3559:	
  6561  090D  3072               	movlw	low __div_to_l_@f1
  6562  090E  0084               	movwf	4
  6563  090F  1003               	clrc
  6564  0910  0D80               	rlf	0,f
  6565  0911  0A84               	incf	4,f
  6566  0912  0D80               	rlf	0,f
  6567  0913  0A84               	incf	4,f
  6568  0914  0D80               	rlf	0,f
  6569  0915  0A84               	incf	4,f
  6570  0916  0D80               	rlf	0,f
  6571  0917  0BAC               	decfsz	__div_to_l_@cntr,f
  6572  0918  28CD               	goto	l6131
  6573  0919  1FAD               	btfss	__div_to_l_@exp1,7
  6574  091A  2928               	goto	l6149
  6575  091B  082D               	movf	__div_to_l_@exp1,w
  6576  091C  3A80               	xorlw	128
  6577  091D  3E9F               	addlw	159
  6578  091E  1C03               	btfss	3,0
  6579  091F  2897               	goto	l6115
  6580  0920                     l6145:	
  6581  0920  1003               	clrc
  6582  0921  0CAB               	rrf	__div_to_l_@quot+3,f
  6583  0922  0CAA               	rrf	__div_to_l_@quot+2,f
  6584  0923  0CA9               	rrf	__div_to_l_@quot+1,f
  6585  0924  0CA8               	rrf	__div_to_l_@quot,f
  6586  0925  0FAD               	incfsz	__div_to_l_@exp1,f
  6587  0926  2920               	goto	l6145
  6588  0927  2936               	goto	l6155
  6589  0928                     l6149:	
  6590  0928  3020               	movlw	32
  6591  0929  022D               	subwf	__div_to_l_@exp1,w
  6592  092A  1803               	btfsc	3,0
  6593  092B  2897               	goto	l6115
  6594  092C                     l3567:	
  6595  092C  08AD               	movf	__div_to_l_@exp1,f
  6596  092D  1903               	btfsc	3,2
  6597  092E  2936               	goto	l6155
  6598  092F  1003               	clrc
  6599  0930  0DA8               	rlf	__div_to_l_@quot,f
  6600  0931  0DA9               	rlf	__div_to_l_@quot+1,f
  6601  0932  0DAA               	rlf	__div_to_l_@quot+2,f
  6602  0933  0DAB               	rlf	__div_to_l_@quot+3,f
  6603  0934  03AD               	decf	__div_to_l_@exp1,f
  6604  0935  292C               	goto	l3567
  6605  0936                     l6155:	
  6606  0936  082B               	movf	__div_to_l_@quot+3,w
  6607  0937  00F5               	movwf	?__div_to_l_+3
  6608  0938  082A               	movf	__div_to_l_@quot+2,w
  6609  0939  00F4               	movwf	?__div_to_l_+2
  6610  093A  0829               	movf	__div_to_l_@quot+1,w
  6611  093B  00F3               	movwf	?__div_to_l_+1
  6612  093C  0828               	movf	__div_to_l_@quot,w
  6613  093D  00F2               	movwf	?__div_to_l_
  6614  093E  0008               	return
  6615  093F                     __end_of__div_to_l_:	
  6616  093F                     PL3:	
  6617  093F  0084               	movwf	4
  6618  0940  0800               	movf	0,w
  6619  0941  00A0               	movwf	??__div_to_l_
  6620  0942  0A84               	incf	4,f
  6621  0943  0800               	movf	0,w
  6622  0944  00A1               	movwf	??__div_to_l_+1
  6623  0945  0A84               	incf	4,f
  6624  0946  0800               	movf	0,w
  6625  0947  00A2               	movwf	??__div_to_l_+2
  6626  0948  0A84               	incf	4,f
  6627  0949  0800               	movf	0,w
  6628  094A  00A3               	movwf	??__div_to_l_+3
  6629  094B  0008               	return
  6630                           
  6631                           	psect	text549
  6632  078F                     __ptext549:	
  6633 ;; =============== function _isprint ends ============
  6634                           
  6635                           
  6636 ;; *************** function _ngat *****************
  6637 ;; Defined at:
  6638 ;;		line 68 in file "C:\Online Class\HK6\Practice_Micro\CCP\ccp.c"
  6639 ;; Parameters:    Size  Location     Type
  6640 ;;		None
  6641 ;; Auto vars:     Size  Location     Type
  6642 ;;		None
  6643 ;; Return value:  Size  Location     Type
  6644 ;;		None               void
  6645 ;; Registers used:
  6646 ;;		wreg
  6647 ;; Tracked objects:
  6648 ;;		On entry : 0/0
  6649 ;;		On exit  : 60/0
  6650 ;;		Unchanged: FFF9F/0
  6651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6652 ;;      Params:         0       0       0       0       0
  6653 ;;      Locals:         0       0       0       0       0
  6654 ;;      Temps:          2       0       0       0       0
  6655 ;;      Totals:         2       0       0       0       0
  6656 ;;Total ram usage:        2 bytes
  6657 ;; Hardware stack levels used:    1
  6658 ;; This function calls:
  6659 ;;		Nothing
  6660 ;; This function is called by:
  6661 ;;		Interrupt level 1
  6662 ;; This function uses a non-reentrant model
  6663 ;;
  6664  078F                     _ngat:	
  6665                           
  6666                           ;ccp.c: 69: if(CCP1IF&&CCP1IE)
  6667  078F  1283               	bcf	3,5	;RP0=0, select bank0
  6668  0790  1303               	bcf	3,6	;RP1=0, select bank0
  6669  0791  1D0C               	btfss	12,2
  6670  0792  2FB1               	goto	i1l6051
  6671  0793  1683               	bsf	3,5	;RP0=1, select bank1
  6672  0794  1D0C               	btfss	12,2
  6673  0795  2FB1               	goto	i1l6051
  6674                           
  6675                           ;ccp.c: 70: {
  6676                           ;ccp.c: 71: dem = CCPR1 - ccp_old;
  6677  0796  1283               	bcf	3,5	;RP0=0, select bank0
  6678  0797  0815               	movf	21,w	;volatile
  6679  0798  00E6               	movwf	_dem
  6680  0799  0816               	movf	22,w	;volatile
  6681  079A  00E7               	movwf	_dem+1
  6682  079B  01E8               	clrf	_dem+2
  6683  079C  01E9               	clrf	_dem+3
  6684  079D  085F               	movf	_ccp_old,w
  6685  079E  02E6               	subwf	_dem,f
  6686  079F  0860               	movf	_ccp_old+1,w
  6687  07A0  1C03               	skipc
  6688  07A1  0F60               	incfsz	_ccp_old+1,w
  6689  07A2  02E7               	subwf	_dem+1,f
  6690  07A3  0861               	movf	_ccp_old+2,w
  6691  07A4  1C03               	skipc
  6692  07A5  0F61               	incfsz	_ccp_old+2,w
  6693  07A6  02E8               	subwf	_dem+2,f
  6694  07A7  0862               	movf	_ccp_old+3,w
  6695  07A8  1C03               	skipc
  6696  07A9  0F62               	incfsz	_ccp_old+3,w
  6697  07AA  02E9               	subwf	_dem+3,f
  6698                           
  6699                           ;ccp.c: 72: ccp_old = CCPR1;
  6700  07AB  0815               	movf	21,w	;volatile
  6701  07AC  00DF               	movwf	_ccp_old
  6702  07AD  0816               	movf	22,w	;volatile
  6703  07AE  00E0               	movwf	_ccp_old+1
  6704  07AF  01E1               	clrf	_ccp_old+2
  6705  07B0  01E2               	clrf	_ccp_old+3
  6706  07B1                     i1l6051:	
  6707                           
  6708                           ;ccp.c: 74: }
  6709                           ;ccp.c: 75: CCP1IF = 0;
  6710  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  6711  07B2  110C               	bcf	12,2
  6712  07B3  0871               	movf	??_ngat+1,w
  6713  07B4  008A               	movwf	10
  6714  07B5  0E70               	swapf	??_ngat^(0+-128),w
  6715  07B6  0083               	movwf	3
  6716  07B7  0EFE               	swapf	126,f
  6717  07B8  0E7E               	swapf	126,w
  6718  07B9  0009               	retfie
  6719  07BA                     __end_of_ngat:	
  6720                           
  6721                           	psect	intentry
  6722  0004                     __pintentry:	
  6723                           ; Regs used in _ngat: [wreg]
  6724                           
  6725  0004                     interrupt_function:	
  6726  007E                     saved_w	set	btemp
  6727  0004  00FE               	movwf	btemp
  6728  0005  0E03               	swapf	3,w
  6729  0006  00F0               	movwf	??_ngat
  6730  0007  080A               	movf	10,w
  6731  0008  00F1               	movwf	??_ngat+1
  6732  0009  120A  118A  2F8F   	ljmp	_ngat
  6733                           
  6734                           	psect	text550
  6735  0000                     __ptext550:	
  6736 ;; =============== function _ngat ends ============
  6737                           
  6738  007E                     btemp	set	126	;btemp
  6739  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu May 05 07:29:52 2022

                    pc 0002         ___bmul@product 0020           ___awdiv@sign 0021                     fsr 0004  
  ___wmul@multiplicand 0074           ___ftadd@exp1 004B           ___ftadd@exp2 004A          ?_lcd_put_byte 0072  
         ___ftadd@sign 0049                    _GIE 005F                    _RD1 0041                    _RD2 0042  
                  _RD3 0043                    _RD4 0044                    _RD5 0045                    _RD6 0046  
                  _RD7 0047                    _dem 0066                    _fre 0063                    fsr0 0004  
                  indf 0000           ___awmod@sign 0077           ___ftdiv@cntr 002D           ___ftdiv@sign 0032  
                 l1056 0000                   l1090 0000                   l1067 0000                   l1059 0000  
                 l2143 0000                   l2137 0828                   l3302 0000                   l2238 0349  
                 l3330 17BA                   l2266 0508                   l3251 0000                   l3308 0000  
                 l2198 0093                   l3256 0000                   l3272 0000                   l3352 0000  
                 l3433 0000                   l3266 0000                   l3419 0000                   l3524 06A7  
                 l6101 0000                   l3517 0000                   l3429 0000                   l3509 0000  
                 l6103 06A3                   l3359 0C91                   l3560 0000                   l3448 0000  
                 l6041 0C63                   l6033 0000                   l6113 0000                   l6201 0000  
                 l7001 0000                   l3386 05D8                   l6035 0000                   l6131 08CD  
                 l6123 0000                   l6115 0897                   l3299 0A5D                   l6211 0A6A  
                 l7011 03D6                   l7003 036B                   l6061 0583                   l6053 0000  
                 l6109 06B1                   l6133 0000                   l6125 0000                   l6117 089C  
                 l6205 0000                   l6221 0000                   l6301 0000                   l7013 03E4  
                 l7101 0000                   l6055 0000                   l3567 092C                   l3559 090D  
                 l6127 0000                   l6223 0000                   l6215 0000                   l6311 0000  
                 l3487 0000                   l7023 0402                   l7015 0000                   l7111 0000  
                 l7103 0000                   l6081 0000                   l6073 0000                   l6065 0000  
                 l6145 0920                   l6137 0000                   l6129 0000                   l6161 0F5D  
                 l6209 0000                   l6217 0000                   l6241 0F75                   l6233 0000  
                 l6313 0E7D                   l6305 0000                   l6401 060E                   l7041 044C  
                 l7017 0000                   l7009 0000                   l7121 0000                   l7113 0000  
                 l7105 0000                   l6083 0672                   l6075 0000                   l6067 0650  
                 l6155 0936                   l6147 0000                   l6139 0000                   l6227 0A84  
                 l6219 0A70                   l6251 0F93                   l6243 0F7A                   l6235 0000  
                 l6323 0E8B                   l6315 0000                   l6307 0E74                   l6411 0000  
                 l6403 0000                   l7051 0471                   l7035 0000                   l7123 0000  
                 l7115 0000                   l7107 0000                   l6093 0000                   l6085 0000  
                 l6077 0000                   l6069 0655                   l6149 0928                   l6181 058F  
                 l6229 0000                   l6245 0F7F                   l6237 0F71                   l6261 0000  
                 l6333 0000                   l6325 0000                   l6413 0639                   l7045 0464  
                 l7037 0438                   l7029 0404                   l7125 0000                   l7117 0000  
                 l7109 0000                   l6079 0000                   l6167 0000                   l6159 0000  
                 l6183 0000                   l6175 0000                   l6191 0000                   l6255 0000  
                 l6247 0F89                   l6271 0000                   l6263 05A8                   l6335 0EA2  
                 l6351 051D                   l6343 0000                   l6407 0000                   l6423 0000  
                 l6511 1761                   l6503 0000                   l7071 04BE                   l7063 04AA  
                 l7127 0000                   l7119 0000                   l6089 0000                   l6169 0000  
                 l6185 0000                   l6177 0587                   l6193 0000                   l6257 0000  
                 l6249 0F8E                   l6281 05CC                   l6273 0000                   l6265 05AD  
                 l6337 0000                   l6329 0000                   l6425 0EB9                   l6417 0000  
                 l6521 1777                   l6505 0000                   l6601 0000                   l7065 04AD  
                 l7057 048B                   l7081 0000                   l6099 069B                   l6195 0000  
                 l6259 0000                   l6291 05E2                   l6283 0000                   l6275 0000  
                 l6267 0000                   l6339 0EAA                   l6363 0000                   l6371 0000  
                 l6443 0000                   l6419 0000                   l6531 0000                   l6523 0000  
                 l6515 1768                   l6507 0000                   l6611 0CA4                   l6603 0000  
                 l7067 04B1                   l7059 048E                   l7091 0000                   l7083 0000  
                 l6197 0A57                   l6293 0000                   l6285 05D4                   l6269 0000  
                 l6357 0000                   l6381 0000                   l6437 0ECC                   l6445 0EDF  
                 l6429 0EC0                   l6461 0000                   l6453 0000                   l6541 1799  
                 l6533 1785                   l6517 0000                   l6621 0000                   l6605 0000  
                 l6701 0000                   l7077 04C6                   l7069 0000                   l7093 0000  
                 l7085 0000                   l6295 05F0                   l6359 0542                   l6383 0000  
                 l6375 055A                   l6391 0000                   l6447 0000                   l6471 0BDD  
                 l6463 0000                   l6455 0000                   l6551 17B1                   l6535 0000  
                 l6543 179E                   l6615 0000                   l6607 0000                   l6631 0EFD  
                 l6711 0B69                   l6703 0B51                   l7079 0013                   l7095 0000  
                 l7087 0000                   l6393 0000                   l6449 0EE7                   l6481 0C0B  
                 l6473 0000                   l6465 0000                   l6457 0000                   l6553 17B6  
                 l6545 17A2                   l6529 0000                   l6609 0000                   l6641 0000  
                 l6625 0000                   l7097 0000                   l7089 0000                   l6299 0000  
                 l6379 0569                   l6483 0C18                   l6475 0000                   l6467 0BC5  
                 l6491 0000                   l6563 0000                   l6547 0000                   l6539 1794  
                 l6619 0000                   l6651 0000                   l6643 0000                   l6723 0B8D  
                 l6715 0B75                   l6707 0B5D                   l6731 0000                   l6803 0000  
                 l6811 0AB8                   l7099 0000                   l6485 0000                   l6477 0000  
                 l6469 0BD2                   l6493 0000                   l6573 0000                   l6565 17D0  
                 l6557 0000                   l6581 0000                   l6661 0000                   l6653 0000  
                 l6645 0000                   l6637 0F0E                   l6733 0AA5                   l6741 0000  
                 l6805 0000                   l6821 0AD5                   l6813 0ABE                   l6901 0000  
                 l6487 0000                   l6479 0C00                   l6495 0000                   l6575 0000  
                 l6567 0000                   l6559 17C5                   l6671 0F3F                   l6663 0000  
                 l6655 0F1F                   l6647 0000                   l6639 0000                   l6727 0B99  
                 l6719 0B81                   l6735 0AA6                   l6751 09D7                   l6815 0AC5  
                 l6911 0000                   l6903 0000                   l6497 0000                   l6489 0000  
                 l6577 17EC                   l6569 0000                   l6593 0000                   l6673 0000  
                 l6665 0000                   l6649 0000                   l6681 0000                   l6737 0000  
                 l6729 0000                   l6745 0000                   l6817 0AC9                   l6825 0ADC  
                 l6809 0000                   l6841 003A                   l6499 0000                   l6595 0000  
                 l6587 0C80                   l6675 0000                   l6667 0F35                   l6659 0F29  
                 l6691 0000                   l6739 0AAF                   l6755 0000                   l6763 0000  
                 l6827 0000                   l6931 01DD                   l6923 01B2                   l6915 016E  
                 l6907 0135                   l6851 0000                   l6843 0000                   l6835 0028  
                 l6597 0000                   l6677 0000                   l6685 06C4                   l6693 0000  
                 l6781 0D8C                   l6941 0000                   l6909 0000                   l6853 0000  
                 l6861 008F                   l6845 0000                   l6837 0000                   l6829 0000  
                 l6599 0000                   l6687 06CF                   l6695 0000                   l6759 0A2B  
                 l6775 0D47                   l6767 0000                   l6951 025F                   l6943 0000  
                 l6935 01EE                   l6919 017E                   l6871 00AB                   l6863 0000  
                 l6847 005C                   l6697 0000                   l6793 0E0D                   l6785 0DA3  
                 l6945 0000                   l6881 0000                   l6865 0095                   l6857 0000  
                 l6699 0000                   l6971 02BE                   l6963 0000                   l6947 021E  
                 l6859 006A                   l6981 02D7                   l6973 02D1                   l6965 0295  
                 l6957 0261                   l6949 0000                   l6893 0000                   l6885 0000  
                 l6877 00BB                   l6869 0098                   l6799 0E52                   l6991 0000  
                 l6967 0000                   l6895 0000                   l6887 00E7                   l6879 0000  
                 l6993 030E                   l6985 02DE                   l6897 0000                   l6889 0000  
                 l6995 0323                   l6987 030A                   l6979 02C2                   l6899 0000  
                 l6999 0332                   STR_1 107C                   STR_2 1087                   u2015 0681  
                 u2105 08F1                   u4007 0C2B                   u2360 0000                   u2700 0BC3  
                 u2365 05B1                   u2525 052B                   u2605 0621                   u3085 0CB2  
                 u2800 0C09                   u2720 0BD0                   u2475 0E94                   u3515 0187  
                 u2820 0C16                   u2740 0BDB                   u3525 01BC                   u3470 0000  
                 u3615 02CB                   u2840 0C21                   u2760 0BE7                   u2665 0ED2  
                 u3715 0431                   u3555 01DB                   u3475 00FA                   _PEIE 005E  
                 u2780 0BFE                   u3645 0317                   u2854 0C23                   u2774 0BE9  
                 u3735 0446                   u3655 032D                   u3575 028E                   u3745 045C  
                 u3907 0B4A                   u3917 0C3B                   u3927 0C41                   u3937 0C4B  
                 u3857 0AF7                   u3785 0481                   u3947 0C51                   u3867 0B0A  
                 u3795 049C                   u3957 0BAE                   u3877 0B1D                   u3967 0BB4  
                 u3887 0B30                   u3977 0BEB                   u3897 0B3D                   u3987 0BF1  
                 u3997 0C25                   _main 0805                   _ngat 078F           ___ftpack@arg 0072  
         ___ftpack@exp 0075           lcd_busy@busy 0073                   btemp 007E                   start 000C  
    ___bmul@multiplier 0021           ___ftmul@cntr 003E           ___ftmul@sign 003F           ___fttol@exp1 0030  
         ___fttol@lval 002C         ??_lcd_put_byte 0073                  ?_main 0070                  ?_ngat 0070  
      __end_of___awdiv 0EAF        __end_of___lbdiv 0A6C        __end_of___ftadd 1800                  _CCPR1 0015  
      __end_of___awmod 0EEC        __end_of___lbmod 0A88        __end_of___ftdiv 0CD7        __end_of___ftneg 06C2  
                _ANSEL 0188        __end_of___lldiv 0642        __end_of___ftmul 0F5B        ___awdiv@divisor 0078  
      __end_of___llmod 054B        __end_of___ftsub 06FA        __end_of___fttol 05F9        ___awdiv@counter 0020  
                _TMR1H 000F                  _TMR1L 000E                  _TRISD 0088           ___lltoft@exp 007A  
                _scale 0CD7        __end_of_isdigit 0585          ___ftpack@sign 0076                  _putch 0509  
      __end_of_isprint 0C65                  pclath 000A                  status 0003                  wtemp0 007E  
      ___lbdiv@divisor 0077        ___lbdiv@counter 0079           __end_of_main 0881           __end_of_ngat 07BA  
        lcd_gotoxy@col 0078          lcd_gotoxy@row 0077                 ??_main 007C          ___fttol@sign1 002B  
               ??_ngat 0070   __size_of__tdiv_to_l_ 0078                 _CCP1M0 00B8                 _CCP1M1 00B9  
               _CCP1M2 00BA                 _CCP1M3 00BB                 _CCP1IE 0462                 _CCP1IF 0062  
     ___llmod@dividend 0029                 ?_scale 0040                 _CCPR1H 0016                 _CCPR1L 0015  
     ___awdiv@dividend 007A                 ?_putch 0070       __end_of___ftpack 0FA7                 _ANSELH 0189  
     __end_of___lltoft 06E2                 i1l2147 0000                 i1l6051 07B1                 _T1SYNC 0082  
               i1l6045 0000                 _TMR1GE 0086                 _TMR1CS 0081                 _TMR1ON 0080  
               _TRISC2 043A                 _TRISD1 0441                 _TRISD2 0442                 _TRISD3 0443  
               _TRISD4 0444                 _TRISD5 0445                 _TRISD6 0446                 _TRISD7 0447  
     __end_of_lcd_busy 0C57       __end_of_lcd_init 0BA0       __end_of_lcd_putc 0AE5                 ___bmul 0F5B  
               ___ftge 054B                 ___wmul 0585              ??___awdiv 007C              ??___lbdiv 0078  
            ??___ftadd 0046              ??___awmod 0076              ??___lbmod 0073              ??___ftdiv 002A  
            ??___ftneg 0075              ??___lldiv 007A              ??___ftmul 0037              ??___llmod 007A  
            ??___ftsub 007C              ??___fttol 0028                 _fround 094C       ___awdiv@quotient 0022  
      ___awmod@divisor 0072        ___awmod@counter 0076                 _printf 000F          lcd_put_byte@b 0072  
___ftmul@f3_as_product 003B              ??_isdigit 0072                 saved_w 007E              ??_isprint 0072  
               putch@c 007B       ___lbdiv@dividend 0078        ___lbmod@divisor 0072        ___lbmod@counter 0075  
 __end_of_lcd_put_byte 0C30             ___ftadd@f1 0040             ___ftadd@f2 0043             ___ftge@ff1 0072  
           ___ftge@ff2 0075             ___ftdiv@f1 0027             ___ftdiv@f2 0024             ___ftdiv@f3 002E  
           ___ftneg@f1 0072    ___bmul@multiplicand 007B             ___ftmul@f1 0031             ___ftmul@f2 0034  
           ___ftsub@f1 004F             ___ftsub@f2 004C             ___fttol@f1 0024         __pcstackCOMMON 0070  
           ___lltoft@c 0020          __end_of_scale 0E69          __end_of_putch 050D       ___lbdiv@quotient 007A  
           __div_to_l_ 0881      lcd_gotoxy@address 0079        __div_to_l_@exp1 002D        __div_to_l_@cntr 002C  
              ??_scale 0043        __div_to_l_@quot 0028                ??_putch 007B             __pbssBANK0 005F  
        __div_to_l_@f1 0072          __div_to_l_@f2 0075             __pmaintext 0805                ?___bmul 007B  
              ?___ftge 0072                ?___wmul 0072             __pintentry 0004                ?_fround 004C  
            ?___ftpack 0072                ?_printf 0056              ?___lltoft 0020                _T1CKPS0 0084  
              _T1CKPS1 0085             _lcd_gotoxy 0A9E              ?_lcd_busy 0070              ?_lcd_init 0070  
            ?_lcd_putc 0070             _scale$4104 0047        __size_of___bmul 000E        __size_of___ftge 002C  
              ___awdiv 0E69                ___lbdiv 0A51                ___ftadd 173E                ___awmod 0EAF  
              ___lbmod 0A6C                ___ftdiv 0C6F                ___ftneg 06BA                ___lldiv 05F9  
      __size_of___wmul 0019                ___ftmul 0EEC                ___llmod 050D                ___ftsub 06E2  
              ___fttol 059E                _ccp_old 005F             ??___ftpack 0077        __size_of_fround 0105  
           ??___lltoft 007A        __size_of_printf 04FA            ?__div_to_l_ 0072                _dpowers 1054  
              _isdigit 0577       ___awmod@dividend 0074                _isprint 0C57  __size_of_lcd_put_byte 0090  
           ??_lcd_busy 0072             ??_lcd_init 0077             ??_lcd_putc 007A   end_of_initialization 07C5  
       lcd_put_byte@rs 0075        ___lldiv@divisor 0072        ___lldiv@counter 0024                printf@c 00B8  
              printf@f 00AA         __tdiv_to_l_@f1 0072         __tdiv_to_l_@f2 0075          ??__tdiv_to_l_ 0078  
         _lcd_put_byte 0BA0       ___lbmod@dividend 0074            ?_lcd_gotoxy 0077            ___lbmod@rem 0076  
          printf@integ 00A5            ___ftdiv@exp 0031            printf@width 00AF    __size_of__div_to_l_ 00BE  
          ___ftmul@exp 003A         __end_of___bmul 0F69         __end_of___ftge 0577         __end_of___wmul 059E  
       __end_of_fround 0A51         __end_of_printf 0509    start_initialization 07BA    __end_of__tdiv_to_l_ 06BA  
      ___llmod@divisor 0025        ___llmod@counter 007A               ??___bmul 007C               ??___ftge 0078  
  __size_of_lcd_gotoxy 0018               ??___wmul 0076               ??_fround 007C               ??_printf 005A  
           fround@prec 0055      __size_of___ftpack 003E      __size_of___lltoft 0020          __pcstackBANK0 0020  
        __pcstackBANK1 00A0           _isdigit$3660 0072      __size_of_lcd_busy 0027      __size_of_lcd_init 00BB  
    __size_of_lcd_putc 002F               ?___awdiv 0078               ?___lbdiv 0077               ?___ftadd 0040  
            __ptext520 0509              __ptext521 0AB6              __ptext530 173E              __ptext522 06E2  
            __ptext531 0C30              __ptext523 0CD7               ?___awmod 0072              __ptext540 0F69  
            __ptext532 0BA0              __ptext524 094C              __ptext541 0A6C              __ptext533 0EAF  
            __ptext525 0A9E              __ptext550 0000              __ptext542 0A51              __ptext534 05F9  
            __ptext526 0AE5              __ptext543 0585              __ptext535 054B              __ptext527 06C2  
            __ptext519 000F              __ptext544 0F5B              __ptext536 06BA              __ptext528 0EEC  
            __ptext545 0881              __ptext537 050D              __ptext529 0C6F              __ptext546 0642  
            __ptext538 0E69              __ptext547 0577              __ptext539 059E               ?___lbmod 0072  
            __ptext548 0C57              __ptext549 078F               ?___ftdiv 0024               ?___ftneg 0072  
             ?___lldiv 0072               ?___ftmul 0031               ?___llmod 0025               ?___ftsub 004C  
            __npowers_ 1006               ?___fttol 0024              __pstrings 1000            __tdiv_to_l_ 0642  
         ??__div_to_l_ 0020               ?_isdigit 0070               ?_isprint 0070         __size_of_scale 0192  
       __size_of_putch 0004      interrupt_function 0004         ___wmul@product 0076     __end_of__div_to_l_ 093F  
          __stringbase 1005      ___wmul@multiplier 0072             printf@_val 00AB             printf@flag 00A8  
           printf@fval 00B3             printf@prec 00B6              lcd_putc@c 007A           ??_lcd_gotoxy 0078  
     lcd_put_byte@temp 0076           _isprint$3663 0072     __end_of_lcd_gotoxy 0AB6       __size_of___awdiv 0046  
     __size_of___lbdiv 001B       __size_of___ftadd 00C2       __size_of___awmod 003D       __size_of___lbmod 001C  
     __size_of___ftdiv 0068       __size_of___ftneg 0008       __size_of___lldiv 0049       __size_of___ftmul 006F  
     __size_of___llmod 003E       __size_of___ftsub 0018       __size_of___fttol 005B               ___ftpack 0F69  
          _fround$4102 0052            _fround$4103 004F               ___lltoft 06C2       __size_of_isdigit 000E  
     __size_of_isprint 000E               __powers_ 102D               _lcd_busy 0C30               _lcd_init 0AE5  
             _lcd_putc 0AB6          __size_of_main 007C          __size_of_ngat 002B              printf@exp 00B1  
             isdigit@c 0073               scale@scl 004A               intlevel1 0000       __tdiv_to_l_@exp1 0025  
     __tdiv_to_l_@cntr 0024       __tdiv_to_l_@quot 0020       ___lldiv@dividend 0076               isprint@c 0073  
            stringcode 1000               printf@ap 00A4           ?__tdiv_to_l_ 0072            _printf$3152 00A0  
     ___lldiv@quotient 0020               stringdir 1000               stringtab 1000  
